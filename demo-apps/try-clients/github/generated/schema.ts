export type Scalars = {
    String: string,
    ID: string,
    Int: number,
    Boolean: boolean,
    Date: any,
    DateTime: any,
    Float: number,
    GitObjectID: any,
    GitRefname: any,
    GitSSHRemote: any,
    GitTimestamp: any,
    HTML: string,
    PreciseDateTime: any,
    URI: string,
    X509Certificate: any,
}


/** Autogenerated return type of AcceptEnterpriseAdministratorInvitation */
export interface AcceptEnterpriseAdministratorInvitationPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The invitation that was accepted. */
    invitation?: EnterpriseAdministratorInvitation
    /** A message confirming the result of accepting an administrator invitation. */
    message?: Scalars['String']
    __typename: 'AcceptEnterpriseAdministratorInvitationPayload'
}


/** Autogenerated return type of AcceptTopicSuggestion */
export interface AcceptTopicSuggestionPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The accepted topic. */
    topic?: Topic
    __typename: 'AcceptTopicSuggestionPayload'
}


/** The possible capabilities for action executions setting. */
export type ActionExecutionCapabilitySetting = 'ALL_ACTIONS' | 'DISABLED' | 'LOCAL_ACTIONS_ONLY' | 'NO_POLICY'


/** Represents an object which can take actions on GitHub. Typically a User or Bot. */
export type Actor = (Bot | EnterpriseUserAccount | Mannequin | Organization | User) & { __isUnion?: true }


/** Location information for an actor */
export interface ActorLocation {
    /** City */
    city?: Scalars['String']
    /** Country name */
    country?: Scalars['String']
    /** Country code */
    countryCode?: Scalars['String']
    /** Region name */
    region?: Scalars['String']
    /** Region or state code */
    regionCode?: Scalars['String']
    __typename: 'ActorLocation'
}


/** Autogenerated return type of AddAssigneesToAssignable */
export interface AddAssigneesToAssignablePayload {
    /** The item that was assigned. */
    assignable?: Assignable
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'AddAssigneesToAssignablePayload'
}


/** Autogenerated return type of AddComment */
export interface AddCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The edge from the subject's comment connection. */
    commentEdge?: IssueCommentEdge
    /** The subject */
    subject?: Node
    /** The edge from the subject's timeline connection. */
    timelineEdge?: IssueTimelineItemEdge
    __typename: 'AddCommentPayload'
}


/** Autogenerated return type of AddLabelsToLabelable */
export interface AddLabelsToLabelablePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The item that was labeled. */
    labelable?: Labelable
    __typename: 'AddLabelsToLabelablePayload'
}


/** Autogenerated return type of AddProjectCard */
export interface AddProjectCardPayload {
    /** The edge from the ProjectColumn's card connection. */
    cardEdge?: ProjectCardEdge
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The ProjectColumn */
    projectColumn?: ProjectColumn
    __typename: 'AddProjectCardPayload'
}


/** Autogenerated return type of AddProjectColumn */
export interface AddProjectColumnPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The edge from the project's column connection. */
    columnEdge?: ProjectColumnEdge
    /** The project */
    project?: Project
    __typename: 'AddProjectColumnPayload'
}


/** Autogenerated return type of AddPullRequestReviewComment */
export interface AddPullRequestReviewCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The newly created comment. */
    comment?: PullRequestReviewComment
    /** The edge from the review's comment connection. */
    commentEdge?: PullRequestReviewCommentEdge
    __typename: 'AddPullRequestReviewCommentPayload'
}


/** Autogenerated return type of AddPullRequestReview */
export interface AddPullRequestReviewPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The newly created pull request review. */
    pullRequestReview?: PullRequestReview
    /** The edge from the pull request's review connection. */
    reviewEdge?: PullRequestReviewEdge
    __typename: 'AddPullRequestReviewPayload'
}


/** Autogenerated return type of AddPullRequestReviewThread */
export interface AddPullRequestReviewThreadPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The newly created thread. */
    thread?: PullRequestReviewThread
    __typename: 'AddPullRequestReviewThreadPayload'
}


/** Autogenerated return type of AddReaction */
export interface AddReactionPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The reaction object. */
    reaction?: Reaction
    /** The reactable subject. */
    subject?: Reactable
    __typename: 'AddReactionPayload'
}


/** Autogenerated return type of AddStar */
export interface AddStarPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The starrable. */
    starrable?: Starrable
    __typename: 'AddStarPayload'
}


/** Represents a 'added_to_project' event on a given issue or pull request. */
export interface AddedToProjectEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** Project referenced by event. */
    project?: Project
    /** Project card referenced by this project event. */
    projectCard?: ProjectCard
    /** Column name referenced by this project event. */
    projectColumnName: Scalars['String']
    __typename: 'AddedToProjectEvent'
}


/** A GitHub App. */
export interface App {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The description of the app. */
    description?: Scalars['String']
    id: Scalars['ID']
    /** The hex color code, without the leading '#', for the logo background. */
    logoBackgroundColor: Scalars['String']
    /** A URL pointing to the app's logo. */
    logoUrl: Scalars['URI']
    /** The name of the app. */
    name: Scalars['String']
    /** A slug based on the name of the app for use in URLs. */
    slug: Scalars['String']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The URL to the app's homepage. */
    url: Scalars['URI']
    __typename: 'App'
}


/** Autogenerated return type of ArchiveRepository */
export interface ArchiveRepositoryPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The repository that was marked as archived. */
    repository?: Repository
    __typename: 'ArchiveRepositoryPayload'
}


/** An object that can have users assigned to it. */
export type Assignable = (Issue | PullRequest) & { __isUnion?: true }


/** Represents an 'assigned' event on any assignable object. */
export interface AssignedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the assignable associated with the event. */
    assignable: Assignable
    /** Identifies the user or mannequin that was assigned. */
    assignee?: Assignee
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /**
     * @deprecated Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC.
     * Identifies the user who was assigned.
     */
    user?: User
    __typename: 'AssignedEvent'
}


/** Types that can be assigned to issues. */
export type Assignee = (Bot | Mannequin | Organization | User) & { __isUnion?: true }


/** An entry in the audit log. */
export type AuditEntry = (MembersCanDeleteReposClearAuditEntry | MembersCanDeleteReposDisableAuditEntry | MembersCanDeleteReposEnableAuditEntry | OauthApplicationCreateAuditEntry | OrgAddBillingManagerAuditEntry | OrgAddMemberAuditEntry | OrgBlockUserAuditEntry | OrgConfigDisableCollaboratorsOnlyAuditEntry | OrgConfigEnableCollaboratorsOnlyAuditEntry | OrgCreateAuditEntry | OrgDisableOauthAppRestrictionsAuditEntry | OrgDisableSamlAuditEntry | OrgDisableTwoFactorRequirementAuditEntry | OrgEnableOauthAppRestrictionsAuditEntry | OrgEnableSamlAuditEntry | OrgEnableTwoFactorRequirementAuditEntry | OrgInviteMemberAuditEntry | OrgInviteToBusinessAuditEntry | OrgOauthAppAccessApprovedAuditEntry | OrgOauthAppAccessDeniedAuditEntry | OrgOauthAppAccessRequestedAuditEntry | OrgRemoveBillingManagerAuditEntry | OrgRemoveMemberAuditEntry | OrgRemoveOutsideCollaboratorAuditEntry | OrgRestoreMemberAuditEntry | OrgUnblockUserAuditEntry | OrgUpdateDefaultRepositoryPermissionAuditEntry | OrgUpdateMemberAuditEntry | OrgUpdateMemberRepositoryCreationPermissionAuditEntry | OrgUpdateMemberRepositoryInvitationPermissionAuditEntry | PrivateRepositoryForkingDisableAuditEntry | PrivateRepositoryForkingEnableAuditEntry | RepoAccessAuditEntry | RepoAddMemberAuditEntry | RepoAddTopicAuditEntry | RepoArchivedAuditEntry | RepoChangeMergeSettingAuditEntry | RepoConfigDisableAnonymousGitAccessAuditEntry | RepoConfigDisableCollaboratorsOnlyAuditEntry | RepoConfigDisableContributorsOnlyAuditEntry | RepoConfigDisableSockpuppetDisallowedAuditEntry | RepoConfigEnableAnonymousGitAccessAuditEntry | RepoConfigEnableCollaboratorsOnlyAuditEntry | RepoConfigEnableContributorsOnlyAuditEntry | RepoConfigEnableSockpuppetDisallowedAuditEntry | RepoConfigLockAnonymousGitAccessAuditEntry | RepoConfigUnlockAnonymousGitAccessAuditEntry | RepoCreateAuditEntry | RepoDestroyAuditEntry | RepoRemoveMemberAuditEntry | RepoRemoveTopicAuditEntry | RepositoryVisibilityChangeDisableAuditEntry | RepositoryVisibilityChangeEnableAuditEntry | TeamAddMemberAuditEntry | TeamAddRepositoryAuditEntry | TeamChangeParentTeamAuditEntry | TeamRemoveMemberAuditEntry | TeamRemoveRepositoryAuditEntry) & { __isUnion?: true }


/** Types that can initiate an audit log event. */
export type AuditEntryActor = (Bot | Organization | User) & { __isUnion?: true }


/** Properties by which Audit Log connections can be ordered. */
export type AuditLogOrderField = 'CREATED_AT'


/** Represents a 'automatic_base_change_failed' event on a given pull request. */
export interface AutomaticBaseChangeFailedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** The new base for this PR */
    newBase: Scalars['String']
    /** The old base for this PR */
    oldBase: Scalars['String']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    __typename: 'AutomaticBaseChangeFailedEvent'
}


/** Represents a 'automatic_base_change_succeeded' event on a given pull request. */
export interface AutomaticBaseChangeSucceededEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** The new base for this PR */
    newBase: Scalars['String']
    /** The old base for this PR */
    oldBase: Scalars['String']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    __typename: 'AutomaticBaseChangeSucceededEvent'
}


/** Represents a 'base_ref_changed' event on a given issue or pull request. */
export interface BaseRefChangedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    __typename: 'BaseRefChangedEvent'
}


/** Represents a 'base_ref_force_pushed' event on a given pull request. */
export interface BaseRefForcePushedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the after commit SHA for the 'base_ref_force_pushed' event. */
    afterCommit?: Commit
    /** Identifies the before commit SHA for the 'base_ref_force_pushed' event. */
    beforeCommit?: Commit
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    /** Identifies the fully qualified ref name for the 'base_ref_force_pushed' event. */
    ref?: Ref
    __typename: 'BaseRefForcePushedEvent'
}


/** Represents a Git blame. */
export interface Blame {
    /** The list of ranges from a Git blame. */
    ranges: BlameRange[]
    __typename: 'Blame'
}


/** Represents a range of information from a Git blame. */
export interface BlameRange {
    /**
     * Identifies the recency of the change, from 1 (new) to 10 (old). This is
     * calculated as a 2-quantile and determines the length of distance between the
     * median age of all the changes in the file and the recency of the current
     * range's change.
     */
    age: Scalars['Int']
    /** Identifies the line author */
    commit: Commit
    /** The ending line for the range */
    endingLine: Scalars['Int']
    /** The starting line for the range */
    startingLine: Scalars['Int']
    __typename: 'BlameRange'
}


/** Represents a Git blob. */
export interface Blob {
    /** An abbreviated version of the Git object ID */
    abbreviatedOid: Scalars['String']
    /** Byte size of Blob object */
    byteSize: Scalars['Int']
    /** The HTTP path for this Git object */
    commitResourcePath: Scalars['URI']
    /** The HTTP URL for this Git object */
    commitUrl: Scalars['URI']
    id: Scalars['ID']
    /**
     * Indicates whether the Blob is binary or text
     * 
     * **Upcoming Change on 2019-07-01 UTC**
     * **Description:** Type for `isBinary` will change from `Boolean!` to `Boolean`.
     * **Reason:** The `isBinary` field may return `null` when it cannot determine if a Blob is binary.
     */
    isBinary: Scalars['Boolean']
    /** Indicates whether the contents is truncated */
    isTruncated: Scalars['Boolean']
    /** The Git object ID */
    oid: Scalars['GitObjectID']
    /** The Repository the Git object belongs to */
    repository: Repository
    /** UTF8 text data or null if the Blob is binary */
    text?: Scalars['String']
    __typename: 'Blob'
}


/** A special type of user which takes actions on behalf of GitHub Apps. */
export interface Bot {
    /** A URL pointing to the GitHub App's public avatar. */
    avatarUrl: Scalars['URI']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** The username of the actor. */
    login: Scalars['String']
    /** The HTTP path for this bot */
    resourcePath: Scalars['URI']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this bot */
    url: Scalars['URI']
    __typename: 'Bot'
}


/** A branch protection rule. */
export interface BranchProtectionRule {
    /** A list of conflicts matching branches protection rule and other branch protection rules */
    branchProtectionRuleConflicts: BranchProtectionRuleConflictConnection
    /** The actor who created this branch protection rule. */
    creator?: Actor
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** Will new commits pushed to matching branches dismiss pull request review approvals. */
    dismissesStaleReviews: Scalars['Boolean']
    id: Scalars['ID']
    /** Can admins overwrite branch protection. */
    isAdminEnforced: Scalars['Boolean']
    /** Repository refs that are protected by this rule */
    matchingRefs: RefConnection
    /** Identifies the protection rule pattern. */
    pattern: Scalars['String']
    /** A list push allowances for this branch protection rule. */
    pushAllowances: PushAllowanceConnection
    /** The repository associated with this branch protection rule. */
    repository?: Repository
    /** Number of approving reviews required to update matching branches. */
    requiredApprovingReviewCount?: Scalars['Int']
    /** List of required status check contexts that must pass for commits to be accepted to matching branches. */
    requiredStatusCheckContexts?: (Scalars['String'] | undefined)[]
    /** Are approving reviews required to update matching branches. */
    requiresApprovingReviews: Scalars['Boolean']
    /** Are reviews from code owners required to update matching branches. */
    requiresCodeOwnerReviews: Scalars['Boolean']
    /** Are commits required to be signed. */
    requiresCommitSignatures: Scalars['Boolean']
    /** Are status checks required to update matching branches. */
    requiresStatusChecks: Scalars['Boolean']
    /** Are branches required to be up to date before merging. */
    requiresStrictStatusChecks: Scalars['Boolean']
    /** Is pushing to matching branches restricted. */
    restrictsPushes: Scalars['Boolean']
    /** Is dismissal of pull request reviews restricted. */
    restrictsReviewDismissals: Scalars['Boolean']
    /** A list review dismissal allowances for this branch protection rule. */
    reviewDismissalAllowances: ReviewDismissalAllowanceConnection
    __typename: 'BranchProtectionRule'
}


/** A conflict between two branch protection rules. */
export interface BranchProtectionRuleConflict {
    /** Identifies the branch protection rule. */
    branchProtectionRule?: BranchProtectionRule
    /** Identifies the conflicting branch protection rule. */
    conflictingBranchProtectionRule?: BranchProtectionRule
    /** Identifies the branch ref that has conflicting rules */
    ref?: Ref
    __typename: 'BranchProtectionRuleConflict'
}


/** The connection type for BranchProtectionRuleConflict. */
export interface BranchProtectionRuleConflictConnection {
    /** A list of edges. */
    edges?: (BranchProtectionRuleConflictEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (BranchProtectionRuleConflict | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'BranchProtectionRuleConflictConnection'
}


/** An edge in a connection. */
export interface BranchProtectionRuleConflictEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: BranchProtectionRuleConflict
    __typename: 'BranchProtectionRuleConflictEdge'
}


/** The connection type for BranchProtectionRule. */
export interface BranchProtectionRuleConnection {
    /** A list of edges. */
    edges?: (BranchProtectionRuleEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (BranchProtectionRule | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'BranchProtectionRuleConnection'
}


/** An edge in a connection. */
export interface BranchProtectionRuleEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: BranchProtectionRule
    __typename: 'BranchProtectionRuleEdge'
}


/** Autogenerated return type of CancelEnterpriseAdminInvitation */
export interface CancelEnterpriseAdminInvitationPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The invitation that was canceled. */
    invitation?: EnterpriseAdministratorInvitation
    /** A message confirming the result of canceling an administrator invitation. */
    message?: Scalars['String']
    __typename: 'CancelEnterpriseAdminInvitationPayload'
}


/** Autogenerated return type of ChangeUserStatus */
export interface ChangeUserStatusPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** Your updated status. */
    status?: UserStatus
    __typename: 'ChangeUserStatusPayload'
}


/** A single check annotation. */
export interface CheckAnnotation {
    /** The annotation's severity level. */
    annotationLevel?: CheckAnnotationLevel
    /** The path to the file that this annotation was made on. */
    blobUrl: Scalars['URI']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The position of this annotation. */
    location: CheckAnnotationSpan
    /** The annotation's message. */
    message: Scalars['String']
    /** The path that this annotation was made on. */
    path: Scalars['String']
    /** Additional information about the annotation. */
    rawDetails?: Scalars['String']
    /** The annotation's title */
    title?: Scalars['String']
    __typename: 'CheckAnnotation'
}


/** The connection type for CheckAnnotation. */
export interface CheckAnnotationConnection {
    /** A list of edges. */
    edges?: (CheckAnnotationEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (CheckAnnotation | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CheckAnnotationConnection'
}


/** An edge in a connection. */
export interface CheckAnnotationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: CheckAnnotation
    __typename: 'CheckAnnotationEdge'
}


/** Represents an annotation's information level. */
export type CheckAnnotationLevel = 'FAILURE' | 'NOTICE' | 'WARNING'


/** A character position in a check annotation. */
export interface CheckAnnotationPosition {
    /** Column number (1 indexed). */
    column?: Scalars['Int']
    /** Line number (1 indexed). */
    line: Scalars['Int']
    __typename: 'CheckAnnotationPosition'
}


/** An inclusive pair of positions for a check annotation. */
export interface CheckAnnotationSpan {
    /** End position (inclusive). */
    end: CheckAnnotationPosition
    /** Start position (inclusive). */
    start: CheckAnnotationPosition
    __typename: 'CheckAnnotationSpan'
}


/** The possible states for a check suite or run conclusion. */
export type CheckConclusionState = 'ACTION_REQUIRED' | 'CANCELLED' | 'FAILURE' | 'NEUTRAL' | 'SKIPPED' | 'STALE' | 'SUCCESS' | 'TIMED_OUT'


/** A check run. */
export interface CheckRun {
    /** The check run's annotations */
    annotations?: CheckAnnotationConnection
    /** The check suite that this run is a part of. */
    checkSuite: CheckSuite
    /** Identifies the date and time when the check run was completed. */
    completedAt?: Scalars['DateTime']
    /** The conclusion of the check run. */
    conclusion?: CheckConclusionState
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The URL from which to find full details of the check run on the integrator's site. */
    detailsUrl?: Scalars['URI']
    /** A reference for the check run on the integrator's system. */
    externalId?: Scalars['String']
    id: Scalars['ID']
    /** The name of the check for this check run. */
    name: Scalars['String']
    /** The permalink to the check run summary. */
    permalink: Scalars['URI']
    /** The repository associated with this check run. */
    repository: Repository
    /** The HTTP path for this check run. */
    resourcePath: Scalars['URI']
    /** Identifies the date and time when the check run was started. */
    startedAt?: Scalars['DateTime']
    /** The current status of the check run. */
    status: CheckStatusState
    /** A string representing the check run's summary */
    summary?: Scalars['String']
    /** A string representing the check run's text */
    text?: Scalars['String']
    /** A string representing the check run */
    title?: Scalars['String']
    /** The HTTP URL for this check run. */
    url: Scalars['URI']
    __typename: 'CheckRun'
}


/** The connection type for CheckRun. */
export interface CheckRunConnection {
    /** A list of edges. */
    edges?: (CheckRunEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (CheckRun | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CheckRunConnection'
}


/** An edge in a connection. */
export interface CheckRunEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: CheckRun
    __typename: 'CheckRunEdge'
}


/** The possible types of check runs. */
export type CheckRunType = 'ALL' | 'LATEST'


/** The possible states for a check suite or run status. */
export type CheckStatusState = 'COMPLETED' | 'IN_PROGRESS' | 'QUEUED' | 'REQUESTED'


/** A check suite. */
export interface CheckSuite {
    /** The GitHub App which created this check suite. */
    app?: App
    /** The name of the branch for this check suite. */
    branch?: Ref
    /** The check runs associated with a check suite. */
    checkRuns?: CheckRunConnection
    /** The commit for this check suite */
    commit: Commit
    /** The conclusion of this check suite. */
    conclusion?: CheckConclusionState
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** A list of open pull requests matching the check suite. */
    matchingPullRequests?: PullRequestConnection
    /** The push that triggered this check suite. */
    push?: Push
    /** The repository associated with this check suite. */
    repository: Repository
    /** The HTTP path for this check suite */
    resourcePath: Scalars['URI']
    /** The status of this check suite. */
    status: CheckStatusState
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this check suite */
    url: Scalars['URI']
    __typename: 'CheckSuite'
}


/** The connection type for CheckSuite. */
export interface CheckSuiteConnection {
    /** A list of edges. */
    edges?: (CheckSuiteEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (CheckSuite | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CheckSuiteConnection'
}


/** An edge in a connection. */
export interface CheckSuiteEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: CheckSuite
    __typename: 'CheckSuiteEdge'
}


/** Autogenerated return type of ClearLabelsFromLabelable */
export interface ClearLabelsFromLabelablePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The item that was unlabeled. */
    labelable?: Labelable
    __typename: 'ClearLabelsFromLabelablePayload'
}


/** Autogenerated return type of CloneProject */
export interface CloneProjectPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The id of the JobStatus for populating cloned fields. */
    jobStatusId?: Scalars['String']
    /** The new cloned project. */
    project?: Project
    __typename: 'CloneProjectPayload'
}


/** Autogenerated return type of CloneTemplateRepository */
export interface CloneTemplateRepositoryPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new repository. */
    repository?: Repository
    __typename: 'CloneTemplateRepositoryPayload'
}


/** An object that can be closed */
export type Closable = (Issue | Milestone | Project | PullRequest) & { __isUnion?: true }


/** Autogenerated return type of CloseIssue */
export interface CloseIssuePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The issue that was closed. */
    issue?: Issue
    __typename: 'CloseIssuePayload'
}


/** Autogenerated return type of ClosePullRequest */
export interface ClosePullRequestPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The pull request that was closed. */
    pullRequest?: PullRequest
    __typename: 'ClosePullRequestPayload'
}


/** Represents a 'closed' event on any `Closable`. */
export interface ClosedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Object that was closed. */
    closable: Closable
    /** Object which triggered the creation of this event. */
    closer?: Closer
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** The HTTP path for this closed event. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this closed event. */
    url: Scalars['URI']
    __typename: 'ClosedEvent'
}


/** The object which triggered a `ClosedEvent`. */
export type Closer = (Commit | PullRequest) & { __isUnion?: true }


/** The Code of Conduct for a repository */
export interface CodeOfConduct {
    /** The body of the Code of Conduct */
    body?: Scalars['String']
    id: Scalars['ID']
    /** The key for the Code of Conduct */
    key: Scalars['String']
    /** The formal name of the Code of Conduct */
    name: Scalars['String']
    /** The HTTP path for this Code of Conduct */
    resourcePath?: Scalars['URI']
    /** The HTTP URL for this Code of Conduct */
    url?: Scalars['URI']
    __typename: 'CodeOfConduct'
}


/** Collaborators affiliation level with a subject. */
export type CollaboratorAffiliation = 'ALL' | 'DIRECT' | 'OUTSIDE'


/** Represents a comment. */
export type Comment = (CommitComment | GistComment | Issue | IssueComment | PullRequest | PullRequestReview | PullRequestReviewComment | TeamDiscussion | TeamDiscussionComment) & { __isUnion?: true }


/** A comment author association with repository. */
export type CommentAuthorAssociation = 'COLLABORATOR' | 'CONTRIBUTOR' | 'FIRST_TIMER' | 'FIRST_TIME_CONTRIBUTOR' | 'MEMBER' | 'NONE' | 'OWNER'


/** The possible errors that will prevent a user from updating a comment. */
export type CommentCannotUpdateReason = 'ARCHIVED' | 'DENIED' | 'INSUFFICIENT_ACCESS' | 'LOCKED' | 'LOGIN_REQUIRED' | 'MAINTENANCE' | 'VERIFIED_EMAIL_REQUIRED'


/** Represents a 'comment_deleted' event on a given issue or pull request. */
export interface CommentDeletedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    __typename: 'CommentDeletedEvent'
}


/** Represents a Git commit. */
export interface Commit {
    /** An abbreviated version of the Git object ID */
    abbreviatedOid: Scalars['String']
    /** The number of additions in this commit. */
    additions: Scalars['Int']
    /** The pull requests associated with a commit */
    associatedPullRequests?: PullRequestConnection
    /** Authorship details of the commit. */
    author?: GitActor
    /** Check if the committer and the author match. */
    authoredByCommitter: Scalars['Boolean']
    /** The datetime when this commit was authored. */
    authoredDate: Scalars['DateTime']
    /** Fetches `git blame` information. */
    blame: Blame
    /** The number of changed files in this commit. */
    changedFiles: Scalars['Int']
    /** The check suites associated with a commit. */
    checkSuites?: CheckSuiteConnection
    /** Comments made on the commit. */
    comments: CommitCommentConnection
    /** The HTTP path for this Git object */
    commitResourcePath: Scalars['URI']
    /** The HTTP URL for this Git object */
    commitUrl: Scalars['URI']
    /** The datetime when this commit was committed. */
    committedDate: Scalars['DateTime']
    /** Check if commited via GitHub web UI. */
    committedViaWeb: Scalars['Boolean']
    /** Committership details of the commit. */
    committer?: GitActor
    /** The number of deletions in this commit. */
    deletions: Scalars['Int']
    /** The deployments associated with a commit. */
    deployments?: DeploymentConnection
    /** The linear commit history starting from (and including) this commit, in the same order as `git log`. */
    history: CommitHistoryConnection
    id: Scalars['ID']
    /** The Git commit message */
    message: Scalars['String']
    /** The Git commit message body */
    messageBody: Scalars['String']
    /** The commit message body rendered to HTML. */
    messageBodyHTML: Scalars['HTML']
    /** The Git commit message headline */
    messageHeadline: Scalars['String']
    /** The commit message headline rendered to HTML. */
    messageHeadlineHTML: Scalars['HTML']
    /** The Git object ID */
    oid: Scalars['GitObjectID']
    /** The organization this commit was made on behalf of. */
    onBehalfOf?: Organization
    /** The parents of a commit. */
    parents: CommitConnection
    /** The datetime when this commit was pushed. */
    pushedDate?: Scalars['DateTime']
    /** The Repository this commit belongs to */
    repository: Repository
    /** The HTTP path for this commit */
    resourcePath: Scalars['URI']
    /** Commit signing information, if present. */
    signature?: GitSignature
    /** Status information for this commit */
    status?: Status
    /** Check and Status rollup information for this commit. */
    statusCheckRollup?: StatusCheckRollup
    /** Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file. */
    submodules: SubmoduleConnection
    /**
     * Returns a URL to download a tarball archive for a repository.
     * Note: For private repositories, these links are temporary and expire after five minutes.
     */
    tarballUrl: Scalars['URI']
    /** Commit's root Tree */
    tree: Tree
    /** The HTTP path for the tree of this commit */
    treeResourcePath: Scalars['URI']
    /** The HTTP URL for the tree of this commit */
    treeUrl: Scalars['URI']
    /** The HTTP URL for this commit */
    url: Scalars['URI']
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe: Scalars['Boolean']
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: SubscriptionState
    /**
     * Returns a URL to download a zipball archive for a repository.
     * Note: For private repositories, these links are temporary and expire after five minutes.
     */
    zipballUrl: Scalars['URI']
    __typename: 'Commit'
}


/** Represents a comment on a given Commit. */
export interface CommitComment {
    /** The actor who authored the comment. */
    author?: Actor
    /** Author's association with the subject of the comment. */
    authorAssociation: CommentAuthorAssociation
    /** Identifies the comment body. */
    body: Scalars['String']
    /** The body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** The body rendered to text. */
    bodyText: Scalars['String']
    /** Identifies the commit associated with the comment, if the commit exists. */
    commit?: Commit
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Check if this comment was created via an email reply. */
    createdViaEmail: Scalars['Boolean']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The actor who edited the comment. */
    editor?: Actor
    id: Scalars['ID']
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit: Scalars['Boolean']
    /** Returns whether or not a comment has been minimized. */
    isMinimized: Scalars['Boolean']
    /** The moment the editor made the last edit */
    lastEditedAt?: Scalars['DateTime']
    /** Returns why the comment was minimized. */
    minimizedReason?: Scalars['String']
    /** Identifies the file path associated with the comment. */
    path?: Scalars['String']
    /** Identifies the line position associated with the comment. */
    position?: Scalars['Int']
    /** Identifies when the comment was published at. */
    publishedAt?: Scalars['DateTime']
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroup[]
    /** A list of Reactions left on the Issue. */
    reactions: ReactionConnection
    /** The repository associated with this node. */
    repository: Repository
    /** The HTTP path permalink for this commit comment. */
    resourcePath: Scalars['URI']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL permalink for this commit comment. */
    url: Scalars['URI']
    /** A list of edits to this content. */
    userContentEdits?: UserContentEditConnection
    /** Check if the current viewer can delete this object. */
    viewerCanDelete: Scalars['Boolean']
    /** Check if the current viewer can minimize this object. */
    viewerCanMinimize: Scalars['Boolean']
    /** Can user react to this subject */
    viewerCanReact: Scalars['Boolean']
    /** Check if the current viewer can update this object. */
    viewerCanUpdate: Scalars['Boolean']
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons: CommentCannotUpdateReason[]
    /** Did the viewer author this comment. */
    viewerDidAuthor: Scalars['Boolean']
    __typename: 'CommitComment'
}


/** The connection type for CommitComment. */
export interface CommitCommentConnection {
    /** A list of edges. */
    edges?: (CommitCommentEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (CommitComment | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CommitCommentConnection'
}


/** An edge in a connection. */
export interface CommitCommentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: CommitComment
    __typename: 'CommitCommentEdge'
}


/** A thread of comments on a commit. */
export interface CommitCommentThread {
    /** The comments that exist in this thread. */
    comments: CommitCommentConnection
    /** The commit the comments were made on. */
    commit?: Commit
    id: Scalars['ID']
    /** The file the comments were made on. */
    path?: Scalars['String']
    /** The position in the diff for the commit that the comment was made on. */
    position?: Scalars['Int']
    /** The repository associated with this node. */
    repository: Repository
    __typename: 'CommitCommentThread'
}


/** The connection type for Commit. */
export interface CommitConnection {
    /** A list of edges. */
    edges?: (CommitEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Commit | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CommitConnection'
}


/** Properties by which commit contribution connections can be ordered. */
export type CommitContributionOrderField = 'COMMIT_COUNT' | 'OCCURRED_AT'


/** This aggregates commits made by a user within one repository. */
export interface CommitContributionsByRepository {
    /** The commit contributions, each representing a day. */
    contributions: CreatedCommitContributionConnection
    /** The repository in which the commits were made. */
    repository: Repository
    /** The HTTP path for the user's commits to the repository in this time range. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for the user's commits to the repository in this time range. */
    url: Scalars['URI']
    __typename: 'CommitContributionsByRepository'
}


/** An edge in a connection. */
export interface CommitEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Commit
    __typename: 'CommitEdge'
}


/** The connection type for Commit. */
export interface CommitHistoryConnection {
    /** A list of edges. */
    edges?: (CommitEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Commit | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CommitHistoryConnection'
}


/** Represents a 'connected' event on a given issue or pull request. */
export interface ConnectedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Reference originated in a different repository. */
    isCrossRepository: Scalars['Boolean']
    /** Issue or pull request that made the reference. */
    source: ReferencedSubject
    /** Issue or pull request which was connected. */
    subject: ReferencedSubject
    __typename: 'ConnectedEvent'
}


/** A content attachment */
export interface ContentAttachment {
    /** The body text of the content attachment. This parameter supports markdown. */
    body: Scalars['String']
    /** The content reference that the content attachment is attached to. */
    contentReference: ContentReference
    /** Identifies the primary key from the database. */
    databaseId: Scalars['Int']
    id: Scalars['ID']
    /** The title of the content attachment. */
    title: Scalars['String']
    __typename: 'ContentAttachment'
}


/** A content reference */
export interface ContentReference {
    /** Identifies the primary key from the database. */
    databaseId: Scalars['Int']
    id: Scalars['ID']
    /** The reference of the content reference. */
    reference: Scalars['String']
    __typename: 'ContentReference'
}


/** Represents a contribution a user made on GitHub, such as opening an issue. */
export type Contribution = (CreatedCommitContribution | CreatedIssueContribution | CreatedPullRequestContribution | CreatedPullRequestReviewContribution | CreatedRepositoryContribution | JoinedGitHubContribution | RestrictedContribution) & { __isUnion?: true }


/** A calendar of contributions made on GitHub by a user. */
export interface ContributionCalendar {
    /** A list of hex color codes used in this calendar. The darker the color, the more contributions it represents. */
    colors: Scalars['String'][]
    /** Determine if the color set was chosen because it's currently Halloween. */
    isHalloween: Scalars['Boolean']
    /** A list of the months of contributions in this calendar. */
    months: ContributionCalendarMonth[]
    /** The count of total contributions in the calendar. */
    totalContributions: Scalars['Int']
    /** A list of the weeks of contributions in this calendar. */
    weeks: ContributionCalendarWeek[]
    __typename: 'ContributionCalendar'
}


/** Represents a single day of contributions on GitHub by a user. */
export interface ContributionCalendarDay {
    /** The hex color code that represents how many contributions were made on this day compared to others in the calendar. */
    color: Scalars['String']
    /** How many contributions were made by the user on this day. */
    contributionCount: Scalars['Int']
    /** The day this square represents. */
    date: Scalars['Date']
    /** A number representing which day of the week this square represents, e.g., 1 is Monday. */
    weekday: Scalars['Int']
    __typename: 'ContributionCalendarDay'
}


/** A month of contributions in a user's contribution graph. */
export interface ContributionCalendarMonth {
    /** The date of the first day of this month. */
    firstDay: Scalars['Date']
    /** The name of the month. */
    name: Scalars['String']
    /** How many weeks started in this month. */
    totalWeeks: Scalars['Int']
    /** The year the month occurred in. */
    year: Scalars['Int']
    __typename: 'ContributionCalendarMonth'
}


/** A week of contributions in a user's contribution graph. */
export interface ContributionCalendarWeek {
    /** The days of contributions in this week. */
    contributionDays: ContributionCalendarDay[]
    /** The date of the earliest square in this week. */
    firstDay: Scalars['Date']
    __typename: 'ContributionCalendarWeek'
}


/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */
export interface ContributionsCollection {
    /** Commit contributions made by the user, grouped by repository. */
    commitContributionsByRepository: CommitContributionsByRepository[]
    /** A calendar of this user's contributions on GitHub. */
    contributionCalendar: ContributionCalendar
    /** The years the user has been making contributions with the most recent year first. */
    contributionYears: Scalars['Int'][]
    /** Determine if this collection's time span ends in the current month. */
    doesEndInCurrentMonth: Scalars['Boolean']
    /**
     * The date of the first restricted contribution the user made in this time
     * period. Can only be non-null when the user has enabled private contribution counts.
     */
    earliestRestrictedContributionDate?: Scalars['Date']
    /** The ending date and time of this collection. */
    endedAt: Scalars['DateTime']
    /**
     * The first issue the user opened on GitHub. This will be null if that issue was
     * opened outside the collection's time range and ignoreTimeRange is false. If
     * the issue is not visible but the user has opted to show private contributions,
     * a RestrictedContribution will be returned.
     */
    firstIssueContribution?: CreatedIssueOrRestrictedContribution
    /**
     * The first pull request the user opened on GitHub. This will be null if that
     * pull request was opened outside the collection's time range and
     * ignoreTimeRange is not true. If the pull request is not visible but the user
     * has opted to show private contributions, a RestrictedContribution will be returned.
     */
    firstPullRequestContribution?: CreatedPullRequestOrRestrictedContribution
    /**
     * The first repository the user created on GitHub. This will be null if that
     * first repository was created outside the collection's time range and
     * ignoreTimeRange is false. If the repository is not visible, then a
     * RestrictedContribution is returned.
     */
    firstRepositoryContribution?: CreatedRepositoryOrRestrictedContribution
    /** Does the user have any more activity in the timeline that occurred prior to the collection's time range? */
    hasActivityInThePast: Scalars['Boolean']
    /** Determine if there are any contributions in this collection. */
    hasAnyContributions: Scalars['Boolean']
    /**
     * Determine if the user made any contributions in this time frame whose details
     * are not visible because they were made in a private repository. Can only be
     * true if the user enabled private contribution counts.
     */
    hasAnyRestrictedContributions: Scalars['Boolean']
    /** Whether or not the collector's time span is all within the same day. */
    isSingleDay: Scalars['Boolean']
    /** A list of issues the user opened. */
    issueContributions: CreatedIssueContributionConnection
    /** Issue contributions made by the user, grouped by repository. */
    issueContributionsByRepository: IssueContributionsByRepository[]
    /**
     * When the user signed up for GitHub. This will be null if that sign up date
     * falls outside the collection's time range and ignoreTimeRange is false.
     */
    joinedGitHubContribution?: JoinedGitHubContribution
    /**
     * The date of the most recent restricted contribution the user made in this time
     * period. Can only be non-null when the user has enabled private contribution counts.
     */
    latestRestrictedContributionDate?: Scalars['Date']
    /**
     * When this collection's time range does not include any activity from the user, use this
     * to get a different collection from an earlier time range that does have activity.
     */
    mostRecentCollectionWithActivity?: ContributionsCollection
    /**
     * Returns a different contributions collection from an earlier time range than this one
     * that does not have any contributions.
     */
    mostRecentCollectionWithoutActivity?: ContributionsCollection
    /**
     * The issue the user opened on GitHub that received the most comments in the specified
     * time frame.
     */
    popularIssueContribution?: CreatedIssueContribution
    /**
     * The pull request the user opened on GitHub that received the most comments in the
     * specified time frame.
     */
    popularPullRequestContribution?: CreatedPullRequestContribution
    /** Pull request contributions made by the user. */
    pullRequestContributions: CreatedPullRequestContributionConnection
    /** Pull request contributions made by the user, grouped by repository. */
    pullRequestContributionsByRepository: PullRequestContributionsByRepository[]
    /** Pull request review contributions made by the user. */
    pullRequestReviewContributions: CreatedPullRequestReviewContributionConnection
    /** Pull request review contributions made by the user, grouped by repository. */
    pullRequestReviewContributionsByRepository: PullRequestReviewContributionsByRepository[]
    /** A list of repositories owned by the user that the user created in this time range. */
    repositoryContributions: CreatedRepositoryContributionConnection
    /**
     * A count of contributions made by the user that the viewer cannot access. Only
     * non-zero when the user has chosen to share their private contribution counts.
     */
    restrictedContributionsCount: Scalars['Int']
    /** The beginning date and time of this collection. */
    startedAt: Scalars['DateTime']
    /** How many commits were made by the user in this time span. */
    totalCommitContributions: Scalars['Int']
    /** How many issues the user opened. */
    totalIssueContributions: Scalars['Int']
    /** How many pull requests the user opened. */
    totalPullRequestContributions: Scalars['Int']
    /** How many pull request reviews the user left. */
    totalPullRequestReviewContributions: Scalars['Int']
    /** How many different repositories the user committed to. */
    totalRepositoriesWithContributedCommits: Scalars['Int']
    /** How many different repositories the user opened issues in. */
    totalRepositoriesWithContributedIssues: Scalars['Int']
    /** How many different repositories the user left pull request reviews in. */
    totalRepositoriesWithContributedPullRequestReviews: Scalars['Int']
    /** How many different repositories the user opened pull requests in. */
    totalRepositoriesWithContributedPullRequests: Scalars['Int']
    /** How many repositories the user created. */
    totalRepositoryContributions: Scalars['Int']
    /** The user who made the contributions in this collection. */
    user: User
    __typename: 'ContributionsCollection'
}


/** Autogenerated return type of ConvertProjectCardNoteToIssue */
export interface ConvertProjectCardNoteToIssuePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated ProjectCard. */
    projectCard?: ProjectCard
    __typename: 'ConvertProjectCardNoteToIssuePayload'
}


/** Represents a 'convert_to_draft' event on a given pull request. */
export interface ConvertToDraftEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    /** The HTTP path for this convert to draft event. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this convert to draft event. */
    url: Scalars['URI']
    __typename: 'ConvertToDraftEvent'
}


/** Represents a 'converted_note_to_issue' event on a given issue or pull request. */
export interface ConvertedNoteToIssueEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** Project referenced by event. */
    project?: Project
    /** Project card referenced by this project event. */
    projectCard?: ProjectCard
    /** Column name referenced by this project event. */
    projectColumnName: Scalars['String']
    __typename: 'ConvertedNoteToIssueEvent'
}


/** Autogenerated return type of CreateBranchProtectionRule */
export interface CreateBranchProtectionRulePayload {
    /** The newly created BranchProtectionRule. */
    branchProtectionRule?: BranchProtectionRule
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'CreateBranchProtectionRulePayload'
}


/** Autogenerated return type of CreateCheckRun */
export interface CreateCheckRunPayload {
    /** The newly created check run. */
    checkRun?: CheckRun
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'CreateCheckRunPayload'
}


/** Autogenerated return type of CreateCheckSuite */
export interface CreateCheckSuitePayload {
    /** The newly created check suite. */
    checkSuite?: CheckSuite
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'CreateCheckSuitePayload'
}


/** Autogenerated return type of CreateContentAttachment */
export interface CreateContentAttachmentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The newly created content attachment. */
    contentAttachment?: ContentAttachment
    __typename: 'CreateContentAttachmentPayload'
}


/** Autogenerated return type of CreateDeployment */
export interface CreateDeploymentPayload {
    /** True if the default branch has been auto-merged into the deployment ref. */
    autoMerged?: Scalars['Boolean']
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new deployment. */
    deployment?: Deployment
    __typename: 'CreateDeploymentPayload'
}


/** Autogenerated return type of CreateDeploymentStatus */
export interface CreateDeploymentStatusPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new deployment status. */
    deploymentStatus?: DeploymentStatus
    __typename: 'CreateDeploymentStatusPayload'
}


/** Autogenerated return type of CreateEnterpriseOrganization */
export interface CreateEnterpriseOrganizationPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise that owns the created organization. */
    enterprise?: Enterprise
    /** The organization that was created. */
    organization?: Organization
    __typename: 'CreateEnterpriseOrganizationPayload'
}


/** Autogenerated return type of CreateIpAllowListEntry */
export interface CreateIpAllowListEntryPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The IP allow list entry that was created. */
    ipAllowListEntry?: IpAllowListEntry
    __typename: 'CreateIpAllowListEntryPayload'
}


/** Autogenerated return type of CreateIssue */
export interface CreateIssuePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new issue. */
    issue?: Issue
    __typename: 'CreateIssuePayload'
}


/** Autogenerated return type of CreateLabel */
export interface CreateLabelPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new label. */
    label?: Label
    __typename: 'CreateLabelPayload'
}


/** Autogenerated return type of CreateProject */
export interface CreateProjectPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new project. */
    project?: Project
    __typename: 'CreateProjectPayload'
}


/** Autogenerated return type of CreatePullRequest */
export interface CreatePullRequestPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new pull request. */
    pullRequest?: PullRequest
    __typename: 'CreatePullRequestPayload'
}


/** Autogenerated return type of CreateRef */
export interface CreateRefPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The newly created ref. */
    ref?: Ref
    __typename: 'CreateRefPayload'
}


/** Autogenerated return type of CreateRepository */
export interface CreateRepositoryPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new repository. */
    repository?: Repository
    __typename: 'CreateRepositoryPayload'
}


/** Autogenerated return type of CreateTeamDiscussionComment */
export interface CreateTeamDiscussionCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new comment. */
    teamDiscussionComment?: TeamDiscussionComment
    __typename: 'CreateTeamDiscussionCommentPayload'
}


/** Autogenerated return type of CreateTeamDiscussion */
export interface CreateTeamDiscussionPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new discussion. */
    teamDiscussion?: TeamDiscussion
    __typename: 'CreateTeamDiscussionPayload'
}


/** Represents the contribution a user made by committing to a repository. */
export interface CreatedCommitContribution {
    /** How many commits were made on this day to this repository by the user. */
    commitCount: Scalars['Int']
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted: Scalars['Boolean']
    /** When this contribution was made. */
    occurredAt: Scalars['DateTime']
    /** The repository the user made a commit in. */
    repository: Repository
    /** The HTTP path for this contribution. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this contribution. */
    url: Scalars['URI']
    /** The user who made this contribution. */
    user: User
    __typename: 'CreatedCommitContribution'
}


/** The connection type for CreatedCommitContribution. */
export interface CreatedCommitContributionConnection {
    /** A list of edges. */
    edges?: (CreatedCommitContributionEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (CreatedCommitContribution | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of commits across days and repositories in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CreatedCommitContributionConnection'
}


/** An edge in a connection. */
export interface CreatedCommitContributionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: CreatedCommitContribution
    __typename: 'CreatedCommitContributionEdge'
}


/** Represents the contribution a user made on GitHub by opening an issue. */
export interface CreatedIssueContribution {
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted: Scalars['Boolean']
    /** The issue that was opened. */
    issue: Issue
    /** When this contribution was made. */
    occurredAt: Scalars['DateTime']
    /** The HTTP path for this contribution. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this contribution. */
    url: Scalars['URI']
    /** The user who made this contribution. */
    user: User
    __typename: 'CreatedIssueContribution'
}


/** The connection type for CreatedIssueContribution. */
export interface CreatedIssueContributionConnection {
    /** A list of edges. */
    edges?: (CreatedIssueContributionEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (CreatedIssueContribution | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CreatedIssueContributionConnection'
}


/** An edge in a connection. */
export interface CreatedIssueContributionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: CreatedIssueContribution
    __typename: 'CreatedIssueContributionEdge'
}


/** Represents either a issue the viewer can access or a restricted contribution. */
export type CreatedIssueOrRestrictedContribution = (CreatedIssueContribution | RestrictedContribution) & { __isUnion?: true }


/** Represents the contribution a user made on GitHub by opening a pull request. */
export interface CreatedPullRequestContribution {
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted: Scalars['Boolean']
    /** When this contribution was made. */
    occurredAt: Scalars['DateTime']
    /** The pull request that was opened. */
    pullRequest: PullRequest
    /** The HTTP path for this contribution. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this contribution. */
    url: Scalars['URI']
    /** The user who made this contribution. */
    user: User
    __typename: 'CreatedPullRequestContribution'
}


/** The connection type for CreatedPullRequestContribution. */
export interface CreatedPullRequestContributionConnection {
    /** A list of edges. */
    edges?: (CreatedPullRequestContributionEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (CreatedPullRequestContribution | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CreatedPullRequestContributionConnection'
}


/** An edge in a connection. */
export interface CreatedPullRequestContributionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: CreatedPullRequestContribution
    __typename: 'CreatedPullRequestContributionEdge'
}


/** Represents either a pull request the viewer can access or a restricted contribution. */
export type CreatedPullRequestOrRestrictedContribution = (CreatedPullRequestContribution | RestrictedContribution) & { __isUnion?: true }


/** Represents the contribution a user made by leaving a review on a pull request. */
export interface CreatedPullRequestReviewContribution {
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted: Scalars['Boolean']
    /** When this contribution was made. */
    occurredAt: Scalars['DateTime']
    /** The pull request the user reviewed. */
    pullRequest: PullRequest
    /** The review the user left on the pull request. */
    pullRequestReview: PullRequestReview
    /** The repository containing the pull request that the user reviewed. */
    repository: Repository
    /** The HTTP path for this contribution. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this contribution. */
    url: Scalars['URI']
    /** The user who made this contribution. */
    user: User
    __typename: 'CreatedPullRequestReviewContribution'
}


/** The connection type for CreatedPullRequestReviewContribution. */
export interface CreatedPullRequestReviewContributionConnection {
    /** A list of edges. */
    edges?: (CreatedPullRequestReviewContributionEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (CreatedPullRequestReviewContribution | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CreatedPullRequestReviewContributionConnection'
}


/** An edge in a connection. */
export interface CreatedPullRequestReviewContributionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: CreatedPullRequestReviewContribution
    __typename: 'CreatedPullRequestReviewContributionEdge'
}


/** Represents the contribution a user made on GitHub by creating a repository. */
export interface CreatedRepositoryContribution {
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted: Scalars['Boolean']
    /** When this contribution was made. */
    occurredAt: Scalars['DateTime']
    /** The repository that was created. */
    repository: Repository
    /** The HTTP path for this contribution. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this contribution. */
    url: Scalars['URI']
    /** The user who made this contribution. */
    user: User
    __typename: 'CreatedRepositoryContribution'
}


/** The connection type for CreatedRepositoryContribution. */
export interface CreatedRepositoryContributionConnection {
    /** A list of edges. */
    edges?: (CreatedRepositoryContributionEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (CreatedRepositoryContribution | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'CreatedRepositoryContributionConnection'
}


/** An edge in a connection. */
export interface CreatedRepositoryContributionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: CreatedRepositoryContribution
    __typename: 'CreatedRepositoryContributionEdge'
}


/** Represents either a repository the viewer can access or a restricted contribution. */
export type CreatedRepositoryOrRestrictedContribution = (CreatedRepositoryContribution | RestrictedContribution) & { __isUnion?: true }


/** Represents a mention made by one issue or pull request to another. */
export interface CrossReferencedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Reference originated in a different repository. */
    isCrossRepository: Scalars['Boolean']
    /** Identifies when the reference was made. */
    referencedAt: Scalars['DateTime']
    /** The HTTP path for this pull request. */
    resourcePath: Scalars['URI']
    /** Issue or pull request that made the reference. */
    source: ReferencedSubject
    /** Issue or pull request to which the reference was made. */
    target: ReferencedSubject
    /** The HTTP URL for this pull request. */
    url: Scalars['URI']
    /** Checks if the target will be closed when the source is merged. */
    willCloseTarget: Scalars['Boolean']
    __typename: 'CrossReferencedEvent'
}


/** Autogenerated return type of DeclineTopicSuggestion */
export interface DeclineTopicSuggestionPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The declined topic. */
    topic?: Topic
    __typename: 'DeclineTopicSuggestionPayload'
}


/** The possible default permissions for repositories. */
export type DefaultRepositoryPermissionField = 'ADMIN' | 'NONE' | 'READ' | 'WRITE'


/** Entities that can be deleted. */
export type Deletable = (CommitComment | GistComment | IssueComment | PullRequestReview | PullRequestReviewComment | TeamDiscussion | TeamDiscussionComment) & { __isUnion?: true }


/** Autogenerated return type of DeleteBranchProtectionRule */
export interface DeleteBranchProtectionRulePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'DeleteBranchProtectionRulePayload'
}


/** Autogenerated return type of DeleteDeployment */
export interface DeleteDeploymentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'DeleteDeploymentPayload'
}


/** Autogenerated return type of DeleteIpAllowListEntry */
export interface DeleteIpAllowListEntryPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The IP allow list entry that was deleted. */
    ipAllowListEntry?: IpAllowListEntry
    __typename: 'DeleteIpAllowListEntryPayload'
}


/** Autogenerated return type of DeleteIssueComment */
export interface DeleteIssueCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'DeleteIssueCommentPayload'
}


/** Autogenerated return type of DeleteIssue */
export interface DeleteIssuePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The repository the issue belonged to */
    repository?: Repository
    __typename: 'DeleteIssuePayload'
}


/** Autogenerated return type of DeleteLabel */
export interface DeleteLabelPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'DeleteLabelPayload'
}


/** Autogenerated return type of DeletePackageVersion */
export interface DeletePackageVersionPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** Whether or not the operation succeeded. */
    success?: Scalars['Boolean']
    __typename: 'DeletePackageVersionPayload'
}


/** Autogenerated return type of DeleteProjectCard */
export interface DeleteProjectCardPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The column the deleted card was in. */
    column?: ProjectColumn
    /** The deleted card ID. */
    deletedCardId?: Scalars['ID']
    __typename: 'DeleteProjectCardPayload'
}


/** Autogenerated return type of DeleteProjectColumn */
export interface DeleteProjectColumnPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The deleted column ID. */
    deletedColumnId?: Scalars['ID']
    /** The project the deleted column was in. */
    project?: Project
    __typename: 'DeleteProjectColumnPayload'
}


/** Autogenerated return type of DeleteProject */
export interface DeleteProjectPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The repository or organization the project was removed from. */
    owner?: ProjectOwner
    __typename: 'DeleteProjectPayload'
}


/** Autogenerated return type of DeletePullRequestReviewComment */
export interface DeletePullRequestReviewCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The pull request review the deleted comment belonged to. */
    pullRequestReview?: PullRequestReview
    __typename: 'DeletePullRequestReviewCommentPayload'
}


/** Autogenerated return type of DeletePullRequestReview */
export interface DeletePullRequestReviewPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The deleted pull request review. */
    pullRequestReview?: PullRequestReview
    __typename: 'DeletePullRequestReviewPayload'
}


/** Autogenerated return type of DeleteRef */
export interface DeleteRefPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'DeleteRefPayload'
}


/** Autogenerated return type of DeleteTeamDiscussionComment */
export interface DeleteTeamDiscussionCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'DeleteTeamDiscussionCommentPayload'
}


/** Autogenerated return type of DeleteTeamDiscussion */
export interface DeleteTeamDiscussionPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'DeleteTeamDiscussionPayload'
}


/** Represents a 'demilestoned' event on a given issue or pull request. */
export interface DemilestonedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Identifies the milestone title associated with the 'demilestoned' event. */
    milestoneTitle: Scalars['String']
    /** Object referenced by event. */
    subject: MilestoneItem
    __typename: 'DemilestonedEvent'
}


/** A dependency manifest entry */
export interface DependencyGraphDependency {
    /** Does the dependency itself have dependencies? */
    hasDependencies: Scalars['Boolean']
    /** The dependency package manager */
    packageManager?: Scalars['String']
    /** The required package name */
    packageName: Scalars['String']
    /** The repository containing the package */
    repository?: Repository
    /** The dependency version requirements */
    requirements: Scalars['String']
    __typename: 'DependencyGraphDependency'
}


/** The connection type for DependencyGraphDependency. */
export interface DependencyGraphDependencyConnection {
    /** A list of edges. */
    edges?: (DependencyGraphDependencyEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (DependencyGraphDependency | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'DependencyGraphDependencyConnection'
}


/** An edge in a connection. */
export interface DependencyGraphDependencyEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: DependencyGraphDependency
    __typename: 'DependencyGraphDependencyEdge'
}


/** Dependency manifest for a repository */
export interface DependencyGraphManifest {
    /** Path to view the manifest file blob */
    blobPath: Scalars['String']
    /** A list of manifest dependencies */
    dependencies?: DependencyGraphDependencyConnection
    /** The number of dependencies listed in the manifest */
    dependenciesCount?: Scalars['Int']
    /** Is the manifest too big to parse? */
    exceedsMaxSize: Scalars['Boolean']
    /** Fully qualified manifest filename */
    filename: Scalars['String']
    id: Scalars['ID']
    /** Were we able to parse the manifest? */
    parseable: Scalars['Boolean']
    /** The repository containing the manifest */
    repository: Repository
    __typename: 'DependencyGraphManifest'
}


/** The connection type for DependencyGraphManifest. */
export interface DependencyGraphManifestConnection {
    /** A list of edges. */
    edges?: (DependencyGraphManifestEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (DependencyGraphManifest | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'DependencyGraphManifestConnection'
}


/** An edge in a connection. */
export interface DependencyGraphManifestEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: DependencyGraphManifest
    __typename: 'DependencyGraphManifestEdge'
}


/** A repository deploy key. */
export interface DeployKey {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** The deploy key. */
    key: Scalars['String']
    /** Whether or not the deploy key is read only. */
    readOnly: Scalars['Boolean']
    /** The deploy key title. */
    title: Scalars['String']
    /** Whether or not the deploy key has been verified. */
    verified: Scalars['Boolean']
    __typename: 'DeployKey'
}


/** The connection type for DeployKey. */
export interface DeployKeyConnection {
    /** A list of edges. */
    edges?: (DeployKeyEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (DeployKey | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'DeployKeyConnection'
}


/** An edge in a connection. */
export interface DeployKeyEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: DeployKey
    __typename: 'DeployKeyEdge'
}


/** Represents a 'deployed' event on a given pull request. */
export interface DeployedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The deployment associated with the 'deployed' event. */
    deployment: Deployment
    id: Scalars['ID']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    /** The ref associated with the 'deployed' event. */
    ref?: Ref
    __typename: 'DeployedEvent'
}


/** Represents triggered deployment instance. */
export interface Deployment {
    /** Identifies the commit sha of the deployment. */
    commit?: Commit
    /** Identifies the oid of the deployment commit, even if the commit has been deleted. */
    commitOid: Scalars['String']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the actor who triggered the deployment. */
    creator: Actor
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The deployment description. */
    description?: Scalars['String']
    /** The latest environment to which this deployment was made. */
    environment?: Scalars['String']
    id: Scalars['ID']
    /** The latest environment to which this deployment was made. */
    latestEnvironment?: Scalars['String']
    /** The latest status of this deployment. */
    latestStatus?: DeploymentStatus
    /** The original environment to which this deployment was made. */
    originalEnvironment?: Scalars['String']
    /** Extra information that a deployment system might need. */
    payload?: Scalars['String']
    /** Identifies the Ref of the deployment, if the deployment was created by ref. */
    ref?: Ref
    /** Identifies the repository associated with the deployment. */
    repository: Repository
    /** The current state of the deployment. */
    state?: DeploymentState
    /** A list of statuses associated with the deployment. */
    statuses?: DeploymentStatusConnection
    /** The deployment task. */
    task?: Scalars['String']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'Deployment'
}


/** The connection type for Deployment. */
export interface DeploymentConnection {
    /** A list of edges. */
    edges?: (DeploymentEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Deployment | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'DeploymentConnection'
}


/** An edge in a connection. */
export interface DeploymentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Deployment
    __typename: 'DeploymentEdge'
}


/** Represents a 'deployment_environment_changed' event on a given pull request. */
export interface DeploymentEnvironmentChangedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The deployment status that updated the deployment environment. */
    deploymentStatus: DeploymentStatus
    id: Scalars['ID']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    __typename: 'DeploymentEnvironmentChangedEvent'
}


/** Properties by which deployment connections can be ordered. */
export type DeploymentOrderField = 'CREATED_AT'


/** The possible states in which a deployment can be. */
export type DeploymentState = 'ABANDONED' | 'ACTIVE' | 'DESTROYED' | 'ERROR' | 'FAILURE' | 'INACTIVE' | 'IN_PROGRESS' | 'PENDING' | 'QUEUED'


/** Describes the status of a given deployment attempt. */
export interface DeploymentStatus {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the actor who triggered the deployment. */
    creator: Actor
    /** Identifies the deployment associated with status. */
    deployment: Deployment
    /** Identifies the description of the deployment. */
    description?: Scalars['String']
    /** Identifies the environment of the deployment at the time of this deployment status */
    environment?: Scalars['String']
    /** Identifies the environment URL of the deployment. */
    environmentUrl?: Scalars['URI']
    id: Scalars['ID']
    /** Identifies the log URL of the deployment. */
    logUrl?: Scalars['URI']
    /** Identifies the current state of the deployment. */
    state: DeploymentStatusState
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'DeploymentStatus'
}


/** The connection type for DeploymentStatus. */
export interface DeploymentStatusConnection {
    /** A list of edges. */
    edges?: (DeploymentStatusEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (DeploymentStatus | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'DeploymentStatusConnection'
}


/** An edge in a connection. */
export interface DeploymentStatusEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: DeploymentStatus
    __typename: 'DeploymentStatusEdge'
}


/** The possible states for a deployment status. */
export type DeploymentStatusState = 'ERROR' | 'FAILURE' | 'INACTIVE' | 'IN_PROGRESS' | 'PENDING' | 'QUEUED' | 'SUCCESS'


/** The possible sides of a diff. */
export type DiffSide = 'LEFT' | 'RIGHT'


/** Represents a 'disconnected' event on a given issue or pull request. */
export interface DisconnectedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Reference originated in a different repository. */
    isCrossRepository: Scalars['Boolean']
    /** Issue or pull request from which the issue was disconnected. */
    source: ReferencedSubject
    /** Issue or pull request which was disconnected. */
    subject: ReferencedSubject
    __typename: 'DisconnectedEvent'
}


/** Autogenerated return type of DismissPullRequestReview */
export interface DismissPullRequestReviewPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The dismissed pull request review. */
    pullRequestReview?: PullRequestReview
    __typename: 'DismissPullRequestReviewPayload'
}


/** An account to manage multiple organizations with consolidated policy and billing. */
export interface Enterprise {
    /** A URL pointing to the enterprise's public avatar. */
    avatarUrl: Scalars['URI']
    /** Enterprise billing information visible to enterprise billing managers. */
    billingInfo?: EnterpriseBillingInfo
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The description of the enterprise. */
    description?: Scalars['String']
    /** The description of the enterprise as HTML. */
    descriptionHTML: Scalars['HTML']
    id: Scalars['ID']
    /** The location of the enterprise. */
    location?: Scalars['String']
    /** A list of users who are members of this enterprise. */
    members: EnterpriseMemberConnection
    /** The name of the enterprise. */
    name: Scalars['String']
    /** A list of organizations that belong to this enterprise. */
    organizations: OrganizationConnection
    /** Enterprise information only visible to enterprise owners. */
    ownerInfo?: EnterpriseOwnerInfo
    /** The HTTP path for this enterprise. */
    resourcePath: Scalars['URI']
    /** The URL-friendly identifier for the enterprise. */
    slug: Scalars['String']
    /** The HTTP URL for this enterprise. */
    url: Scalars['URI']
    /** A list of user accounts on this enterprise. */
    userAccounts: EnterpriseUserAccountConnection
    /** Is the current viewer an admin of this enterprise? */
    viewerIsAdmin: Scalars['Boolean']
    /** The URL of the enterprise website. */
    websiteUrl?: Scalars['URI']
    __typename: 'Enterprise'
}


/** The connection type for User. */
export interface EnterpriseAdministratorConnection {
    /** A list of edges. */
    edges?: (EnterpriseAdministratorEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseAdministratorConnection'
}


/** A User who is an administrator of an enterprise. */
export interface EnterpriseAdministratorEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: User
    /** The role of the administrator. */
    role: EnterpriseAdministratorRole
    __typename: 'EnterpriseAdministratorEdge'
}


/** An invitation for a user to become an owner or billing manager of an enterprise. */
export interface EnterpriseAdministratorInvitation {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The email of the person who was invited to the enterprise. */
    email?: Scalars['String']
    /** The enterprise the invitation is for. */
    enterprise: Enterprise
    id: Scalars['ID']
    /** The user who was invited to the enterprise. */
    invitee?: User
    /** The user who created the invitation. */
    inviter?: User
    /** The invitee's pending role in the enterprise (owner or billing_manager). */
    role: EnterpriseAdministratorRole
    __typename: 'EnterpriseAdministratorInvitation'
}


/** The connection type for EnterpriseAdministratorInvitation. */
export interface EnterpriseAdministratorInvitationConnection {
    /** A list of edges. */
    edges?: (EnterpriseAdministratorInvitationEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (EnterpriseAdministratorInvitation | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseAdministratorInvitationConnection'
}


/** An edge in a connection. */
export interface EnterpriseAdministratorInvitationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: EnterpriseAdministratorInvitation
    __typename: 'EnterpriseAdministratorInvitationEdge'
}


/** Properties by which enterprise administrator invitation connections can be ordered. */
export type EnterpriseAdministratorInvitationOrderField = 'CREATED_AT'


/** The possible administrator roles in an enterprise account. */
export type EnterpriseAdministratorRole = 'BILLING_MANAGER' | 'OWNER'


/** Metadata for an audit entry containing enterprise account information. */
export type EnterpriseAuditEntryData = (MembersCanDeleteReposClearAuditEntry | MembersCanDeleteReposDisableAuditEntry | MembersCanDeleteReposEnableAuditEntry | OrgInviteToBusinessAuditEntry | PrivateRepositoryForkingDisableAuditEntry | PrivateRepositoryForkingEnableAuditEntry | RepositoryVisibilityChangeDisableAuditEntry | RepositoryVisibilityChangeEnableAuditEntry) & { __isUnion?: true }


/** Enterprise billing information visible to enterprise billing managers and owners. */
export interface EnterpriseBillingInfo {
    /** The number of licenseable users/emails across the enterprise. */
    allLicensableUsersCount: Scalars['Int']
    /** The number of data packs used by all organizations owned by the enterprise. */
    assetPacks: Scalars['Int']
    /**
     * @deprecated `availableSeats` will be replaced with `totalAvailableLicenses` to provide more clarity on the value being returned Use EnterpriseBillingInfo.totalAvailableLicenses instead. Removal on 2020-01-01 UTC.
     * The number of available seats across all owned organizations based on the unique number of billable users.
     */
    availableSeats: Scalars['Int']
    /** The bandwidth quota in GB for all organizations owned by the enterprise. */
    bandwidthQuota: Scalars['Float']
    /** The bandwidth usage in GB for all organizations owned by the enterprise. */
    bandwidthUsage: Scalars['Float']
    /** The bandwidth usage as a percentage of the bandwidth quota. */
    bandwidthUsagePercentage: Scalars['Int']
    /**
     * @deprecated `seats` will be replaced with `totalLicenses` to provide more clarity on the value being returned Use EnterpriseBillingInfo.totalLicenses instead. Removal on 2020-01-01 UTC.
     * The total seats across all organizations owned by the enterprise.
     */
    seats: Scalars['Int']
    /** The storage quota in GB for all organizations owned by the enterprise. */
    storageQuota: Scalars['Float']
    /** The storage usage in GB for all organizations owned by the enterprise. */
    storageUsage: Scalars['Float']
    /** The storage usage as a percentage of the storage quota. */
    storageUsagePercentage: Scalars['Int']
    /** The number of available licenses across all owned organizations based on the unique number of billable users. */
    totalAvailableLicenses: Scalars['Int']
    /** The total number of licenses allocated. */
    totalLicenses: Scalars['Int']
    __typename: 'EnterpriseBillingInfo'
}


/** The possible values for the enterprise default repository permission setting. */
export type EnterpriseDefaultRepositoryPermissionSettingValue = 'ADMIN' | 'NONE' | 'NO_POLICY' | 'READ' | 'WRITE'


/** The possible values for an enabled/disabled enterprise setting. */
export type EnterpriseEnabledDisabledSettingValue = 'DISABLED' | 'ENABLED' | 'NO_POLICY'


/** The possible values for an enabled/no policy enterprise setting. */
export type EnterpriseEnabledSettingValue = 'ENABLED' | 'NO_POLICY'


/** An identity provider configured to provision identities for an enterprise. */
export interface EnterpriseIdentityProvider {
    /** The digest algorithm used to sign SAML requests for the identity provider. */
    digestMethod?: SamlDigestAlgorithm
    /** The enterprise this identity provider belongs to. */
    enterprise?: Enterprise
    /** ExternalIdentities provisioned by this identity provider. */
    externalIdentities: ExternalIdentityConnection
    id: Scalars['ID']
    /** The x509 certificate used by the identity provider to sign assertions and responses. */
    idpCertificate?: Scalars['X509Certificate']
    /** The Issuer Entity ID for the SAML identity provider. */
    issuer?: Scalars['String']
    /** Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable. */
    recoveryCodes?: Scalars['String'][]
    /** The signature algorithm used to sign SAML requests for the identity provider. */
    signatureMethod?: SamlSignatureAlgorithm
    /** The URL endpoint for the identity provider's SAML SSO. */
    ssoUrl?: Scalars['URI']
    __typename: 'EnterpriseIdentityProvider'
}


/** An object that is a member of an enterprise. */
export type EnterpriseMember = (EnterpriseUserAccount | User) & { __isUnion?: true }


/** The connection type for EnterpriseMember. */
export interface EnterpriseMemberConnection {
    /** A list of edges. */
    edges?: (EnterpriseMemberEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (EnterpriseMember | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseMemberConnection'
}


/** A User who is a member of an enterprise through one or more organizations. */
export interface EnterpriseMemberEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** Whether the user does not have a license for the enterprise. */
    isUnlicensed: Scalars['Boolean']
    /** The item at the end of the edge. */
    node?: EnterpriseMember
    __typename: 'EnterpriseMemberEdge'
}


/** Properties by which enterprise member connections can be ordered. */
export type EnterpriseMemberOrderField = 'CREATED_AT' | 'LOGIN'


/** The possible values for the enterprise members can create repositories setting. */
export type EnterpriseMembersCanCreateRepositoriesSettingValue = 'ALL' | 'DISABLED' | 'NO_POLICY' | 'PRIVATE' | 'PUBLIC'


/** The possible values for the members can make purchases setting. */
export type EnterpriseMembersCanMakePurchasesSettingValue = 'DISABLED' | 'ENABLED'


/** The connection type for Organization. */
export interface EnterpriseOrganizationMembershipConnection {
    /** A list of edges. */
    edges?: (EnterpriseOrganizationMembershipEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Organization | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseOrganizationMembershipConnection'
}


/** An enterprise organization that a user is a member of. */
export interface EnterpriseOrganizationMembershipEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Organization
    /** The role of the user in the enterprise membership. */
    role: EnterpriseUserAccountMembershipRole
    __typename: 'EnterpriseOrganizationMembershipEdge'
}


/** The connection type for User. */
export interface EnterpriseOutsideCollaboratorConnection {
    /** A list of edges. */
    edges?: (EnterpriseOutsideCollaboratorEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseOutsideCollaboratorConnection'
}


/** A User who is an outside collaborator of an enterprise through one or more organizations. */
export interface EnterpriseOutsideCollaboratorEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** Whether the outside collaborator does not have a license for the enterprise. */
    isUnlicensed: Scalars['Boolean']
    /** The item at the end of the edge. */
    node?: User
    /** The enterprise organization repositories this user is a member of. */
    repositories: EnterpriseRepositoryInfoConnection
    __typename: 'EnterpriseOutsideCollaboratorEdge'
}


/** Enterprise information only visible to enterprise owners. */
export interface EnterpriseOwnerInfo {
    /** A list of enterprise organizations configured with the provided action execution capabilities setting value. */
    actionExecutionCapabilitySettingOrganizations: OrganizationConnection
    /** A list of all of the administrators for this enterprise. */
    admins: EnterpriseAdministratorConnection
    /** A list of users in the enterprise who currently have two-factor authentication disabled. */
    affiliatedUsersWithTwoFactorDisabled: UserConnection
    /** Whether or not affiliated users with two-factor authentication disabled exist in the enterprise. */
    affiliatedUsersWithTwoFactorDisabledExist: Scalars['Boolean']
    /** The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise. */
    allowPrivateRepositoryForkingSetting: EnterpriseEnabledDisabledSettingValue
    /** A list of enterprise organizations configured with the provided private repository forking setting value. */
    allowPrivateRepositoryForkingSettingOrganizations: OrganizationConnection
    /** The setting value for base repository permissions for organizations in this enterprise. */
    defaultRepositoryPermissionSetting: EnterpriseDefaultRepositoryPermissionSettingValue
    /** A list of enterprise organizations configured with the provided default repository permission. */
    defaultRepositoryPermissionSettingOrganizations: OrganizationConnection
    /** Enterprise Server installations owned by the enterprise. */
    enterpriseServerInstallations: EnterpriseServerInstallationConnection
    /** The setting value for whether the enterprise has an IP allow list enabled. */
    ipAllowListEnabledSetting: IpAllowListEnabledSettingValue
    /** The IP addresses that are allowed to access resources owned by the enterprise. */
    ipAllowListEntries: IpAllowListEntryConnection
    /** Whether or not the default repository permission is currently being updated. */
    isUpdatingDefaultRepositoryPermission: Scalars['Boolean']
    /** Whether the two-factor authentication requirement is currently being enforced. */
    isUpdatingTwoFactorRequirement: Scalars['Boolean']
    /**
     * The setting value for whether organization members with admin permissions on a
     * repository can change repository visibility.
     */
    membersCanChangeRepositoryVisibilitySetting: EnterpriseEnabledDisabledSettingValue
    /** A list of enterprise organizations configured with the provided can change repository visibility setting value. */
    membersCanChangeRepositoryVisibilitySettingOrganizations: OrganizationConnection
    /** The setting value for whether members of organizations in the enterprise can create internal repositories. */
    membersCanCreateInternalRepositoriesSetting?: Scalars['Boolean']
    /** The setting value for whether members of organizations in the enterprise can create private repositories. */
    membersCanCreatePrivateRepositoriesSetting?: Scalars['Boolean']
    /** The setting value for whether members of organizations in the enterprise can create public repositories. */
    membersCanCreatePublicRepositoriesSetting?: Scalars['Boolean']
    /** The setting value for whether members of organizations in the enterprise can create repositories. */
    membersCanCreateRepositoriesSetting?: EnterpriseMembersCanCreateRepositoriesSettingValue
    /** A list of enterprise organizations configured with the provided repository creation setting value. */
    membersCanCreateRepositoriesSettingOrganizations: OrganizationConnection
    /** The setting value for whether members with admin permissions for repositories can delete issues. */
    membersCanDeleteIssuesSetting: EnterpriseEnabledDisabledSettingValue
    /** A list of enterprise organizations configured with the provided members can delete issues setting value. */
    membersCanDeleteIssuesSettingOrganizations: OrganizationConnection
    /** The setting value for whether members with admin permissions for repositories can delete or transfer repositories. */
    membersCanDeleteRepositoriesSetting: EnterpriseEnabledDisabledSettingValue
    /** A list of enterprise organizations configured with the provided members can delete repositories setting value. */
    membersCanDeleteRepositoriesSettingOrganizations: OrganizationConnection
    /** The setting value for whether members of organizations in the enterprise can invite outside collaborators. */
    membersCanInviteCollaboratorsSetting: EnterpriseEnabledDisabledSettingValue
    /** A list of enterprise organizations configured with the provided members can invite collaborators setting value. */
    membersCanInviteCollaboratorsSettingOrganizations: OrganizationConnection
    /** Indicates whether members of this enterprise's organizations can purchase additional services for those organizations. */
    membersCanMakePurchasesSetting: EnterpriseMembersCanMakePurchasesSettingValue
    /** The setting value for whether members with admin permissions for repositories can update protected branches. */
    membersCanUpdateProtectedBranchesSetting: EnterpriseEnabledDisabledSettingValue
    /** A list of enterprise organizations configured with the provided members can update protected branches setting value. */
    membersCanUpdateProtectedBranchesSettingOrganizations: OrganizationConnection
    /** The setting value for whether members can view dependency insights. */
    membersCanViewDependencyInsightsSetting: EnterpriseEnabledDisabledSettingValue
    /** A list of enterprise organizations configured with the provided members can view dependency insights setting value. */
    membersCanViewDependencyInsightsSettingOrganizations: OrganizationConnection
    /** The setting value for whether organization projects are enabled for organizations in this enterprise. */
    organizationProjectsSetting: EnterpriseEnabledDisabledSettingValue
    /** A list of enterprise organizations configured with the provided organization projects setting value. */
    organizationProjectsSettingOrganizations: OrganizationConnection
    /** A list of outside collaborators across the repositories in the enterprise. */
    outsideCollaborators: EnterpriseOutsideCollaboratorConnection
    /** A list of pending administrator invitations for the enterprise. */
    pendingAdminInvitations: EnterpriseAdministratorInvitationConnection
    /** A list of pending collaborator invitations across the repositories in the enterprise. */
    pendingCollaboratorInvitations: RepositoryInvitationConnection
    /**
     * @deprecated Repository invitations can now be associated with an email, not only an invitee. Use the `pendingCollaboratorInvitations` field instead. Removal on 2020-10-01 UTC.
     * A list of pending collaborators across the repositories in the enterprise.
     */
    pendingCollaborators: EnterprisePendingCollaboratorConnection
    /** A list of pending member invitations for organizations in the enterprise. */
    pendingMemberInvitations: EnterprisePendingMemberInvitationConnection
    /** The setting value for whether repository projects are enabled in this enterprise. */
    repositoryProjectsSetting: EnterpriseEnabledDisabledSettingValue
    /** A list of enterprise organizations configured with the provided repository projects setting value. */
    repositoryProjectsSettingOrganizations: OrganizationConnection
    /** The SAML Identity Provider for the enterprise. */
    samlIdentityProvider?: EnterpriseIdentityProvider
    /** A list of enterprise organizations configured with the SAML single sign-on setting value. */
    samlIdentityProviderSettingOrganizations: OrganizationConnection
    /** The setting value for whether team discussions are enabled for organizations in this enterprise. */
    teamDiscussionsSetting: EnterpriseEnabledDisabledSettingValue
    /** A list of enterprise organizations configured with the provided team discussions setting value. */
    teamDiscussionsSettingOrganizations: OrganizationConnection
    /** The setting value for whether the enterprise requires two-factor authentication for its organizations and users. */
    twoFactorRequiredSetting: EnterpriseEnabledSettingValue
    /** A list of enterprise organizations configured with the two-factor authentication setting value. */
    twoFactorRequiredSettingOrganizations: OrganizationConnection
    __typename: 'EnterpriseOwnerInfo'
}


/** The connection type for User. */
export interface EnterprisePendingCollaboratorConnection {
    /** A list of edges. */
    edges?: (EnterprisePendingCollaboratorEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterprisePendingCollaboratorConnection'
}


/** A user with an invitation to be a collaborator on a repository owned by an organization in an enterprise. */
export interface EnterprisePendingCollaboratorEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** Whether the invited collaborator does not have a license for the enterprise. */
    isUnlicensed: Scalars['Boolean']
    /** The item at the end of the edge. */
    node?: User
    /** The enterprise organization repositories this user is a member of. */
    repositories: EnterpriseRepositoryInfoConnection
    __typename: 'EnterprisePendingCollaboratorEdge'
}


/** The connection type for OrganizationInvitation. */
export interface EnterprisePendingMemberInvitationConnection {
    /** A list of edges. */
    edges?: (EnterprisePendingMemberInvitationEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (OrganizationInvitation | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    /** Identifies the total count of unique users in the connection. */
    totalUniqueUserCount: Scalars['Int']
    __typename: 'EnterprisePendingMemberInvitationConnection'
}


/** An invitation to be a member in an enterprise organization. */
export interface EnterprisePendingMemberInvitationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** Whether the invitation has a license for the enterprise. */
    isUnlicensed: Scalars['Boolean']
    /** The item at the end of the edge. */
    node?: OrganizationInvitation
    __typename: 'EnterprisePendingMemberInvitationEdge'
}


/** A subset of repository information queryable from an enterprise. */
export interface EnterpriseRepositoryInfo {
    id: Scalars['ID']
    /** Identifies if the repository is private. */
    isPrivate: Scalars['Boolean']
    /** The repository's name. */
    name: Scalars['String']
    /** The repository's name with owner. */
    nameWithOwner: Scalars['String']
    __typename: 'EnterpriseRepositoryInfo'
}


/** The connection type for EnterpriseRepositoryInfo. */
export interface EnterpriseRepositoryInfoConnection {
    /** A list of edges. */
    edges?: (EnterpriseRepositoryInfoEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (EnterpriseRepositoryInfo | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseRepositoryInfoConnection'
}


/** An edge in a connection. */
export interface EnterpriseRepositoryInfoEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: EnterpriseRepositoryInfo
    __typename: 'EnterpriseRepositoryInfoEdge'
}


/** An Enterprise Server installation. */
export interface EnterpriseServerInstallation {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The customer name to which the Enterprise Server installation belongs. */
    customerName: Scalars['String']
    /** The host name of the Enterprise Server installation. */
    hostName: Scalars['String']
    id: Scalars['ID']
    /** Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect. */
    isConnected: Scalars['Boolean']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** User accounts on this Enterprise Server installation. */
    userAccounts: EnterpriseServerUserAccountConnection
    /** User accounts uploads for the Enterprise Server installation. */
    userAccountsUploads: EnterpriseServerUserAccountsUploadConnection
    __typename: 'EnterpriseServerInstallation'
}


/** The connection type for EnterpriseServerInstallation. */
export interface EnterpriseServerInstallationConnection {
    /** A list of edges. */
    edges?: (EnterpriseServerInstallationEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (EnterpriseServerInstallation | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseServerInstallationConnection'
}


/** An edge in a connection. */
export interface EnterpriseServerInstallationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: EnterpriseServerInstallation
    __typename: 'EnterpriseServerInstallationEdge'
}


/** Properties by which Enterprise Server installation connections can be ordered. */
export type EnterpriseServerInstallationOrderField = 'CREATED_AT' | 'CUSTOMER_NAME' | 'HOST_NAME'


/** A user account on an Enterprise Server installation. */
export interface EnterpriseServerUserAccount {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** User emails belonging to this user account. */
    emails: EnterpriseServerUserAccountEmailConnection
    /** The Enterprise Server installation on which this user account exists. */
    enterpriseServerInstallation: EnterpriseServerInstallation
    id: Scalars['ID']
    /** Whether the user account is a site administrator on the Enterprise Server installation. */
    isSiteAdmin: Scalars['Boolean']
    /** The login of the user account on the Enterprise Server installation. */
    login: Scalars['String']
    /** The profile name of the user account on the Enterprise Server installation. */
    profileName?: Scalars['String']
    /** The date and time when the user account was created on the Enterprise Server installation. */
    remoteCreatedAt: Scalars['DateTime']
    /** The ID of the user account on the Enterprise Server installation. */
    remoteUserId: Scalars['Int']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'EnterpriseServerUserAccount'
}


/** The connection type for EnterpriseServerUserAccount. */
export interface EnterpriseServerUserAccountConnection {
    /** A list of edges. */
    edges?: (EnterpriseServerUserAccountEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (EnterpriseServerUserAccount | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseServerUserAccountConnection'
}


/** An edge in a connection. */
export interface EnterpriseServerUserAccountEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: EnterpriseServerUserAccount
    __typename: 'EnterpriseServerUserAccountEdge'
}


/** An email belonging to a user account on an Enterprise Server installation. */
export interface EnterpriseServerUserAccountEmail {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The email address. */
    email: Scalars['String']
    id: Scalars['ID']
    /** Indicates whether this is the primary email of the associated user account. */
    isPrimary: Scalars['Boolean']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The user account to which the email belongs. */
    userAccount: EnterpriseServerUserAccount
    __typename: 'EnterpriseServerUserAccountEmail'
}


/** The connection type for EnterpriseServerUserAccountEmail. */
export interface EnterpriseServerUserAccountEmailConnection {
    /** A list of edges. */
    edges?: (EnterpriseServerUserAccountEmailEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (EnterpriseServerUserAccountEmail | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseServerUserAccountEmailConnection'
}


/** An edge in a connection. */
export interface EnterpriseServerUserAccountEmailEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: EnterpriseServerUserAccountEmail
    __typename: 'EnterpriseServerUserAccountEmailEdge'
}


/** Properties by which Enterprise Server user account email connections can be ordered. */
export type EnterpriseServerUserAccountEmailOrderField = 'EMAIL'


/** Properties by which Enterprise Server user account connections can be ordered. */
export type EnterpriseServerUserAccountOrderField = 'LOGIN' | 'REMOTE_CREATED_AT'


/** A user accounts upload from an Enterprise Server installation. */
export interface EnterpriseServerUserAccountsUpload {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The enterprise to which this upload belongs. */
    enterprise: Enterprise
    /** The Enterprise Server installation for which this upload was generated. */
    enterpriseServerInstallation: EnterpriseServerInstallation
    id: Scalars['ID']
    /** The name of the file uploaded. */
    name: Scalars['String']
    /** The synchronization state of the upload */
    syncState: EnterpriseServerUserAccountsUploadSyncState
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'EnterpriseServerUserAccountsUpload'
}


/** The connection type for EnterpriseServerUserAccountsUpload. */
export interface EnterpriseServerUserAccountsUploadConnection {
    /** A list of edges. */
    edges?: (EnterpriseServerUserAccountsUploadEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (EnterpriseServerUserAccountsUpload | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseServerUserAccountsUploadConnection'
}


/** An edge in a connection. */
export interface EnterpriseServerUserAccountsUploadEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: EnterpriseServerUserAccountsUpload
    __typename: 'EnterpriseServerUserAccountsUploadEdge'
}


/** Properties by which Enterprise Server user accounts upload connections can be ordered. */
export type EnterpriseServerUserAccountsUploadOrderField = 'CREATED_AT'


/** Synchronization state of the Enterprise Server user accounts upload */
export type EnterpriseServerUserAccountsUploadSyncState = 'FAILURE' | 'PENDING' | 'SUCCESS'


/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */
export interface EnterpriseUserAccount {
    /** A URL pointing to the enterprise user account's public avatar. */
    avatarUrl: Scalars['URI']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The enterprise in which this user account exists. */
    enterprise: Enterprise
    id: Scalars['ID']
    /** An identifier for the enterprise user account, a login or email address */
    login: Scalars['String']
    /** The name of the enterprise user account */
    name?: Scalars['String']
    /** A list of enterprise organizations this user is a member of. */
    organizations: EnterpriseOrganizationMembershipConnection
    /** The HTTP path for this user. */
    resourcePath: Scalars['URI']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this user. */
    url: Scalars['URI']
    /** The user within the enterprise. */
    user?: User
    __typename: 'EnterpriseUserAccount'
}


/** The connection type for EnterpriseUserAccount. */
export interface EnterpriseUserAccountConnection {
    /** A list of edges. */
    edges?: (EnterpriseUserAccountEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (EnterpriseUserAccount | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'EnterpriseUserAccountConnection'
}


/** An edge in a connection. */
export interface EnterpriseUserAccountEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: EnterpriseUserAccount
    __typename: 'EnterpriseUserAccountEdge'
}


/** The possible roles for enterprise membership. */
export type EnterpriseUserAccountMembershipRole = 'MEMBER' | 'OWNER'


/** The possible GitHub Enterprise deployments where this user can exist. */
export type EnterpriseUserDeployment = 'CLOUD' | 'SERVER'


/** An external identity provisioned by SAML SSO or SCIM. */
export interface ExternalIdentity {
    /** The GUID for this identity */
    guid: Scalars['String']
    id: Scalars['ID']
    /** Organization invitation for this SCIM-provisioned external identity */
    organizationInvitation?: OrganizationInvitation
    /** SAML Identity attributes */
    samlIdentity?: ExternalIdentitySamlAttributes
    /** SCIM Identity attributes */
    scimIdentity?: ExternalIdentityScimAttributes
    /** User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member. */
    user?: User
    __typename: 'ExternalIdentity'
}


/** The connection type for ExternalIdentity. */
export interface ExternalIdentityConnection {
    /** A list of edges. */
    edges?: (ExternalIdentityEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (ExternalIdentity | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'ExternalIdentityConnection'
}


/** An edge in a connection. */
export interface ExternalIdentityEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: ExternalIdentity
    __typename: 'ExternalIdentityEdge'
}


/** SAML attributes for the External Identity */
export interface ExternalIdentitySamlAttributes {
    /** The NameID of the SAML identity */
    nameId?: Scalars['String']
    __typename: 'ExternalIdentitySamlAttributes'
}


/** SCIM attributes for the External Identity */
export interface ExternalIdentityScimAttributes {
    /** The userName of the SCIM identity */
    username?: Scalars['String']
    __typename: 'ExternalIdentityScimAttributes'
}


/** Autogenerated return type of FollowUser */
export interface FollowUserPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The user that was followed. */
    user?: User
    __typename: 'FollowUserPayload'
}


/** The connection type for User. */
export interface FollowerConnection {
    /** A list of edges. */
    edges?: (UserEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'FollowerConnection'
}


/** The connection type for User. */
export interface FollowingConnection {
    /** A list of edges. */
    edges?: (UserEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'FollowingConnection'
}


/** A funding platform link for a repository. */
export interface FundingLink {
    /** The funding platform this link is for. */
    platform: FundingPlatform
    /** The configured URL for this funding link. */
    url: Scalars['URI']
    __typename: 'FundingLink'
}


/** The possible funding platforms for repository funding links. */
export type FundingPlatform = 'COMMUNITY_BRIDGE' | 'CUSTOM' | 'GITHUB' | 'ISSUEHUNT' | 'KO_FI' | 'LIBERAPAY' | 'OPEN_COLLECTIVE' | 'OTECHIE' | 'PATREON' | 'TIDELIFT'


/** A generic hovercard context with a message and icon */
export interface GenericHovercardContext {
    /** A string describing this context */
    message: Scalars['String']
    /** An octicon to accompany this context */
    octicon: Scalars['String']
    __typename: 'GenericHovercardContext'
}


/** A Gist. */
export interface Gist {
    /** A list of comments associated with the gist */
    comments: GistCommentConnection
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The gist description. */
    description?: Scalars['String']
    /** The files in this gist. */
    files?: (GistFile | undefined)[]
    /** A list of forks associated with the gist */
    forks: GistConnection
    id: Scalars['ID']
    /** Identifies if the gist is a fork. */
    isFork: Scalars['Boolean']
    /** Whether the gist is public or not. */
    isPublic: Scalars['Boolean']
    /** The gist name. */
    name: Scalars['String']
    /** The gist owner. */
    owner?: RepositoryOwner
    /** Identifies when the gist was last pushed to. */
    pushedAt?: Scalars['DateTime']
    /** The HTML path to this resource. */
    resourcePath: Scalars['URI']
    /** A list of users who have starred this starrable. */
    stargazers: StargazerConnection
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this Gist. */
    url: Scalars['URI']
    /** Returns a boolean indicating whether the viewing user has starred this starrable. */
    viewerHasStarred: Scalars['Boolean']
    __typename: 'Gist'
}


/** Represents a comment on an Gist. */
export interface GistComment {
    /** The actor who authored the comment. */
    author?: Actor
    /** Author's association with the gist. */
    authorAssociation: CommentAuthorAssociation
    /** Identifies the comment body. */
    body: Scalars['String']
    /** The body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** The body rendered to text. */
    bodyText: Scalars['String']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Check if this comment was created via an email reply. */
    createdViaEmail: Scalars['Boolean']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The actor who edited the comment. */
    editor?: Actor
    /** The associated gist. */
    gist: Gist
    id: Scalars['ID']
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit: Scalars['Boolean']
    /** Returns whether or not a comment has been minimized. */
    isMinimized: Scalars['Boolean']
    /** The moment the editor made the last edit */
    lastEditedAt?: Scalars['DateTime']
    /** Returns why the comment was minimized. */
    minimizedReason?: Scalars['String']
    /** Identifies when the comment was published at. */
    publishedAt?: Scalars['DateTime']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** A list of edits to this content. */
    userContentEdits?: UserContentEditConnection
    /** Check if the current viewer can delete this object. */
    viewerCanDelete: Scalars['Boolean']
    /** Check if the current viewer can minimize this object. */
    viewerCanMinimize: Scalars['Boolean']
    /** Check if the current viewer can update this object. */
    viewerCanUpdate: Scalars['Boolean']
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons: CommentCannotUpdateReason[]
    /** Did the viewer author this comment. */
    viewerDidAuthor: Scalars['Boolean']
    __typename: 'GistComment'
}


/** The connection type for GistComment. */
export interface GistCommentConnection {
    /** A list of edges. */
    edges?: (GistCommentEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (GistComment | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'GistCommentConnection'
}


/** An edge in a connection. */
export interface GistCommentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: GistComment
    __typename: 'GistCommentEdge'
}


/** The connection type for Gist. */
export interface GistConnection {
    /** A list of edges. */
    edges?: (GistEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Gist | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'GistConnection'
}


/** An edge in a connection. */
export interface GistEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Gist
    __typename: 'GistEdge'
}


/** A file in a gist. */
export interface GistFile {
    /** The file name encoded to remove characters that are invalid in URL paths. */
    encodedName?: Scalars['String']
    /** The gist file encoding. */
    encoding?: Scalars['String']
    /** The file extension from the file name. */
    extension?: Scalars['String']
    /** Indicates if this file is an image. */
    isImage: Scalars['Boolean']
    /** Whether the file's contents were truncated. */
    isTruncated: Scalars['Boolean']
    /** The programming language this file is written in. */
    language?: Language
    /** The gist file name. */
    name?: Scalars['String']
    /** The gist file size in bytes. */
    size?: Scalars['Int']
    /** UTF8 text data or null if the file is binary */
    text?: Scalars['String']
    __typename: 'GistFile'
}


/** Properties by which gist connections can be ordered. */
export type GistOrderField = 'CREATED_AT' | 'PUSHED_AT' | 'UPDATED_AT'


/** The privacy of a Gist */
export type GistPrivacy = 'ALL' | 'PUBLIC' | 'SECRET'


/** Represents an actor in a Git commit (ie. an author or committer). */
export interface GitActor {
    /** A URL pointing to the author's public avatar. */
    avatarUrl: Scalars['URI']
    /** The timestamp of the Git action (authoring or committing). */
    date?: Scalars['GitTimestamp']
    /** The email in the Git commit. */
    email?: Scalars['String']
    /** The name in the Git commit. */
    name?: Scalars['String']
    /** The GitHub user corresponding to the email field. Null if no such user exists. */
    user?: User
    __typename: 'GitActor'
}


/** Represents information about the GitHub instance. */
export interface GitHubMetadata {
    /** Returns a String that's a SHA of `github-services` */
    gitHubServicesSha: Scalars['GitObjectID']
    /** IP addresses that users connect to for git operations */
    gitIpAddresses?: Scalars['String'][]
    /** IP addresses that service hooks are sent from */
    hookIpAddresses?: Scalars['String'][]
    /** IP addresses that the importer connects from */
    importerIpAddresses?: Scalars['String'][]
    /** Whether or not users are verified */
    isPasswordAuthenticationVerifiable: Scalars['Boolean']
    /** IP addresses for GitHub Pages' A records */
    pagesIpAddresses?: Scalars['String'][]
    __typename: 'GitHubMetadata'
}


/** Represents a Git object. */
export type GitObject = (Blob | Commit | Tag | Tree) & { __isUnion?: true }


/** Information about a signature (GPG or S/MIME) on a Commit or Tag. */
export type GitSignature = (GpgSignature | SmimeSignature | UnknownSignature) & { __isUnion?: true }


/** The state of a Git signature. */
export type GitSignatureState = 'BAD_CERT' | 'BAD_EMAIL' | 'EXPIRED_KEY' | 'GPGVERIFY_ERROR' | 'GPGVERIFY_UNAVAILABLE' | 'INVALID' | 'MALFORMED_SIG' | 'NOT_SIGNING_KEY' | 'NO_USER' | 'OCSP_ERROR' | 'OCSP_PENDING' | 'OCSP_REVOKED' | 'UNKNOWN_KEY' | 'UNKNOWN_SIG_TYPE' | 'UNSIGNED' | 'UNVERIFIED_EMAIL' | 'VALID'


/** Represents a GPG signature on a Commit or Tag. */
export interface GpgSignature {
    /** Email used to sign this object. */
    email: Scalars['String']
    /** True if the signature is valid and verified by GitHub. */
    isValid: Scalars['Boolean']
    /** Hex-encoded ID of the key that signed this object. */
    keyId?: Scalars['String']
    /** Payload for GPG signing object. Raw ODB object without the signature header. */
    payload: Scalars['String']
    /** ASCII-armored signature header from object. */
    signature: Scalars['String']
    /** GitHub user corresponding to the email signing this commit. */
    signer?: User
    /**
     * The state of this signature. `VALID` if signature is valid and verified by
     * GitHub, otherwise represents reason why signature is considered invalid.
     */
    state: GitSignatureState
    /** True if the signature was made with GitHub's signing key. */
    wasSignedByGitHub: Scalars['Boolean']
    __typename: 'GpgSignature'
}


/** Represents a 'head_ref_deleted' event on a given pull request. */
export interface HeadRefDeletedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the Ref associated with the `head_ref_deleted` event. */
    headRef?: Ref
    /** Identifies the name of the Ref associated with the `head_ref_deleted` event. */
    headRefName: Scalars['String']
    id: Scalars['ID']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    __typename: 'HeadRefDeletedEvent'
}


/** Represents a 'head_ref_force_pushed' event on a given pull request. */
export interface HeadRefForcePushedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the after commit SHA for the 'head_ref_force_pushed' event. */
    afterCommit?: Commit
    /** Identifies the before commit SHA for the 'head_ref_force_pushed' event. */
    beforeCommit?: Commit
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    /** Identifies the fully qualified ref name for the 'head_ref_force_pushed' event. */
    ref?: Ref
    __typename: 'HeadRefForcePushedEvent'
}


/** Represents a 'head_ref_restored' event on a given pull request. */
export interface HeadRefRestoredEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    __typename: 'HeadRefRestoredEvent'
}


/** Detail needed to display a hovercard for a user */
export interface Hovercard {
    /** Each of the contexts for this hovercard */
    contexts: HovercardContext[]
    __typename: 'Hovercard'
}


/** An individual line of a hovercard */
export type HovercardContext = (GenericHovercardContext | OrganizationTeamsHovercardContext | OrganizationsHovercardContext | ReviewStatusHovercardContext | ViewerHovercardContext) & { __isUnion?: true }


/** The possible states in which authentication can be configured with an identity provider. */
export type IdentityProviderConfigurationState = 'CONFIGURED' | 'ENFORCED' | 'UNCONFIGURED'


/** Autogenerated return type of ImportProject */
export interface ImportProjectPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new Project! */
    project?: Project
    __typename: 'ImportProjectPayload'
}


/** Autogenerated return type of InviteEnterpriseAdmin */
export interface InviteEnterpriseAdminPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The created enterprise administrator invitation. */
    invitation?: EnterpriseAdministratorInvitation
    __typename: 'InviteEnterpriseAdminPayload'
}


/** The possible values for the IP allow list enabled setting. */
export type IpAllowListEnabledSettingValue = 'DISABLED' | 'ENABLED'


/** An IP address or range of addresses that is allowed to access an owner's resources. */
export interface IpAllowListEntry {
    /** A single IP address or range of IP addresses in CIDR notation. */
    allowListValue: Scalars['String']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Whether the entry is currently active. */
    isActive: Scalars['Boolean']
    /** The name of the IP allow list entry. */
    name?: Scalars['String']
    /** The owner of the IP allow list entry. */
    owner: IpAllowListOwner
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'IpAllowListEntry'
}


/** The connection type for IpAllowListEntry. */
export interface IpAllowListEntryConnection {
    /** A list of edges. */
    edges?: (IpAllowListEntryEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (IpAllowListEntry | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'IpAllowListEntryConnection'
}


/** An edge in a connection. */
export interface IpAllowListEntryEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: IpAllowListEntry
    __typename: 'IpAllowListEntryEdge'
}


/** Properties by which IP allow list entry connections can be ordered. */
export type IpAllowListEntryOrderField = 'ALLOW_LIST_VALUE' | 'CREATED_AT'


/** Types that can own an IP allow list. */
export type IpAllowListOwner = (Enterprise | Organization) & { __isUnion?: true }


/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */
export interface Issue {
    /** Reason that the conversation was locked. */
    activeLockReason?: LockReason
    /** A list of Users assigned to this object. */
    assignees: UserConnection
    /** The actor who authored the comment. */
    author?: Actor
    /** Author's association with the subject of the comment. */
    authorAssociation: CommentAuthorAssociation
    /** Identifies the body of the issue. */
    body: Scalars['String']
    /** The body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** Identifies the body of the issue rendered to text. */
    bodyText: Scalars['String']
    /** `true` if the object is closed (definition of closed may depend on type) */
    closed: Scalars['Boolean']
    /** Identifies the date and time when the object was closed. */
    closedAt?: Scalars['DateTime']
    /** A list of comments associated with the Issue. */
    comments: IssueCommentConnection
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Check if this comment was created via an email reply. */
    createdViaEmail: Scalars['Boolean']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The actor who edited the comment. */
    editor?: Actor
    /** The hovercard information for this issue */
    hovercard: Hovercard
    id: Scalars['ID']
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit: Scalars['Boolean']
    /** A list of labels associated with the object. */
    labels?: LabelConnection
    /** The moment the editor made the last edit */
    lastEditedAt?: Scalars['DateTime']
    /** `true` if the object is locked */
    locked: Scalars['Boolean']
    /** Identifies the milestone associated with the issue. */
    milestone?: Milestone
    /** Identifies the issue number. */
    number: Scalars['Int']
    /** A list of Users that are participating in the Issue conversation. */
    participants: UserConnection
    /** List of project cards associated with this issue. */
    projectCards: ProjectCardConnection
    /** Identifies when the comment was published at. */
    publishedAt?: Scalars['DateTime']
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroup[]
    /** A list of Reactions left on the Issue. */
    reactions: ReactionConnection
    /** The repository associated with this node. */
    repository: Repository
    /** The HTTP path for this issue */
    resourcePath: Scalars['URI']
    /** Identifies the state of the issue. */
    state: IssueState
    /**
     * @deprecated `timeline` will be removed Use Issue.timelineItems instead. Removal on 2020-10-01 UTC.
     * A list of events, comments, commits, etc. associated with the issue.
     */
    timeline: IssueTimelineConnection
    /** A list of events, comments, commits, etc. associated with the issue. */
    timelineItems: IssueTimelineItemsConnection
    /** Identifies the issue title. */
    title: Scalars['String']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this issue */
    url: Scalars['URI']
    /** A list of edits to this content. */
    userContentEdits?: UserContentEditConnection
    /** Can user react to this subject */
    viewerCanReact: Scalars['Boolean']
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe: Scalars['Boolean']
    /** Check if the current viewer can update this object. */
    viewerCanUpdate: Scalars['Boolean']
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons: CommentCannotUpdateReason[]
    /** Did the viewer author this comment. */
    viewerDidAuthor: Scalars['Boolean']
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: SubscriptionState
    __typename: 'Issue'
}


/** Represents a comment on an Issue. */
export interface IssueComment {
    /** The actor who authored the comment. */
    author?: Actor
    /** Author's association with the subject of the comment. */
    authorAssociation: CommentAuthorAssociation
    /** The body as Markdown. */
    body: Scalars['String']
    /** The body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** The body rendered to text. */
    bodyText: Scalars['String']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Check if this comment was created via an email reply. */
    createdViaEmail: Scalars['Boolean']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The actor who edited the comment. */
    editor?: Actor
    id: Scalars['ID']
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit: Scalars['Boolean']
    /** Returns whether or not a comment has been minimized. */
    isMinimized: Scalars['Boolean']
    /** Identifies the issue associated with the comment. */
    issue: Issue
    /** The moment the editor made the last edit */
    lastEditedAt?: Scalars['DateTime']
    /** Returns why the comment was minimized. */
    minimizedReason?: Scalars['String']
    /** Identifies when the comment was published at. */
    publishedAt?: Scalars['DateTime']
    /**
     * Returns the pull request associated with the comment, if this comment was made on a
     * pull request.
     */
    pullRequest?: PullRequest
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroup[]
    /** A list of Reactions left on the Issue. */
    reactions: ReactionConnection
    /** The repository associated with this node. */
    repository: Repository
    /** The HTTP path for this issue comment */
    resourcePath: Scalars['URI']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this issue comment */
    url: Scalars['URI']
    /** A list of edits to this content. */
    userContentEdits?: UserContentEditConnection
    /** Check if the current viewer can delete this object. */
    viewerCanDelete: Scalars['Boolean']
    /** Check if the current viewer can minimize this object. */
    viewerCanMinimize: Scalars['Boolean']
    /** Can user react to this subject */
    viewerCanReact: Scalars['Boolean']
    /** Check if the current viewer can update this object. */
    viewerCanUpdate: Scalars['Boolean']
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons: CommentCannotUpdateReason[]
    /** Did the viewer author this comment. */
    viewerDidAuthor: Scalars['Boolean']
    __typename: 'IssueComment'
}


/** The connection type for IssueComment. */
export interface IssueCommentConnection {
    /** A list of edges. */
    edges?: (IssueCommentEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (IssueComment | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'IssueCommentConnection'
}


/** An edge in a connection. */
export interface IssueCommentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: IssueComment
    __typename: 'IssueCommentEdge'
}


/** The connection type for Issue. */
export interface IssueConnection {
    /** A list of edges. */
    edges?: (IssueEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Issue | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'IssueConnection'
}


/** This aggregates issues opened by a user within one repository. */
export interface IssueContributionsByRepository {
    /** The issue contributions. */
    contributions: CreatedIssueContributionConnection
    /** The repository in which the issues were opened. */
    repository: Repository
    __typename: 'IssueContributionsByRepository'
}


/** An edge in a connection. */
export interface IssueEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Issue
    __typename: 'IssueEdge'
}


/** Used for return value of Repository.issueOrPullRequest. */
export type IssueOrPullRequest = (Issue | PullRequest) & { __isUnion?: true }


/** Properties by which issue connections can be ordered. */
export type IssueOrderField = 'COMMENTS' | 'CREATED_AT' | 'UPDATED_AT'


/** The possible states of an issue. */
export type IssueState = 'CLOSED' | 'OPEN'


/** The connection type for IssueTimelineItem. */
export interface IssueTimelineConnection {
    /** A list of edges. */
    edges?: (IssueTimelineItemEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (IssueTimelineItem | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'IssueTimelineConnection'
}


/** An item in an issue timeline */
export type IssueTimelineItem = (AssignedEvent | ClosedEvent | Commit | CrossReferencedEvent | DemilestonedEvent | IssueComment | LabeledEvent | LockedEvent | MilestonedEvent | ReferencedEvent | RenamedTitleEvent | ReopenedEvent | SubscribedEvent | TransferredEvent | UnassignedEvent | UnlabeledEvent | UnlockedEvent | UnsubscribedEvent | UserBlockedEvent) & { __isUnion?: true }


/** An edge in a connection. */
export interface IssueTimelineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: IssueTimelineItem
    __typename: 'IssueTimelineItemEdge'
}


/** An item in an issue timeline */
export type IssueTimelineItems = (AddedToProjectEvent | AssignedEvent | ClosedEvent | CommentDeletedEvent | ConnectedEvent | ConvertedNoteToIssueEvent | CrossReferencedEvent | DemilestonedEvent | DisconnectedEvent | IssueComment | LabeledEvent | LockedEvent | MarkedAsDuplicateEvent | MentionedEvent | MilestonedEvent | MovedColumnsInProjectEvent | PinnedEvent | ReferencedEvent | RemovedFromProjectEvent | RenamedTitleEvent | ReopenedEvent | SubscribedEvent | TransferredEvent | UnassignedEvent | UnlabeledEvent | UnlockedEvent | UnmarkedAsDuplicateEvent | UnpinnedEvent | UnsubscribedEvent | UserBlockedEvent) & { __isUnion?: true }


/** The connection type for IssueTimelineItems. */
export interface IssueTimelineItemsConnection {
    /** A list of edges. */
    edges?: (IssueTimelineItemsEdge | undefined)[]
    /** Identifies the count of items after applying `before` and `after` filters. */
    filteredCount: Scalars['Int']
    /** A list of nodes. */
    nodes?: (IssueTimelineItems | undefined)[]
    /** Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing. */
    pageCount: Scalars['Int']
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    /** Identifies the date and time when the timeline was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'IssueTimelineItemsConnection'
}


/** An edge in a connection. */
export interface IssueTimelineItemsEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: IssueTimelineItems
    __typename: 'IssueTimelineItemsEdge'
}


/** The possible item types found in a timeline. */
export type IssueTimelineItemsItemType = 'ADDED_TO_PROJECT_EVENT' | 'ASSIGNED_EVENT' | 'CLOSED_EVENT' | 'COMMENT_DELETED_EVENT' | 'CONNECTED_EVENT' | 'CONVERTED_NOTE_TO_ISSUE_EVENT' | 'CROSS_REFERENCED_EVENT' | 'DEMILESTONED_EVENT' | 'DISCONNECTED_EVENT' | 'ISSUE_COMMENT' | 'LABELED_EVENT' | 'LOCKED_EVENT' | 'MARKED_AS_DUPLICATE_EVENT' | 'MENTIONED_EVENT' | 'MILESTONED_EVENT' | 'MOVED_COLUMNS_IN_PROJECT_EVENT' | 'PINNED_EVENT' | 'REFERENCED_EVENT' | 'REMOVED_FROM_PROJECT_EVENT' | 'RENAMED_TITLE_EVENT' | 'REOPENED_EVENT' | 'SUBSCRIBED_EVENT' | 'TRANSFERRED_EVENT' | 'UNASSIGNED_EVENT' | 'UNLABELED_EVENT' | 'UNLOCKED_EVENT' | 'UNMARKED_AS_DUPLICATE_EVENT' | 'UNPINNED_EVENT' | 'UNSUBSCRIBED_EVENT' | 'USER_BLOCKED_EVENT'


/** Represents a user signing up for a GitHub account. */
export interface JoinedGitHubContribution {
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted: Scalars['Boolean']
    /** When this contribution was made. */
    occurredAt: Scalars['DateTime']
    /** The HTTP path for this contribution. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this contribution. */
    url: Scalars['URI']
    /** The user who made this contribution. */
    user: User
    __typename: 'JoinedGitHubContribution'
}


/** A label for categorizing Issues or Milestones with a given Repository. */
export interface Label {
    /** Identifies the label color. */
    color: Scalars['String']
    /** Identifies the date and time when the label was created. */
    createdAt?: Scalars['DateTime']
    /** A brief description of this label. */
    description?: Scalars['String']
    id: Scalars['ID']
    /** Indicates whether or not this is a default label. */
    isDefault: Scalars['Boolean']
    /** A list of issues associated with this label. */
    issues: IssueConnection
    /** Identifies the label name. */
    name: Scalars['String']
    /** A list of pull requests associated with this label. */
    pullRequests: PullRequestConnection
    /** The repository associated with this label. */
    repository: Repository
    /** The HTTP path for this label. */
    resourcePath: Scalars['URI']
    /** Identifies the date and time when the label was last updated. */
    updatedAt?: Scalars['DateTime']
    /** The HTTP URL for this label. */
    url: Scalars['URI']
    __typename: 'Label'
}


/** The connection type for Label. */
export interface LabelConnection {
    /** A list of edges. */
    edges?: (LabelEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Label | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'LabelConnection'
}


/** An edge in a connection. */
export interface LabelEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Label
    __typename: 'LabelEdge'
}


/** Properties by which label connections can be ordered. */
export type LabelOrderField = 'CREATED_AT' | 'NAME'


/** An object that can have labels assigned to it. */
export type Labelable = (Issue | PullRequest) & { __isUnion?: true }


/** Represents a 'labeled' event on a given issue or pull request. */
export interface LabeledEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Identifies the label associated with the 'labeled' event. */
    label: Label
    /** Identifies the `Labelable` associated with the event. */
    labelable: Labelable
    __typename: 'LabeledEvent'
}


/** Represents a given language found in repositories. */
export interface Language {
    /** The color defined for the current language. */
    color?: Scalars['String']
    id: Scalars['ID']
    /** The name of the current language. */
    name: Scalars['String']
    __typename: 'Language'
}


/** A list of languages associated with the parent. */
export interface LanguageConnection {
    /** A list of edges. */
    edges?: (LanguageEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Language | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    /** The total size in bytes of files written in that language. */
    totalSize: Scalars['Int']
    __typename: 'LanguageConnection'
}


/** Represents the language of a repository. */
export interface LanguageEdge {
    cursor: Scalars['String']
    node: Language
    /** The number of bytes of code written in the language. */
    size: Scalars['Int']
    __typename: 'LanguageEdge'
}


/** Properties by which language connections can be ordered. */
export type LanguageOrderField = 'SIZE'


/** A repository's open source license */
export interface License {
    /** The full text of the license */
    body: Scalars['String']
    /** The conditions set by the license */
    conditions: (LicenseRule | undefined)[]
    /** A human-readable description of the license */
    description?: Scalars['String']
    /** Whether the license should be featured */
    featured: Scalars['Boolean']
    /** Whether the license should be displayed in license pickers */
    hidden: Scalars['Boolean']
    id: Scalars['ID']
    /** Instructions on how to implement the license */
    implementation?: Scalars['String']
    /** The lowercased SPDX ID of the license */
    key: Scalars['String']
    /** The limitations set by the license */
    limitations: (LicenseRule | undefined)[]
    /** The license full name specified by <https://spdx.org/licenses> */
    name: Scalars['String']
    /** Customary short name if applicable (e.g, GPLv3) */
    nickname?: Scalars['String']
    /** The permissions set by the license */
    permissions: (LicenseRule | undefined)[]
    /** Whether the license is a pseudo-license placeholder (e.g., other, no-license) */
    pseudoLicense: Scalars['Boolean']
    /** Short identifier specified by <https://spdx.org/licenses> */
    spdxId?: Scalars['String']
    /** URL to the license on <https://choosealicense.com> */
    url?: Scalars['URI']
    __typename: 'License'
}


/** Describes a License's conditions, permissions, and limitations */
export interface LicenseRule {
    /** A description of the rule */
    description: Scalars['String']
    /** The machine-readable rule key */
    key: Scalars['String']
    /** The human-readable rule label */
    label: Scalars['String']
    __typename: 'LicenseRule'
}


/** Autogenerated return type of LinkRepositoryToProject */
export interface LinkRepositoryToProjectPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The linked Project. */
    project?: Project
    /** The linked Repository. */
    repository?: Repository
    __typename: 'LinkRepositoryToProjectPayload'
}


/** Autogenerated return type of LockLockable */
export interface LockLockablePayload {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The item that was locked. */
    lockedRecord?: Lockable
    __typename: 'LockLockablePayload'
}


/** The possible reasons that an issue or pull request was locked. */
export type LockReason = 'OFF_TOPIC' | 'RESOLVED' | 'SPAM' | 'TOO_HEATED'


/** An object that can be locked. */
export type Lockable = (Issue | PullRequest) & { __isUnion?: true }


/** Represents a 'locked' event on a given issue or pull request. */
export interface LockedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Reason that the conversation was locked (optional). */
    lockReason?: LockReason
    /** Object that was locked. */
    lockable: Lockable
    __typename: 'LockedEvent'
}


/** A placeholder user for attribution of imported data on GitHub. */
export interface Mannequin {
    /** A URL pointing to the GitHub App's public avatar. */
    avatarUrl: Scalars['URI']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The mannequin's email on the source instance. */
    email?: Scalars['String']
    id: Scalars['ID']
    /** The username of the actor. */
    login: Scalars['String']
    /** The HTML path to this resource. */
    resourcePath: Scalars['URI']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The URL to this resource. */
    url: Scalars['URI']
    __typename: 'Mannequin'
}


/** Autogenerated return type of MarkPullRequestReadyForReview */
export interface MarkPullRequestReadyForReviewPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The pull request that is ready for review. */
    pullRequest?: PullRequest
    __typename: 'MarkPullRequestReadyForReviewPayload'
}


/** Represents a 'marked_as_duplicate' event on a given issue or pull request. */
export interface MarkedAsDuplicateEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    __typename: 'MarkedAsDuplicateEvent'
}


/** A public description of a Marketplace category. */
export interface MarketplaceCategory {
    /** The category's description. */
    description?: Scalars['String']
    /** The technical description of how apps listed in this category work with GitHub. */
    howItWorks?: Scalars['String']
    id: Scalars['ID']
    /** The category's name. */
    name: Scalars['String']
    /** How many Marketplace listings have this as their primary category. */
    primaryListingCount: Scalars['Int']
    /** The HTTP path for this Marketplace category. */
    resourcePath: Scalars['URI']
    /** How many Marketplace listings have this as their secondary category. */
    secondaryListingCount: Scalars['Int']
    /** The short name of the category used in its URL. */
    slug: Scalars['String']
    /** The HTTP URL for this Marketplace category. */
    url: Scalars['URI']
    __typename: 'MarketplaceCategory'
}


/** A listing in the GitHub integration marketplace. */
export interface MarketplaceListing {
    /** The GitHub App this listing represents. */
    app?: App
    /** URL to the listing owner's company site. */
    companyUrl?: Scalars['URI']
    /** The HTTP path for configuring access to the listing's integration or OAuth app */
    configurationResourcePath: Scalars['URI']
    /** The HTTP URL for configuring access to the listing's integration or OAuth app */
    configurationUrl: Scalars['URI']
    /** URL to the listing's documentation. */
    documentationUrl?: Scalars['URI']
    /** The listing's detailed description. */
    extendedDescription?: Scalars['String']
    /** The listing's detailed description rendered to HTML. */
    extendedDescriptionHTML: Scalars['HTML']
    /** The listing's introductory description. */
    fullDescription: Scalars['String']
    /** The listing's introductory description rendered to HTML. */
    fullDescriptionHTML: Scalars['HTML']
    /** Does this listing have any plans with a free trial? */
    hasPublishedFreeTrialPlans: Scalars['Boolean']
    /** Does this listing have a terms of service link? */
    hasTermsOfService: Scalars['Boolean']
    /** A technical description of how this app works with GitHub. */
    howItWorks?: Scalars['String']
    /** The listing's technical description rendered to HTML. */
    howItWorksHTML: Scalars['HTML']
    id: Scalars['ID']
    /** URL to install the product to the viewer's account or organization. */
    installationUrl?: Scalars['URI']
    /** Whether this listing's app has been installed for the current viewer */
    installedForViewer: Scalars['Boolean']
    /** Whether this listing has been removed from the Marketplace. */
    isArchived: Scalars['Boolean']
    /**
     * Whether this listing is still an editable draft that has not been submitted
     * for review and is not publicly visible in the Marketplace.
     */
    isDraft: Scalars['Boolean']
    /** Whether the product this listing represents is available as part of a paid plan. */
    isPaid: Scalars['Boolean']
    /** Whether this listing has been approved for display in the Marketplace. */
    isPublic: Scalars['Boolean']
    /** Whether this listing has been rejected by GitHub for display in the Marketplace. */
    isRejected: Scalars['Boolean']
    /** Whether this listing has been approved for unverified display in the Marketplace. */
    isUnverified: Scalars['Boolean']
    /** Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace. */
    isUnverifiedPending: Scalars['Boolean']
    /** Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace. */
    isVerificationPendingFromDraft: Scalars['Boolean']
    /** Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace. */
    isVerificationPendingFromUnverified: Scalars['Boolean']
    /** Whether this listing has been approved for verified display in the Marketplace. */
    isVerified: Scalars['Boolean']
    /** The hex color code, without the leading '#', for the logo background. */
    logoBackgroundColor: Scalars['String']
    /** URL for the listing's logo image. */
    logoUrl?: Scalars['URI']
    /** The listing's full name. */
    name: Scalars['String']
    /** The listing's very short description without a trailing period or ampersands. */
    normalizedShortDescription: Scalars['String']
    /** URL to the listing's detailed pricing. */
    pricingUrl?: Scalars['URI']
    /** The category that best describes the listing. */
    primaryCategory: MarketplaceCategory
    /** URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL. */
    privacyPolicyUrl: Scalars['URI']
    /** The HTTP path for the Marketplace listing. */
    resourcePath: Scalars['URI']
    /** The URLs for the listing's screenshots. */
    screenshotUrls: (Scalars['String'] | undefined)[]
    /** An alternate category that describes the listing. */
    secondaryCategory?: MarketplaceCategory
    /** The listing's very short description. */
    shortDescription: Scalars['String']
    /** The short name of the listing used in its URL. */
    slug: Scalars['String']
    /** URL to the listing's status page. */
    statusUrl?: Scalars['URI']
    /** An email address for support for this listing's app. */
    supportEmail?: Scalars['String']
    /**
     * Either a URL or an email address for support for this listing's app, may
     * return an empty string for listings that do not require a support URL.
     */
    supportUrl: Scalars['URI']
    /** URL to the listing's terms of service. */
    termsOfServiceUrl?: Scalars['URI']
    /** The HTTP URL for the Marketplace listing. */
    url: Scalars['URI']
    /** Can the current viewer add plans for this Marketplace listing. */
    viewerCanAddPlans: Scalars['Boolean']
    /** Can the current viewer approve this Marketplace listing. */
    viewerCanApprove: Scalars['Boolean']
    /** Can the current viewer delist this Marketplace listing. */
    viewerCanDelist: Scalars['Boolean']
    /** Can the current viewer edit this Marketplace listing. */
    viewerCanEdit: Scalars['Boolean']
    /**
     * Can the current viewer edit the primary and secondary category of this
     * Marketplace listing.
     */
    viewerCanEditCategories: Scalars['Boolean']
    /** Can the current viewer edit the plans for this Marketplace listing. */
    viewerCanEditPlans: Scalars['Boolean']
    /**
     * Can the current viewer return this Marketplace listing to draft state
     * so it becomes editable again.
     */
    viewerCanRedraft: Scalars['Boolean']
    /**
     * Can the current viewer reject this Marketplace listing by returning it to
     * an editable draft state or rejecting it entirely.
     */
    viewerCanReject: Scalars['Boolean']
    /**
     * Can the current viewer request this listing be reviewed for display in
     * the Marketplace as verified.
     */
    viewerCanRequestApproval: Scalars['Boolean']
    /** Indicates whether the current user has an active subscription to this Marketplace listing. */
    viewerHasPurchased: Scalars['Boolean']
    /**
     * Indicates if the current user has purchased a subscription to this Marketplace listing
     * for all of the organizations the user owns.
     */
    viewerHasPurchasedForAllOrganizations: Scalars['Boolean']
    /** Does the current viewer role allow them to administer this Marketplace listing. */
    viewerIsListingAdmin: Scalars['Boolean']
    __typename: 'MarketplaceListing'
}


/** Look up Marketplace Listings */
export interface MarketplaceListingConnection {
    /** A list of edges. */
    edges?: (MarketplaceListingEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (MarketplaceListing | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'MarketplaceListingConnection'
}


/** An edge in a connection. */
export interface MarketplaceListingEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: MarketplaceListing
    __typename: 'MarketplaceListingEdge'
}


/** Entities that have members who can set status messages. */
export type MemberStatusable = (Organization | Team) & { __isUnion?: true }


/** Audit log entry for a members_can_delete_repos.clear event. */
export interface MembersCanDeleteReposClearAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: Scalars['URI']
    /** The slug of the enterprise. */
    enterpriseSlug?: Scalars['String']
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: Scalars['URI']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'MembersCanDeleteReposClearAuditEntry'
}


/** Audit log entry for a members_can_delete_repos.disable event. */
export interface MembersCanDeleteReposDisableAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: Scalars['URI']
    /** The slug of the enterprise. */
    enterpriseSlug?: Scalars['String']
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: Scalars['URI']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'MembersCanDeleteReposDisableAuditEntry'
}


/** Audit log entry for a members_can_delete_repos.enable event. */
export interface MembersCanDeleteReposEnableAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: Scalars['URI']
    /** The slug of the enterprise. */
    enterpriseSlug?: Scalars['String']
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: Scalars['URI']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'MembersCanDeleteReposEnableAuditEntry'
}


/** Represents a 'mentioned' event on a given issue or pull request. */
export interface MentionedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    __typename: 'MentionedEvent'
}


/** Autogenerated return type of MergeBranch */
export interface MergeBranchPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The resulting merge Commit. */
    mergeCommit?: Commit
    __typename: 'MergeBranchPayload'
}


/** Autogenerated return type of MergePullRequest */
export interface MergePullRequestPayload {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The pull request that was merged. */
    pullRequest?: PullRequest
    __typename: 'MergePullRequestPayload'
}


/** Detailed status information about a pull request merge. */
export type MergeStateStatus = 'BEHIND' | 'BLOCKED' | 'CLEAN' | 'DIRTY' | 'DRAFT' | 'HAS_HOOKS' | 'UNKNOWN' | 'UNSTABLE'


/** Whether or not a PullRequest can be merged. */
export type MergeableState = 'CONFLICTING' | 'MERGEABLE' | 'UNKNOWN'


/** Represents a 'merged' event on a given pull request. */
export interface MergedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the commit associated with the `merge` event. */
    commit?: Commit
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Identifies the Ref associated with the `merge` event. */
    mergeRef?: Ref
    /** Identifies the name of the Ref associated with the `merge` event. */
    mergeRefName: Scalars['String']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    /** The HTTP path for this merged event. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this merged event. */
    url: Scalars['URI']
    __typename: 'MergedEvent'
}


/** Represents a Milestone object on a given repository. */
export interface Milestone {
    /** `true` if the object is closed (definition of closed may depend on type) */
    closed: Scalars['Boolean']
    /** Identifies the date and time when the object was closed. */
    closedAt?: Scalars['DateTime']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the actor who created the milestone. */
    creator?: Actor
    /** Identifies the description of the milestone. */
    description?: Scalars['String']
    /** Identifies the due date of the milestone. */
    dueOn?: Scalars['DateTime']
    id: Scalars['ID']
    /** Just for debugging on review-lab */
    issuePrioritiesDebug: Scalars['String']
    /** A list of issues associated with the milestone. */
    issues: IssueConnection
    /** Identifies the number of the milestone. */
    number: Scalars['Int']
    /** A list of pull requests associated with the milestone. */
    pullRequests: PullRequestConnection
    /** The repository associated with this milestone. */
    repository: Repository
    /** The HTTP path for this milestone */
    resourcePath: Scalars['URI']
    /** Identifies the state of the milestone. */
    state: MilestoneState
    /** Identifies the title of the milestone. */
    title: Scalars['String']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this milestone */
    url: Scalars['URI']
    __typename: 'Milestone'
}


/** The connection type for Milestone. */
export interface MilestoneConnection {
    /** A list of edges. */
    edges?: (MilestoneEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Milestone | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'MilestoneConnection'
}


/** An edge in a connection. */
export interface MilestoneEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Milestone
    __typename: 'MilestoneEdge'
}


/** Types that can be inside a Milestone. */
export type MilestoneItem = (Issue | PullRequest) & { __isUnion?: true }


/** Properties by which milestone connections can be ordered. */
export type MilestoneOrderField = 'CREATED_AT' | 'DUE_DATE' | 'NUMBER' | 'UPDATED_AT'


/** The possible states of a milestone. */
export type MilestoneState = 'CLOSED' | 'OPEN'


/** Represents a 'milestoned' event on a given issue or pull request. */
export interface MilestonedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Identifies the milestone title associated with the 'milestoned' event. */
    milestoneTitle: Scalars['String']
    /** Object referenced by event. */
    subject: MilestoneItem
    __typename: 'MilestonedEvent'
}


/** Entities that can be minimized. */
export type Minimizable = (CommitComment | GistComment | IssueComment | PullRequestReviewComment) & { __isUnion?: true }


/** Autogenerated return type of MinimizeComment */
export interface MinimizeCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The comment that was minimized. */
    minimizedComment?: Minimizable
    __typename: 'MinimizeCommentPayload'
}


/** Autogenerated return type of MoveProjectCard */
export interface MoveProjectCardPayload {
    /** The new edge of the moved card. */
    cardEdge?: ProjectCardEdge
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'MoveProjectCardPayload'
}


/** Autogenerated return type of MoveProjectColumn */
export interface MoveProjectColumnPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The new edge of the moved column. */
    columnEdge?: ProjectColumnEdge
    __typename: 'MoveProjectColumnPayload'
}


/** Represents a 'moved_columns_in_project' event on a given issue or pull request. */
export interface MovedColumnsInProjectEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** Column name the issue or pull request was moved from. */
    previousProjectColumnName: Scalars['String']
    /** Project referenced by event. */
    project?: Project
    /** Project card referenced by this project event. */
    projectCard?: ProjectCard
    /** Column name the issue or pull request was moved to. */
    projectColumnName: Scalars['String']
    __typename: 'MovedColumnsInProjectEvent'
}


/** The root query for implementing GraphQL mutations. */
export interface Mutation {
    /** Accepts a pending invitation for a user to become an administrator of an enterprise. */
    acceptEnterpriseAdministratorInvitation?: AcceptEnterpriseAdministratorInvitationPayload
    /** Applies a suggested topic to the repository. */
    acceptTopicSuggestion?: AcceptTopicSuggestionPayload
    /** Adds assignees to an assignable object. */
    addAssigneesToAssignable?: AddAssigneesToAssignablePayload
    /** Adds a comment to an Issue or Pull Request. */
    addComment?: AddCommentPayload
    /** Adds labels to a labelable object. */
    addLabelsToLabelable?: AddLabelsToLabelablePayload
    /** Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both. */
    addProjectCard?: AddProjectCardPayload
    /** Adds a column to a Project. */
    addProjectColumn?: AddProjectColumnPayload
    /** Adds a review to a Pull Request. */
    addPullRequestReview?: AddPullRequestReviewPayload
    /** Adds a comment to a review. */
    addPullRequestReviewComment?: AddPullRequestReviewCommentPayload
    /** Adds a new thread to a pending Pull Request Review. */
    addPullRequestReviewThread?: AddPullRequestReviewThreadPayload
    /** Adds a reaction to a subject. */
    addReaction?: AddReactionPayload
    /** Adds a star to a Starrable. */
    addStar?: AddStarPayload
    /** Marks a repository as archived. */
    archiveRepository?: ArchiveRepositoryPayload
    /** Cancels a pending invitation for an administrator to join an enterprise. */
    cancelEnterpriseAdminInvitation?: CancelEnterpriseAdminInvitationPayload
    /** Update your status on GitHub. */
    changeUserStatus?: ChangeUserStatusPayload
    /** Clears all labels from a labelable object. */
    clearLabelsFromLabelable?: ClearLabelsFromLabelablePayload
    /** Creates a new project by cloning configuration from an existing project. */
    cloneProject?: CloneProjectPayload
    /** Create a new repository with the same files and directory structure as a template repository. */
    cloneTemplateRepository?: CloneTemplateRepositoryPayload
    /** Close an issue. */
    closeIssue?: CloseIssuePayload
    /** Close a pull request. */
    closePullRequest?: ClosePullRequestPayload
    /** Convert a project note card to one associated with a newly created issue. */
    convertProjectCardNoteToIssue?: ConvertProjectCardNoteToIssuePayload
    /** Create a new branch protection rule */
    createBranchProtectionRule?: CreateBranchProtectionRulePayload
    /** Create a check run. */
    createCheckRun?: CreateCheckRunPayload
    /** Create a check suite */
    createCheckSuite?: CreateCheckSuitePayload
    /** Create a content attachment. */
    createContentAttachment?: CreateContentAttachmentPayload
    /** Creates a new deployment event. */
    createDeployment?: CreateDeploymentPayload
    /** Create a deployment status. */
    createDeploymentStatus?: CreateDeploymentStatusPayload
    /** Creates an organization as part of an enterprise account. */
    createEnterpriseOrganization?: CreateEnterpriseOrganizationPayload
    /** Creates a new IP allow list entry. */
    createIpAllowListEntry?: CreateIpAllowListEntryPayload
    /** Creates a new issue. */
    createIssue?: CreateIssuePayload
    /** Creates a new label. */
    createLabel?: CreateLabelPayload
    /** Creates a new project. */
    createProject?: CreateProjectPayload
    /** Create a new pull request */
    createPullRequest?: CreatePullRequestPayload
    /** Create a new Git Ref. */
    createRef?: CreateRefPayload
    /** Create a new repository. */
    createRepository?: CreateRepositoryPayload
    /** Creates a new team discussion. */
    createTeamDiscussion?: CreateTeamDiscussionPayload
    /** Creates a new team discussion comment. */
    createTeamDiscussionComment?: CreateTeamDiscussionCommentPayload
    /** Rejects a suggested topic for the repository. */
    declineTopicSuggestion?: DeclineTopicSuggestionPayload
    /** Delete a branch protection rule */
    deleteBranchProtectionRule?: DeleteBranchProtectionRulePayload
    /** Deletes a deployment. */
    deleteDeployment?: DeleteDeploymentPayload
    /** Deletes an IP allow list entry. */
    deleteIpAllowListEntry?: DeleteIpAllowListEntryPayload
    /** Deletes an Issue object. */
    deleteIssue?: DeleteIssuePayload
    /** Deletes an IssueComment object. */
    deleteIssueComment?: DeleteIssueCommentPayload
    /** Deletes a label. */
    deleteLabel?: DeleteLabelPayload
    /** Delete a package version. */
    deletePackageVersion?: DeletePackageVersionPayload
    /** Deletes a project. */
    deleteProject?: DeleteProjectPayload
    /** Deletes a project card. */
    deleteProjectCard?: DeleteProjectCardPayload
    /** Deletes a project column. */
    deleteProjectColumn?: DeleteProjectColumnPayload
    /** Deletes a pull request review. */
    deletePullRequestReview?: DeletePullRequestReviewPayload
    /** Deletes a pull request review comment. */
    deletePullRequestReviewComment?: DeletePullRequestReviewCommentPayload
    /** Delete a Git Ref. */
    deleteRef?: DeleteRefPayload
    /** Deletes a team discussion. */
    deleteTeamDiscussion?: DeleteTeamDiscussionPayload
    /** Deletes a team discussion comment. */
    deleteTeamDiscussionComment?: DeleteTeamDiscussionCommentPayload
    /** Dismisses an approved or rejected pull request review. */
    dismissPullRequestReview?: DismissPullRequestReviewPayload
    /** Follow a user. */
    followUser?: FollowUserPayload
    /** Creates a new project by importing columns and a list of issues/PRs. */
    importProject?: ImportProjectPayload
    /** Invite someone to become an administrator of the enterprise. */
    inviteEnterpriseAdmin?: InviteEnterpriseAdminPayload
    /** Creates a repository link for a project. */
    linkRepositoryToProject?: LinkRepositoryToProjectPayload
    /** Lock a lockable object */
    lockLockable?: LockLockablePayload
    /** Marks a pull request ready for review. */
    markPullRequestReadyForReview?: MarkPullRequestReadyForReviewPayload
    /** Merge a head into a branch. */
    mergeBranch?: MergeBranchPayload
    /** Merge a pull request. */
    mergePullRequest?: MergePullRequestPayload
    /** Minimizes a comment on an Issue, Commit, Pull Request, or Gist */
    minimizeComment?: MinimizeCommentPayload
    /** Moves a project card to another place. */
    moveProjectCard?: MoveProjectCardPayload
    /** Moves a project column to another place. */
    moveProjectColumn?: MoveProjectColumnPayload
    /** Pin an issue to a repository */
    pinIssue?: PinIssuePayload
    /** Regenerates the identity provider recovery codes for an enterprise */
    regenerateEnterpriseIdentityProviderRecoveryCodes?: RegenerateEnterpriseIdentityProviderRecoveryCodesPayload
    /** Removes assignees from an assignable object. */
    removeAssigneesFromAssignable?: RemoveAssigneesFromAssignablePayload
    /** Removes an administrator from the enterprise. */
    removeEnterpriseAdmin?: RemoveEnterpriseAdminPayload
    /** Removes the identity provider from an enterprise */
    removeEnterpriseIdentityProvider?: RemoveEnterpriseIdentityProviderPayload
    /** Removes an organization from the enterprise */
    removeEnterpriseOrganization?: RemoveEnterpriseOrganizationPayload
    /** Removes labels from a Labelable object. */
    removeLabelsFromLabelable?: RemoveLabelsFromLabelablePayload
    /** Removes outside collaborator from all repositories in an organization. */
    removeOutsideCollaborator?: RemoveOutsideCollaboratorPayload
    /** Removes a reaction from a subject. */
    removeReaction?: RemoveReactionPayload
    /** Removes a star from a Starrable. */
    removeStar?: RemoveStarPayload
    /** Reopen a issue. */
    reopenIssue?: ReopenIssuePayload
    /** Reopen a pull request. */
    reopenPullRequest?: ReopenPullRequestPayload
    /** Set review requests on a pull request. */
    requestReviews?: RequestReviewsPayload
    /** Rerequests an existing check suite. */
    rerequestCheckSuite?: RerequestCheckSuitePayload
    /** Marks a review thread as resolved. */
    resolveReviewThread?: ResolveReviewThreadPayload
    /** Creates or updates the identity provider for an enterprise. */
    setEnterpriseIdentityProvider?: SetEnterpriseIdentityProviderPayload
    /** Submits a pending pull request review. */
    submitPullRequestReview?: SubmitPullRequestReviewPayload
    /** Transfer an issue to a different repository */
    transferIssue?: TransferIssuePayload
    /** Unarchives a repository. */
    unarchiveRepository?: UnarchiveRepositoryPayload
    /** Unfollow a user. */
    unfollowUser?: UnfollowUserPayload
    /** Deletes a repository link from a project. */
    unlinkRepositoryFromProject?: UnlinkRepositoryFromProjectPayload
    /** Unlock a lockable object */
    unlockLockable?: UnlockLockablePayload
    /** Unmark an issue as a duplicate of another issue. */
    unmarkIssueAsDuplicate?: UnmarkIssueAsDuplicatePayload
    /** Unminimizes a comment on an Issue, Commit, Pull Request, or Gist */
    unminimizeComment?: UnminimizeCommentPayload
    /** Unpin a pinned issue from a repository */
    unpinIssue?: UnpinIssuePayload
    /** Marks a review thread as unresolved. */
    unresolveReviewThread?: UnresolveReviewThreadPayload
    /** Create a new branch protection rule */
    updateBranchProtectionRule?: UpdateBranchProtectionRulePayload
    /** Update a check run */
    updateCheckRun?: UpdateCheckRunPayload
    /** Modifies the settings of an existing check suite */
    updateCheckSuitePreferences?: UpdateCheckSuitePreferencesPayload
    /** Sets the action execution capability setting for an enterprise. */
    updateEnterpriseActionExecutionCapabilitySetting?: UpdateEnterpriseActionExecutionCapabilitySettingPayload
    /** Updates the role of an enterprise administrator. */
    updateEnterpriseAdministratorRole?: UpdateEnterpriseAdministratorRolePayload
    /** Sets whether private repository forks are enabled for an enterprise. */
    updateEnterpriseAllowPrivateRepositoryForkingSetting?: UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload
    /** Sets the default repository permission for organizations in an enterprise. */
    updateEnterpriseDefaultRepositoryPermissionSetting?: UpdateEnterpriseDefaultRepositoryPermissionSettingPayload
    /** Sets whether organization members with admin permissions on a repository can change repository visibility. */
    updateEnterpriseMembersCanChangeRepositoryVisibilitySetting?: UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload
    /** Sets the members can create repositories setting for an enterprise. */
    updateEnterpriseMembersCanCreateRepositoriesSetting?: UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload
    /** Sets the members can delete issues setting for an enterprise. */
    updateEnterpriseMembersCanDeleteIssuesSetting?: UpdateEnterpriseMembersCanDeleteIssuesSettingPayload
    /** Sets the members can delete repositories setting for an enterprise. */
    updateEnterpriseMembersCanDeleteRepositoriesSetting?: UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload
    /** Sets whether members can invite collaborators are enabled for an enterprise. */
    updateEnterpriseMembersCanInviteCollaboratorsSetting?: UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload
    /** Sets whether or not an organization admin can make purchases. */
    updateEnterpriseMembersCanMakePurchasesSetting?: UpdateEnterpriseMembersCanMakePurchasesSettingPayload
    /** Sets the members can update protected branches setting for an enterprise. */
    updateEnterpriseMembersCanUpdateProtectedBranchesSetting?: UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload
    /** Sets the members can view dependency insights for an enterprise. */
    updateEnterpriseMembersCanViewDependencyInsightsSetting?: UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload
    /** Sets whether organization projects are enabled for an enterprise. */
    updateEnterpriseOrganizationProjectsSetting?: UpdateEnterpriseOrganizationProjectsSettingPayload
    /** Updates an enterprise's profile. */
    updateEnterpriseProfile?: UpdateEnterpriseProfilePayload
    /** Sets whether repository projects are enabled for a enterprise. */
    updateEnterpriseRepositoryProjectsSetting?: UpdateEnterpriseRepositoryProjectsSettingPayload
    /** Sets whether team discussions are enabled for an enterprise. */
    updateEnterpriseTeamDiscussionsSetting?: UpdateEnterpriseTeamDiscussionsSettingPayload
    /** Sets whether two factor authentication is required for all users in an enterprise. */
    updateEnterpriseTwoFactorAuthenticationRequiredSetting?: UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload
    /** Sets whether an IP allow list is enabled on an owner. */
    updateIpAllowListEnabledSetting?: UpdateIpAllowListEnabledSettingPayload
    /** Updates an IP allow list entry. */
    updateIpAllowListEntry?: UpdateIpAllowListEntryPayload
    /** Updates an Issue. */
    updateIssue?: UpdateIssuePayload
    /** Updates an IssueComment object. */
    updateIssueComment?: UpdateIssueCommentPayload
    /** Updates an existing label. */
    updateLabel?: UpdateLabelPayload
    /** Updates an existing project. */
    updateProject?: UpdateProjectPayload
    /** Updates an existing project card. */
    updateProjectCard?: UpdateProjectCardPayload
    /** Updates an existing project column. */
    updateProjectColumn?: UpdateProjectColumnPayload
    /** Update a pull request */
    updatePullRequest?: UpdatePullRequestPayload
    /** Updates the body of a pull request review. */
    updatePullRequestReview?: UpdatePullRequestReviewPayload
    /** Updates a pull request review comment. */
    updatePullRequestReviewComment?: UpdatePullRequestReviewCommentPayload
    /** Update a Git Ref. */
    updateRef?: UpdateRefPayload
    /**
     * Creates, updates and/or deletes multiple refs in a repository.
     * 
     * This mutation takes a list of `RefUpdate`s and performs these updates
     * on the repository. All updates are performed atomically, meaning that
     * if one of them is rejected, no other ref will be modified.
     * 
     * `RefUpdate.beforeOid` specifies that the given reference needs to point
     * to the given value before performing any updates. A value of
     * `0000000000000000000000000000000000000000` can be used to verify that
     * the references should not exist.
     * 
     * `RefUpdate.afterOid` specifies the value that the given reference
     * will point to after performing all updates. A value of
     * `0000000000000000000000000000000000000000` can be used to delete a
     * reference.
     * 
     * If `RefUpdate.force` is set to `true`, a non-fast-forward updates
     * for the given reference will be allowed.
     */
    updateRefs?: UpdateRefsPayload
    /** Update information about a repository. */
    updateRepository?: UpdateRepositoryPayload
    /** Updates the state for subscribable subjects. */
    updateSubscription?: UpdateSubscriptionPayload
    /** Updates a team discussion. */
    updateTeamDiscussion?: UpdateTeamDiscussionPayload
    /** Updates a discussion comment. */
    updateTeamDiscussionComment?: UpdateTeamDiscussionCommentPayload
    /** Updates team review assignment. */
    updateTeamReviewAssignment?: UpdateTeamReviewAssignmentPayload
    /** Replaces the repository's topics with the given topics. */
    updateTopics?: UpdateTopicsPayload
    __typename: 'Mutation'
}


/** An object with an ID. */
export type Node = (AddedToProjectEvent | App | AssignedEvent | AutomaticBaseChangeFailedEvent | AutomaticBaseChangeSucceededEvent | BaseRefChangedEvent | BaseRefForcePushedEvent | Blob | Bot | BranchProtectionRule | CheckRun | CheckSuite | ClosedEvent | CodeOfConduct | CommentDeletedEvent | Commit | CommitComment | CommitCommentThread | ConnectedEvent | ConvertToDraftEvent | ConvertedNoteToIssueEvent | CrossReferencedEvent | DemilestonedEvent | DependencyGraphManifest | DeployKey | DeployedEvent | Deployment | DeploymentEnvironmentChangedEvent | DeploymentStatus | DisconnectedEvent | Enterprise | EnterpriseAdministratorInvitation | EnterpriseIdentityProvider | EnterpriseRepositoryInfo | EnterpriseServerInstallation | EnterpriseServerUserAccount | EnterpriseServerUserAccountEmail | EnterpriseServerUserAccountsUpload | EnterpriseUserAccount | ExternalIdentity | Gist | GistComment | HeadRefDeletedEvent | HeadRefForcePushedEvent | HeadRefRestoredEvent | IpAllowListEntry | Issue | IssueComment | Label | LabeledEvent | Language | License | LockedEvent | Mannequin | MarkedAsDuplicateEvent | MarketplaceCategory | MarketplaceListing | MembersCanDeleteReposClearAuditEntry | MembersCanDeleteReposDisableAuditEntry | MembersCanDeleteReposEnableAuditEntry | MentionedEvent | MergedEvent | Milestone | MilestonedEvent | MovedColumnsInProjectEvent | OauthApplicationCreateAuditEntry | OrgAddBillingManagerAuditEntry | OrgAddMemberAuditEntry | OrgBlockUserAuditEntry | OrgConfigDisableCollaboratorsOnlyAuditEntry | OrgConfigEnableCollaboratorsOnlyAuditEntry | OrgCreateAuditEntry | OrgDisableOauthAppRestrictionsAuditEntry | OrgDisableSamlAuditEntry | OrgDisableTwoFactorRequirementAuditEntry | OrgEnableOauthAppRestrictionsAuditEntry | OrgEnableSamlAuditEntry | OrgEnableTwoFactorRequirementAuditEntry | OrgInviteMemberAuditEntry | OrgInviteToBusinessAuditEntry | OrgOauthAppAccessApprovedAuditEntry | OrgOauthAppAccessDeniedAuditEntry | OrgOauthAppAccessRequestedAuditEntry | OrgRemoveBillingManagerAuditEntry | OrgRemoveMemberAuditEntry | OrgRemoveOutsideCollaboratorAuditEntry | OrgRestoreMemberAuditEntry | OrgUnblockUserAuditEntry | OrgUpdateDefaultRepositoryPermissionAuditEntry | OrgUpdateMemberAuditEntry | OrgUpdateMemberRepositoryCreationPermissionAuditEntry | OrgUpdateMemberRepositoryInvitationPermissionAuditEntry | Organization | OrganizationIdentityProvider | OrganizationInvitation | Package | PackageFile | PackageTag | PackageVersion | PinnedEvent | PinnedIssue | PrivateRepositoryForkingDisableAuditEntry | PrivateRepositoryForkingEnableAuditEntry | Project | ProjectCard | ProjectColumn | PublicKey | PullRequest | PullRequestCommit | PullRequestCommitCommentThread | PullRequestReview | PullRequestReviewComment | PullRequestReviewThread | Push | PushAllowance | Reaction | ReadyForReviewEvent | Ref | ReferencedEvent | RegistryPackage | RegistryPackageDependency | RegistryPackageFile | RegistryPackageTag | RegistryPackageVersion | Release | ReleaseAsset | RemovedFromProjectEvent | RenamedTitleEvent | ReopenedEvent | RepoAccessAuditEntry | RepoAddMemberAuditEntry | RepoAddTopicAuditEntry | RepoArchivedAuditEntry | RepoChangeMergeSettingAuditEntry | RepoConfigDisableAnonymousGitAccessAuditEntry | RepoConfigDisableCollaboratorsOnlyAuditEntry | RepoConfigDisableContributorsOnlyAuditEntry | RepoConfigDisableSockpuppetDisallowedAuditEntry | RepoConfigEnableAnonymousGitAccessAuditEntry | RepoConfigEnableCollaboratorsOnlyAuditEntry | RepoConfigEnableContributorsOnlyAuditEntry | RepoConfigEnableSockpuppetDisallowedAuditEntry | RepoConfigLockAnonymousGitAccessAuditEntry | RepoConfigUnlockAnonymousGitAccessAuditEntry | RepoCreateAuditEntry | RepoDestroyAuditEntry | RepoRemoveMemberAuditEntry | RepoRemoveTopicAuditEntry | Repository | RepositoryInvitation | RepositoryTopic | RepositoryVisibilityChangeDisableAuditEntry | RepositoryVisibilityChangeEnableAuditEntry | RepositoryVulnerabilityAlert | ReviewDismissalAllowance | ReviewDismissedEvent | ReviewRequest | ReviewRequestRemovedEvent | ReviewRequestedEvent | SavedReply | SecurityAdvisory | SponsorsListing | SponsorsTier | Sponsorship | Status | StatusCheckRollup | StatusContext | SubscribedEvent | Tag | Team | TeamAddMemberAuditEntry | TeamAddRepositoryAuditEntry | TeamChangeParentTeamAuditEntry | TeamDiscussion | TeamDiscussionComment | TeamRemoveMemberAuditEntry | TeamRemoveRepositoryAuditEntry | Topic | TransferredEvent | Tree | UnassignedEvent | UnlabeledEvent | UnlockedEvent | UnmarkedAsDuplicateEvent | UnpinnedEvent | UnsubscribedEvent | User | UserBlockedEvent | UserContentEdit | UserStatus) & { __isUnion?: true }


/** Metadata for an audit entry with action oauth_application.* */
export type OauthApplicationAuditEntryData = (OauthApplicationCreateAuditEntry | OrgOauthAppAccessApprovedAuditEntry | OrgOauthAppAccessDeniedAuditEntry | OrgOauthAppAccessRequestedAuditEntry) & { __isUnion?: true }


/** Audit log entry for a oauth_application.create event. */
export interface OauthApplicationCreateAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The application URL of the OAuth Application. */
    applicationUrl?: Scalars['URI']
    /** The callback URL of the OAuth Application. */
    callbackUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The name of the OAuth Application. */
    oauthApplicationName?: Scalars['String']
    /** The HTTP path for the OAuth Application */
    oauthApplicationResourcePath?: Scalars['URI']
    /** The HTTP URL for the OAuth Application */
    oauthApplicationUrl?: Scalars['URI']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The rate limit of the OAuth Application. */
    rateLimit?: Scalars['Int']
    /** The state of the OAuth Application. */
    state?: OauthApplicationCreateAuditEntryState
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OauthApplicationCreateAuditEntry'
}


/** The state of an OAuth Application when it was created. */
export type OauthApplicationCreateAuditEntryState = 'ACTIVE' | 'PENDING_DELETION' | 'SUSPENDED'


/** The corresponding operation type for the action */
export type OperationType = 'ACCESS' | 'AUTHENTICATION' | 'CREATE' | 'MODIFY' | 'REMOVE' | 'RESTORE' | 'TRANSFER'


/** Possible directions in which to order a list of items when provided an `orderBy` argument. */
export type OrderDirection = 'ASC' | 'DESC'


/** Audit log entry for a org.add_billing_manager */
export interface OrgAddBillingManagerAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The email address used to invite a billing manager for the organization. */
    invitationEmail?: Scalars['String']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgAddBillingManagerAuditEntry'
}


/** Audit log entry for a org.add_member */
export interface OrgAddMemberAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The permission level of the member added to the organization. */
    permission?: OrgAddMemberAuditEntryPermission
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgAddMemberAuditEntry'
}


/** The permissions available to members on an Organization. */
export type OrgAddMemberAuditEntryPermission = 'ADMIN' | 'READ'


/** Audit log entry for a org.block_user */
export interface OrgBlockUserAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The blocked user. */
    blockedUser?: User
    /** The username of the blocked user. */
    blockedUserName?: Scalars['String']
    /** The HTTP path for the blocked user. */
    blockedUserResourcePath?: Scalars['URI']
    /** The HTTP URL for the blocked user. */
    blockedUserUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgBlockUserAuditEntry'
}


/** Audit log entry for a org.config.disable_collaborators_only event. */
export interface OrgConfigDisableCollaboratorsOnlyAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgConfigDisableCollaboratorsOnlyAuditEntry'
}


/** Audit log entry for a org.config.enable_collaborators_only event. */
export interface OrgConfigEnableCollaboratorsOnlyAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgConfigEnableCollaboratorsOnlyAuditEntry'
}


/** Audit log entry for a org.create event. */
export interface OrgCreateAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The billing plan for the Organization. */
    billingPlan?: OrgCreateAuditEntryBillingPlan
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgCreateAuditEntry'
}


/** The billing plans available for organizations. */
export type OrgCreateAuditEntryBillingPlan = 'BUSINESS' | 'BUSINESS_PLUS' | 'FREE' | 'TIERED_PER_SEAT' | 'UNLIMITED'


/** Audit log entry for a org.disable_oauth_app_restrictions event. */
export interface OrgDisableOauthAppRestrictionsAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgDisableOauthAppRestrictionsAuditEntry'
}


/** Audit log entry for a org.disable_saml event. */
export interface OrgDisableSamlAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The SAML provider's digest algorithm URL. */
    digestMethodUrl?: Scalars['URI']
    id: Scalars['ID']
    /** The SAML provider's issuer URL. */
    issuerUrl?: Scalars['URI']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The SAML provider's signature algorithm URL. */
    signatureMethodUrl?: Scalars['URI']
    /** The SAML provider's single sign-on URL. */
    singleSignOnUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgDisableSamlAuditEntry'
}


/** Audit log entry for a org.disable_two_factor_requirement event. */
export interface OrgDisableTwoFactorRequirementAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgDisableTwoFactorRequirementAuditEntry'
}


/** Audit log entry for a org.enable_oauth_app_restrictions event. */
export interface OrgEnableOauthAppRestrictionsAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgEnableOauthAppRestrictionsAuditEntry'
}


/** Audit log entry for a org.enable_saml event. */
export interface OrgEnableSamlAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The SAML provider's digest algorithm URL. */
    digestMethodUrl?: Scalars['URI']
    id: Scalars['ID']
    /** The SAML provider's issuer URL. */
    issuerUrl?: Scalars['URI']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The SAML provider's signature algorithm URL. */
    signatureMethodUrl?: Scalars['URI']
    /** The SAML provider's single sign-on URL. */
    singleSignOnUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgEnableSamlAuditEntry'
}


/** Audit log entry for a org.enable_two_factor_requirement event. */
export interface OrgEnableTwoFactorRequirementAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgEnableTwoFactorRequirementAuditEntry'
}


/** Audit log entry for a org.invite_member event. */
export interface OrgInviteMemberAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The email address of the organization invitation. */
    email?: Scalars['String']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The organization invitation. */
    organizationInvitation?: OrganizationInvitation
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgInviteMemberAuditEntry'
}


/** Audit log entry for a org.invite_to_business event. */
export interface OrgInviteToBusinessAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: Scalars['URI']
    /** The slug of the enterprise. */
    enterpriseSlug?: Scalars['String']
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: Scalars['URI']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgInviteToBusinessAuditEntry'
}


/** Audit log entry for a org.oauth_app_access_approved event. */
export interface OrgOauthAppAccessApprovedAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The name of the OAuth Application. */
    oauthApplicationName?: Scalars['String']
    /** The HTTP path for the OAuth Application */
    oauthApplicationResourcePath?: Scalars['URI']
    /** The HTTP URL for the OAuth Application */
    oauthApplicationUrl?: Scalars['URI']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgOauthAppAccessApprovedAuditEntry'
}


/** Audit log entry for a org.oauth_app_access_denied event. */
export interface OrgOauthAppAccessDeniedAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The name of the OAuth Application. */
    oauthApplicationName?: Scalars['String']
    /** The HTTP path for the OAuth Application */
    oauthApplicationResourcePath?: Scalars['URI']
    /** The HTTP URL for the OAuth Application */
    oauthApplicationUrl?: Scalars['URI']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgOauthAppAccessDeniedAuditEntry'
}


/** Audit log entry for a org.oauth_app_access_requested event. */
export interface OrgOauthAppAccessRequestedAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The name of the OAuth Application. */
    oauthApplicationName?: Scalars['String']
    /** The HTTP path for the OAuth Application */
    oauthApplicationResourcePath?: Scalars['URI']
    /** The HTTP URL for the OAuth Application */
    oauthApplicationUrl?: Scalars['URI']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgOauthAppAccessRequestedAuditEntry'
}


/** Audit log entry for a org.remove_billing_manager event. */
export interface OrgRemoveBillingManagerAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The reason for the billing manager being removed. */
    reason?: OrgRemoveBillingManagerAuditEntryReason
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgRemoveBillingManagerAuditEntry'
}


/** The reason a billing manager was removed from an Organization. */
export type OrgRemoveBillingManagerAuditEntryReason = 'SAML_EXTERNAL_IDENTITY_MISSING' | 'SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY' | 'TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE'


/** Audit log entry for a org.remove_member event. */
export interface OrgRemoveMemberAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The types of membership the member has with the organization. */
    membershipTypes?: OrgRemoveMemberAuditEntryMembershipType[]
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The reason for the member being removed. */
    reason?: OrgRemoveMemberAuditEntryReason
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgRemoveMemberAuditEntry'
}


/** The type of membership a user has with an Organization. */
export type OrgRemoveMemberAuditEntryMembershipType = 'ADMIN' | 'BILLING_MANAGER' | 'DIRECT_MEMBER' | 'OUTSIDE_COLLABORATOR' | 'UNAFFILIATED'


/** The reason a member was removed from an Organization. */
export type OrgRemoveMemberAuditEntryReason = 'SAML_EXTERNAL_IDENTITY_MISSING' | 'SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY' | 'TWO_FACTOR_ACCOUNT_RECOVERY' | 'TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE' | 'USER_ACCOUNT_DELETED'


/** Audit log entry for a org.remove_outside_collaborator event. */
export interface OrgRemoveOutsideCollaboratorAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The types of membership the outside collaborator has with the organization. */
    membershipTypes?: OrgRemoveOutsideCollaboratorAuditEntryMembershipType[]
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The reason for the outside collaborator being removed from the Organization. */
    reason?: OrgRemoveOutsideCollaboratorAuditEntryReason
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgRemoveOutsideCollaboratorAuditEntry'
}


/** The type of membership a user has with an Organization. */
export type OrgRemoveOutsideCollaboratorAuditEntryMembershipType = 'BILLING_MANAGER' | 'OUTSIDE_COLLABORATOR' | 'UNAFFILIATED'


/** The reason an outside collaborator was removed from an Organization. */
export type OrgRemoveOutsideCollaboratorAuditEntryReason = 'SAML_EXTERNAL_IDENTITY_MISSING' | 'TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE'


/** Audit log entry for a org.restore_member event. */
export interface OrgRestoreMemberAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The number of custom email routings for the restored member. */
    restoredCustomEmailRoutingsCount?: Scalars['Int']
    /** The number of issue assignemnts for the restored member. */
    restoredIssueAssignmentsCount?: Scalars['Int']
    /** Restored organization membership objects. */
    restoredMemberships?: OrgRestoreMemberAuditEntryMembership[]
    /** The number of restored memberships. */
    restoredMembershipsCount?: Scalars['Int']
    /** The number of repositories of the restored member. */
    restoredRepositoriesCount?: Scalars['Int']
    /** The number of starred repositories for the restored member. */
    restoredRepositoryStarsCount?: Scalars['Int']
    /** The number of watched repositories for the restored member. */
    restoredRepositoryWatchesCount?: Scalars['Int']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgRestoreMemberAuditEntry'
}


/** Types of memberships that can be restored for an Organization member. */
export type OrgRestoreMemberAuditEntryMembership = (OrgRestoreMemberMembershipOrganizationAuditEntryData | OrgRestoreMemberMembershipRepositoryAuditEntryData | OrgRestoreMemberMembershipTeamAuditEntryData) & { __isUnion?: true }


/** Metadata for an organization membership for org.restore_member actions */
export interface OrgRestoreMemberMembershipOrganizationAuditEntryData {
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    __typename: 'OrgRestoreMemberMembershipOrganizationAuditEntryData'
}


/** Metadata for a repository membership for org.restore_member actions */
export interface OrgRestoreMemberMembershipRepositoryAuditEntryData {
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    __typename: 'OrgRestoreMemberMembershipRepositoryAuditEntryData'
}


/** Metadata for a team membership for org.restore_member actions */
export interface OrgRestoreMemberMembershipTeamAuditEntryData {
    /** The team associated with the action */
    team?: Team
    /** The name of the team */
    teamName?: Scalars['String']
    /** The HTTP path for this team */
    teamResourcePath?: Scalars['URI']
    /** The HTTP URL for this team */
    teamUrl?: Scalars['URI']
    __typename: 'OrgRestoreMemberMembershipTeamAuditEntryData'
}


/** Audit log entry for a org.unblock_user */
export interface OrgUnblockUserAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The user being unblocked by the organization. */
    blockedUser?: User
    /** The username of the blocked user. */
    blockedUserName?: Scalars['String']
    /** The HTTP path for the blocked user. */
    blockedUserResourcePath?: Scalars['URI']
    /** The HTTP URL for the blocked user. */
    blockedUserUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgUnblockUserAuditEntry'
}


/** Audit log entry for a org.update_default_repository_permission */
export interface OrgUpdateDefaultRepositoryPermissionAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The new default repository permission level for the organization. */
    permission?: OrgUpdateDefaultRepositoryPermissionAuditEntryPermission
    /** The former default repository permission level for the organization. */
    permissionWas?: OrgUpdateDefaultRepositoryPermissionAuditEntryPermission
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgUpdateDefaultRepositoryPermissionAuditEntry'
}


/** The default permission a repository can have in an Organization. */
export type OrgUpdateDefaultRepositoryPermissionAuditEntryPermission = 'ADMIN' | 'NONE' | 'READ' | 'WRITE'


/** Audit log entry for a org.update_member event. */
export interface OrgUpdateMemberAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The new member permission level for the organization. */
    permission?: OrgUpdateMemberAuditEntryPermission
    /** The former member permission level for the organization. */
    permissionWas?: OrgUpdateMemberAuditEntryPermission
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgUpdateMemberAuditEntry'
}


/** The permissions available to members on an Organization. */
export type OrgUpdateMemberAuditEntryPermission = 'ADMIN' | 'READ'


/** Audit log entry for a org.update_member_repository_creation_permission event. */
export interface OrgUpdateMemberRepositoryCreationPermissionAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** Can members create repositories in the organization. */
    canCreateRepositories?: Scalars['Boolean']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    /** The permission for visibility level of repositories for this organization. */
    visibility?: OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility
    __typename: 'OrgUpdateMemberRepositoryCreationPermissionAuditEntry'
}


/** The permissions available for repository creation on an Organization. */
export type OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility = 'ALL' | 'PUBLIC'


/** Audit log entry for a org.update_member_repository_invitation_permission event. */
export interface OrgUpdateMemberRepositoryInvitationPermissionAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** Can outside collaborators be invited to repositories in the organization. */
    canInviteOutsideCollaboratorsToRepositories?: Scalars['Boolean']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'OrgUpdateMemberRepositoryInvitationPermissionAuditEntry'
}


/** An account on GitHub, with one or more owners, that has repositories, members and teams. */
export interface Organization {
    /** Determine if this repository owner has any items that can be pinned to their profile. */
    anyPinnableItems: Scalars['Boolean']
    /** Audit log entries of the organization */
    auditLog: OrganizationAuditEntryConnection
    /** A URL pointing to the organization's public avatar. */
    avatarUrl: Scalars['URI']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The organization's public profile description. */
    description?: Scalars['String']
    /** The organization's public profile description rendered to HTML. */
    descriptionHTML?: Scalars['String']
    /** The organization's public email. */
    email?: Scalars['String']
    id: Scalars['ID']
    /** The setting value for whether the organization has an IP allow list enabled. */
    ipAllowListEnabledSetting: IpAllowListEnabledSettingValue
    /** The IP addresses that are allowed to access resources owned by the organization. */
    ipAllowListEntries: IpAllowListEntryConnection
    /** Whether the organization has verified its profile email and website. */
    isVerified: Scalars['Boolean']
    /**
     * Showcases a selection of repositories and gists that the profile owner has
     * either curated or that have been selected automatically based on popularity.
     */
    itemShowcase: ProfileItemShowcase
    /** The organization's public profile location. */
    location?: Scalars['String']
    /** The organization's login name. */
    login: Scalars['String']
    /** Get the status messages members of this entity have set that are either public or visible only to the organization. */
    memberStatuses: UserStatusConnection
    /** A list of users who are members of this organization. */
    membersWithRole: OrganizationMemberConnection
    /** The organization's public profile name. */
    name?: Scalars['String']
    /** The HTTP path creating a new team */
    newTeamResourcePath: Scalars['URI']
    /** The HTTP URL creating a new team */
    newTeamUrl: Scalars['URI']
    /** The billing email for the organization. */
    organizationBillingEmail?: Scalars['String']
    /** A list of packages under the owner. */
    packages: PackageConnection
    /** A list of users who have been invited to join this organization. */
    pendingMembers: UserConnection
    /** A list of repositories and gists this profile owner can pin to their profile. */
    pinnableItems: PinnableItemConnection
    /** A list of repositories and gists this profile owner has pinned to their profile */
    pinnedItems: PinnableItemConnection
    /** Returns how many more items this profile owner can pin to their profile. */
    pinnedItemsRemaining: Scalars['Int']
    /** Find project by number. */
    project?: Project
    /** A list of projects under the owner. */
    projects: ProjectConnection
    /** The HTTP path listing organization's projects */
    projectsResourcePath: Scalars['URI']
    /** The HTTP URL listing organization's projects */
    projectsUrl: Scalars['URI']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageOwner` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages under the owner.
     */
    registryPackages: RegistryPackageConnection
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageSearch` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages for a particular search query.
     */
    registryPackagesForQuery: RegistryPackageConnection
    /** A list of repositories that the user owns. */
    repositories: RepositoryConnection
    /** Find Repository. */
    repository?: Repository
    /**
     * When true the organization requires all members, billing managers, and outside
     * collaborators to enable two-factor authentication.
     */
    requiresTwoFactorAuthentication?: Scalars['Boolean']
    /** The HTTP path for this organization. */
    resourcePath: Scalars['URI']
    /** The Organization's SAML identity providers */
    samlIdentityProvider?: OrganizationIdentityProvider
    /** The GitHub Sponsors listing for this user. */
    sponsorsListing?: SponsorsListing
    /** This object's sponsorships as the maintainer. */
    sponsorshipsAsMaintainer: SponsorshipConnection
    /** This object's sponsorships as the sponsor. */
    sponsorshipsAsSponsor: SponsorshipConnection
    /** Find an organization's team by its slug. */
    team?: Team
    /** A list of teams in this organization. */
    teams: TeamConnection
    /** The HTTP path listing organization's teams */
    teamsResourcePath: Scalars['URI']
    /** The HTTP URL listing organization's teams */
    teamsUrl: Scalars['URI']
    /** The organization's Twitter username. */
    twitterUsername?: Scalars['String']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this organization. */
    url: Scalars['URI']
    /** Organization is adminable by the viewer. */
    viewerCanAdminister: Scalars['Boolean']
    /** Can the viewer pin repositories and gists to the profile? */
    viewerCanChangePinnedItems: Scalars['Boolean']
    /** Can the current viewer create new projects on this owner. */
    viewerCanCreateProjects: Scalars['Boolean']
    /** Viewer can create repositories on this organization */
    viewerCanCreateRepositories: Scalars['Boolean']
    /** Viewer can create teams on this organization. */
    viewerCanCreateTeams: Scalars['Boolean']
    /** Viewer is an active member of this organization. */
    viewerIsAMember: Scalars['Boolean']
    /** The organization's public profile URL. */
    websiteUrl?: Scalars['URI']
    __typename: 'Organization'
}


/** An audit entry in an organization audit log. */
export type OrganizationAuditEntry = (MembersCanDeleteReposClearAuditEntry | MembersCanDeleteReposDisableAuditEntry | MembersCanDeleteReposEnableAuditEntry | OauthApplicationCreateAuditEntry | OrgAddBillingManagerAuditEntry | OrgAddMemberAuditEntry | OrgBlockUserAuditEntry | OrgConfigDisableCollaboratorsOnlyAuditEntry | OrgConfigEnableCollaboratorsOnlyAuditEntry | OrgCreateAuditEntry | OrgDisableOauthAppRestrictionsAuditEntry | OrgDisableSamlAuditEntry | OrgDisableTwoFactorRequirementAuditEntry | OrgEnableOauthAppRestrictionsAuditEntry | OrgEnableSamlAuditEntry | OrgEnableTwoFactorRequirementAuditEntry | OrgInviteMemberAuditEntry | OrgInviteToBusinessAuditEntry | OrgOauthAppAccessApprovedAuditEntry | OrgOauthAppAccessDeniedAuditEntry | OrgOauthAppAccessRequestedAuditEntry | OrgRemoveBillingManagerAuditEntry | OrgRemoveMemberAuditEntry | OrgRemoveOutsideCollaboratorAuditEntry | OrgRestoreMemberAuditEntry | OrgUnblockUserAuditEntry | OrgUpdateDefaultRepositoryPermissionAuditEntry | OrgUpdateMemberAuditEntry | OrgUpdateMemberRepositoryCreationPermissionAuditEntry | OrgUpdateMemberRepositoryInvitationPermissionAuditEntry | PrivateRepositoryForkingDisableAuditEntry | PrivateRepositoryForkingEnableAuditEntry | RepoAccessAuditEntry | RepoAddMemberAuditEntry | RepoAddTopicAuditEntry | RepoArchivedAuditEntry | RepoChangeMergeSettingAuditEntry | RepoConfigDisableAnonymousGitAccessAuditEntry | RepoConfigDisableCollaboratorsOnlyAuditEntry | RepoConfigDisableContributorsOnlyAuditEntry | RepoConfigDisableSockpuppetDisallowedAuditEntry | RepoConfigEnableAnonymousGitAccessAuditEntry | RepoConfigEnableCollaboratorsOnlyAuditEntry | RepoConfigEnableContributorsOnlyAuditEntry | RepoConfigEnableSockpuppetDisallowedAuditEntry | RepoConfigLockAnonymousGitAccessAuditEntry | RepoConfigUnlockAnonymousGitAccessAuditEntry | RepoCreateAuditEntry | RepoDestroyAuditEntry | RepoRemoveMemberAuditEntry | RepoRemoveTopicAuditEntry | RepositoryVisibilityChangeDisableAuditEntry | RepositoryVisibilityChangeEnableAuditEntry | TeamAddMemberAuditEntry | TeamAddRepositoryAuditEntry | TeamChangeParentTeamAuditEntry | TeamRemoveMemberAuditEntry | TeamRemoveRepositoryAuditEntry) & { __isUnion?: true }


/** The connection type for OrganizationAuditEntry. */
export interface OrganizationAuditEntryConnection {
    /** A list of edges. */
    edges?: (OrganizationAuditEntryEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (OrganizationAuditEntry | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'OrganizationAuditEntryConnection'
}


/** Metadata for an audit entry with action org.* */
export type OrganizationAuditEntryData = (MembersCanDeleteReposClearAuditEntry | MembersCanDeleteReposDisableAuditEntry | MembersCanDeleteReposEnableAuditEntry | OauthApplicationCreateAuditEntry | OrgAddBillingManagerAuditEntry | OrgAddMemberAuditEntry | OrgBlockUserAuditEntry | OrgConfigDisableCollaboratorsOnlyAuditEntry | OrgConfigEnableCollaboratorsOnlyAuditEntry | OrgCreateAuditEntry | OrgDisableOauthAppRestrictionsAuditEntry | OrgDisableSamlAuditEntry | OrgDisableTwoFactorRequirementAuditEntry | OrgEnableOauthAppRestrictionsAuditEntry | OrgEnableSamlAuditEntry | OrgEnableTwoFactorRequirementAuditEntry | OrgInviteMemberAuditEntry | OrgInviteToBusinessAuditEntry | OrgOauthAppAccessApprovedAuditEntry | OrgOauthAppAccessDeniedAuditEntry | OrgOauthAppAccessRequestedAuditEntry | OrgRemoveBillingManagerAuditEntry | OrgRemoveMemberAuditEntry | OrgRemoveOutsideCollaboratorAuditEntry | OrgRestoreMemberAuditEntry | OrgRestoreMemberMembershipOrganizationAuditEntryData | OrgUnblockUserAuditEntry | OrgUpdateDefaultRepositoryPermissionAuditEntry | OrgUpdateMemberAuditEntry | OrgUpdateMemberRepositoryCreationPermissionAuditEntry | OrgUpdateMemberRepositoryInvitationPermissionAuditEntry | PrivateRepositoryForkingDisableAuditEntry | PrivateRepositoryForkingEnableAuditEntry | RepoAccessAuditEntry | RepoAddMemberAuditEntry | RepoAddTopicAuditEntry | RepoArchivedAuditEntry | RepoChangeMergeSettingAuditEntry | RepoConfigDisableAnonymousGitAccessAuditEntry | RepoConfigDisableCollaboratorsOnlyAuditEntry | RepoConfigDisableContributorsOnlyAuditEntry | RepoConfigDisableSockpuppetDisallowedAuditEntry | RepoConfigEnableAnonymousGitAccessAuditEntry | RepoConfigEnableCollaboratorsOnlyAuditEntry | RepoConfigEnableContributorsOnlyAuditEntry | RepoConfigEnableSockpuppetDisallowedAuditEntry | RepoConfigLockAnonymousGitAccessAuditEntry | RepoConfigUnlockAnonymousGitAccessAuditEntry | RepoCreateAuditEntry | RepoDestroyAuditEntry | RepoRemoveMemberAuditEntry | RepoRemoveTopicAuditEntry | RepositoryVisibilityChangeDisableAuditEntry | RepositoryVisibilityChangeEnableAuditEntry | TeamAddMemberAuditEntry | TeamAddRepositoryAuditEntry | TeamChangeParentTeamAuditEntry | TeamRemoveMemberAuditEntry | TeamRemoveRepositoryAuditEntry) & { __isUnion?: true }


/** An edge in a connection. */
export interface OrganizationAuditEntryEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: OrganizationAuditEntry
    __typename: 'OrganizationAuditEntryEdge'
}


/** The connection type for Organization. */
export interface OrganizationConnection {
    /** A list of edges. */
    edges?: (OrganizationEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Organization | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'OrganizationConnection'
}


/** An edge in a connection. */
export interface OrganizationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Organization
    __typename: 'OrganizationEdge'
}


/** An Identity Provider configured to provision SAML and SCIM identities for Organizations */
export interface OrganizationIdentityProvider {
    /** The digest algorithm used to sign SAML requests for the Identity Provider. */
    digestMethod?: Scalars['URI']
    /** External Identities provisioned by this Identity Provider */
    externalIdentities: ExternalIdentityConnection
    id: Scalars['ID']
    /** The x509 certificate used by the Identity Provder to sign assertions and responses. */
    idpCertificate?: Scalars['X509Certificate']
    /** The Issuer Entity ID for the SAML Identity Provider */
    issuer?: Scalars['String']
    /** Organization this Identity Provider belongs to */
    organization?: Organization
    /** The signature algorithm used to sign SAML requests for the Identity Provider. */
    signatureMethod?: Scalars['URI']
    /** The URL endpoint for the Identity Provider's SAML SSO. */
    ssoUrl?: Scalars['URI']
    __typename: 'OrganizationIdentityProvider'
}


/** An Invitation for a user to an organization. */
export interface OrganizationInvitation {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The email address of the user invited to the organization. */
    email?: Scalars['String']
    id: Scalars['ID']
    /** The type of invitation that was sent (e.g. email, user). */
    invitationType: OrganizationInvitationType
    /** The user who was invited to the organization. */
    invitee?: User
    /** The user who created the invitation. */
    inviter: User
    /** The organization the invite is for */
    organization: Organization
    /** The user's pending role in the organization (e.g. member, owner). */
    role: OrganizationInvitationRole
    __typename: 'OrganizationInvitation'
}


/** The connection type for OrganizationInvitation. */
export interface OrganizationInvitationConnection {
    /** A list of edges. */
    edges?: (OrganizationInvitationEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (OrganizationInvitation | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'OrganizationInvitationConnection'
}


/** An edge in a connection. */
export interface OrganizationInvitationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: OrganizationInvitation
    __typename: 'OrganizationInvitationEdge'
}


/** The possible organization invitation roles. */
export type OrganizationInvitationRole = 'ADMIN' | 'BILLING_MANAGER' | 'DIRECT_MEMBER' | 'REINSTATE'


/** The possible organization invitation types. */
export type OrganizationInvitationType = 'EMAIL' | 'USER'


/** The connection type for User. */
export interface OrganizationMemberConnection {
    /** A list of edges. */
    edges?: (OrganizationMemberEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'OrganizationMemberConnection'
}


/** Represents a user within an organization. */
export interface OrganizationMemberEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer. */
    hasTwoFactorEnabled?: Scalars['Boolean']
    /** The item at the end of the edge. */
    node?: User
    /** The role this user has in the organization. */
    role?: OrganizationMemberRole
    __typename: 'OrganizationMemberEdge'
}


/** The possible roles within an organization for its members. */
export type OrganizationMemberRole = 'ADMIN' | 'MEMBER'


/** The possible values for the members can create repositories setting on an organization. */
export type OrganizationMembersCanCreateRepositoriesSettingValue = 'ALL' | 'DISABLED' | 'PRIVATE'


/** Properties by which organization connections can be ordered. */
export type OrganizationOrderField = 'CREATED_AT' | 'LOGIN'


/** An organization teams hovercard context */
export interface OrganizationTeamsHovercardContext {
    /** A string describing this context */
    message: Scalars['String']
    /** An octicon to accompany this context */
    octicon: Scalars['String']
    /** Teams in this organization the user is a member of that are relevant */
    relevantTeams: TeamConnection
    /** The path for the full team list for this user */
    teamsResourcePath: Scalars['URI']
    /** The URL for the full team list for this user */
    teamsUrl: Scalars['URI']
    /** The total number of teams the user is on in the organization */
    totalTeamCount: Scalars['Int']
    __typename: 'OrganizationTeamsHovercardContext'
}


/** An organization list hovercard context */
export interface OrganizationsHovercardContext {
    /** A string describing this context */
    message: Scalars['String']
    /** An octicon to accompany this context */
    octicon: Scalars['String']
    /** Organizations this user is a member of that are relevant */
    relevantOrganizations: OrganizationConnection
    /** The total number of organizations this user is in */
    totalOrganizationCount: Scalars['Int']
    __typename: 'OrganizationsHovercardContext'
}


/** Information for an uploaded package. */
export interface Package {
    id: Scalars['ID']
    /** Find the latest version for the package. */
    latestVersion?: PackageVersion
    /** Identifies the name of the package. */
    name: Scalars['String']
    /** Identifies the type of the package. */
    packageType: PackageType
    /** The repository this package belongs to. */
    repository?: Repository
    /** Statistics about package activity. */
    statistics?: PackageStatistics
    /** Find package version by version string. */
    version?: PackageVersion
    /** list of versions for this package */
    versions: PackageVersionConnection
    __typename: 'Package'
}


/** The connection type for Package. */
export interface PackageConnection {
    /** A list of edges. */
    edges?: (PackageEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Package | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PackageConnection'
}


/** An edge in a connection. */
export interface PackageEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Package
    __typename: 'PackageEdge'
}


/** A file in a package version. */
export interface PackageFile {
    id: Scalars['ID']
    /** MD5 hash of the file. */
    md5?: Scalars['String']
    /** Name of the file. */
    name: Scalars['String']
    /** The package version this file belongs to. */
    packageVersion?: PackageVersion
    /** SHA1 hash of the file. */
    sha1?: Scalars['String']
    /** SHA256 hash of the file. */
    sha256?: Scalars['String']
    /** Size of the file in bytes. */
    size?: Scalars['Int']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** URL to download the asset. */
    url?: Scalars['URI']
    __typename: 'PackageFile'
}


/** The connection type for PackageFile. */
export interface PackageFileConnection {
    /** A list of edges. */
    edges?: (PackageFileEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PackageFile | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PackageFileConnection'
}


/** An edge in a connection. */
export interface PackageFileEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PackageFile
    __typename: 'PackageFileEdge'
}


/** Properties by which package file connections can be ordered. */
export type PackageFileOrderField = 'CREATED_AT'


/** Properties by which package connections can be ordered. */
export type PackageOrderField = 'CREATED_AT'


/** Represents an owner of a package. */
export type PackageOwner = (Organization | Repository | User) & { __isUnion?: true }


/** Represents a object that contains package activity statistics such as downloads. */
export interface PackageStatistics {
    /** Number of times the package was downloaded since it was created. */
    downloadsTotalCount: Scalars['Int']
    __typename: 'PackageStatistics'
}


/** A version tag contains the mapping between a tag name and a version. */
export interface PackageTag {
    id: Scalars['ID']
    /** Identifies the tag name of the version. */
    name: Scalars['String']
    /** Version that the tag is associated with. */
    version?: PackageVersion
    __typename: 'PackageTag'
}


/** The possible types of a package. */
export type PackageType = 'DEBIAN' | 'DOCKER' | 'MAVEN' | 'NPM' | 'NUGET' | 'PYPI' | 'RUBYGEMS'


/** Information about a specific package version. */
export interface PackageVersion {
    /** List of files associated with this package version */
    files: PackageFileConnection
    id: Scalars['ID']
    /** The package associated with this version. */
    package?: Package
    /** The platform this version was built for. */
    platform?: Scalars['String']
    /** Whether or not this version is a pre-release. */
    preRelease: Scalars['Boolean']
    /** The README of this package version. */
    readme?: Scalars['String']
    /** The release associated with this package version. */
    release?: Release
    /** Statistics about package activity. */
    statistics?: PackageVersionStatistics
    /** The package version summary. */
    summary?: Scalars['String']
    /** The version string. */
    version: Scalars['String']
    __typename: 'PackageVersion'
}


/** The connection type for PackageVersion. */
export interface PackageVersionConnection {
    /** A list of edges. */
    edges?: (PackageVersionEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PackageVersion | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PackageVersionConnection'
}


/** An edge in a connection. */
export interface PackageVersionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PackageVersion
    __typename: 'PackageVersionEdge'
}


/** Properties by which package version connections can be ordered. */
export type PackageVersionOrderField = 'CREATED_AT'


/** Represents a object that contains package version activity statistics such as downloads. */
export interface PackageVersionStatistics {
    /** Number of times the package was downloaded since it was created. */
    downloadsTotalCount: Scalars['Int']
    __typename: 'PackageVersionStatistics'
}


/** Information about pagination in a connection. */
export interface PageInfo {
    /** When paginating forwards, the cursor to continue. */
    endCursor?: Scalars['String']
    /** When paginating forwards, are there more items? */
    hasNextPage: Scalars['Boolean']
    /** When paginating backwards, are there more items? */
    hasPreviousPage: Scalars['Boolean']
    /** When paginating backwards, the cursor to continue. */
    startCursor?: Scalars['String']
    __typename: 'PageInfo'
}


/** Types that can grant permissions on a repository to a user */
export type PermissionGranter = (Organization | Repository | Team) & { __isUnion?: true }


/** A level of permission and source for a user's access to a repository. */
export interface PermissionSource {
    /** The organization the repository belongs to. */
    organization: Organization
    /** The level of access this source has granted to the user. */
    permission: DefaultRepositoryPermissionField
    /** The source of this permission. */
    source: PermissionGranter
    __typename: 'PermissionSource'
}


/** Autogenerated return type of PinIssue */
export interface PinIssuePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The issue that was pinned */
    issue?: Issue
    __typename: 'PinIssuePayload'
}


/** Types that can be pinned to a profile page. */
export type PinnableItem = (Gist | Repository) & { __isUnion?: true }


/** The connection type for PinnableItem. */
export interface PinnableItemConnection {
    /** A list of edges. */
    edges?: (PinnableItemEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PinnableItem | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PinnableItemConnection'
}


/** An edge in a connection. */
export interface PinnableItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PinnableItem
    __typename: 'PinnableItemEdge'
}


/** Represents items that can be pinned to a profile page or dashboard. */
export type PinnableItemType = 'GIST' | 'ISSUE' | 'ORGANIZATION' | 'PROJECT' | 'PULL_REQUEST' | 'REPOSITORY' | 'TEAM' | 'USER'


/** Represents a 'pinned' event on a given issue or pull request. */
export interface PinnedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Identifies the issue associated with the event. */
    issue: Issue
    __typename: 'PinnedEvent'
}


/** A Pinned Issue is a issue pinned to a repository's index page. */
export interface PinnedIssue {
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** The issue that was pinned. */
    issue: Issue
    /** The actor that pinned this issue. */
    pinnedBy: Actor
    /** The repository that this issue was pinned to. */
    repository: Repository
    __typename: 'PinnedIssue'
}


/** The connection type for PinnedIssue. */
export interface PinnedIssueConnection {
    /** A list of edges. */
    edges?: (PinnedIssueEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PinnedIssue | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PinnedIssueConnection'
}


/** An edge in a connection. */
export interface PinnedIssueEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PinnedIssue
    __typename: 'PinnedIssueEdge'
}


/** Audit log entry for a private_repository_forking.disable event. */
export interface PrivateRepositoryForkingDisableAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: Scalars['URI']
    /** The slug of the enterprise. */
    enterpriseSlug?: Scalars['String']
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: Scalars['URI']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'PrivateRepositoryForkingDisableAuditEntry'
}


/** Audit log entry for a private_repository_forking.enable event. */
export interface PrivateRepositoryForkingEnableAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: Scalars['URI']
    /** The slug of the enterprise. */
    enterpriseSlug?: Scalars['String']
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: Scalars['URI']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'PrivateRepositoryForkingEnableAuditEntry'
}


/**
 * A curatable list of repositories relating to a repository owner, which defaults
 * to showing the most popular repositories they own.
 */
export interface ProfileItemShowcase {
    /** Whether or not the owner has pinned any repositories or gists. */
    hasPinnedItems: Scalars['Boolean']
    /**
     * The repositories and gists in the showcase. If the profile owner has any
     * pinned items, those will be returned. Otherwise, the profile owner's popular
     * repositories will be returned.
     */
    items: PinnableItemConnection
    __typename: 'ProfileItemShowcase'
}


/** Represents any entity on GitHub that has a profile page. */
export type ProfileOwner = (Organization | User) & { __isUnion?: true }


/** Projects manage issues, pull requests and notes within a project owner. */
export interface Project {
    /** The project's description body. */
    body?: Scalars['String']
    /** The projects description body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** `true` if the object is closed (definition of closed may depend on type) */
    closed: Scalars['Boolean']
    /** Identifies the date and time when the object was closed. */
    closedAt?: Scalars['DateTime']
    /** List of columns in the project */
    columns: ProjectColumnConnection
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The actor who originally created the project. */
    creator?: Actor
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** The project's name. */
    name: Scalars['String']
    /** The project's number. */
    number: Scalars['Int']
    /** The project's owner. Currently limited to repositories, organizations, and users. */
    owner: ProjectOwner
    /** List of pending cards in this project */
    pendingCards: ProjectCardConnection
    /** The HTTP path for this project */
    resourcePath: Scalars['URI']
    /** Whether the project is open or closed. */
    state: ProjectState
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this project */
    url: Scalars['URI']
    /** Check if the current viewer can update this object. */
    viewerCanUpdate: Scalars['Boolean']
    __typename: 'Project'
}


/** A card in a project. */
export interface ProjectCard {
    /**
     * The project column this card is associated under. A card may only belong to one
     * project column at a time. The column field will be null if the card is created
     * in a pending state and has yet to be associated with a column. Once cards are
     * associated with a column, they will not become pending in the future.
     */
    column?: ProjectColumn
    /** The card content item */
    content?: ProjectCardItem
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The actor who created this card */
    creator?: Actor
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** Whether the card is archived */
    isArchived: Scalars['Boolean']
    /** The card note */
    note?: Scalars['String']
    /** The project that contains this card. */
    project: Project
    /** The HTTP path for this card */
    resourcePath: Scalars['URI']
    /** The state of ProjectCard */
    state?: ProjectCardState
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this card */
    url: Scalars['URI']
    __typename: 'ProjectCard'
}


/** The possible archived states of a project card. */
export type ProjectCardArchivedState = 'ARCHIVED' | 'NOT_ARCHIVED'


/** The connection type for ProjectCard. */
export interface ProjectCardConnection {
    /** A list of edges. */
    edges?: (ProjectCardEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (ProjectCard | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'ProjectCardConnection'
}


/** An edge in a connection. */
export interface ProjectCardEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: ProjectCard
    __typename: 'ProjectCardEdge'
}


/** Types that can be inside Project Cards. */
export type ProjectCardItem = (Issue | PullRequest) & { __isUnion?: true }


/** Various content states of a ProjectCard */
export type ProjectCardState = 'CONTENT_ONLY' | 'NOTE_ONLY' | 'REDACTED'


/** A column inside a project. */
export interface ProjectColumn {
    /** List of cards in the column */
    cards: ProjectCardConnection
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** The project column's name. */
    name: Scalars['String']
    /** The project that contains this column. */
    project: Project
    /** The semantic purpose of the column */
    purpose?: ProjectColumnPurpose
    /** The HTTP path for this project column */
    resourcePath: Scalars['URI']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this project column */
    url: Scalars['URI']
    __typename: 'ProjectColumn'
}


/** The connection type for ProjectColumn. */
export interface ProjectColumnConnection {
    /** A list of edges. */
    edges?: (ProjectColumnEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (ProjectColumn | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'ProjectColumnConnection'
}


/** An edge in a connection. */
export interface ProjectColumnEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: ProjectColumn
    __typename: 'ProjectColumnEdge'
}


/** The semantic purpose of the column - todo, in progress, or done. */
export type ProjectColumnPurpose = 'DONE' | 'IN_PROGRESS' | 'TODO'


/** A list of projects associated with the owner. */
export interface ProjectConnection {
    /** A list of edges. */
    edges?: (ProjectEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Project | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'ProjectConnection'
}


/** An edge in a connection. */
export interface ProjectEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Project
    __typename: 'ProjectEdge'
}


/** Properties by which project connections can be ordered. */
export type ProjectOrderField = 'CREATED_AT' | 'NAME' | 'UPDATED_AT'


/** Represents an owner of a Project. */
export type ProjectOwner = (Organization | Repository | User) & { __isUnion?: true }


/** State of the project; either 'open' or 'closed' */
export type ProjectState = 'CLOSED' | 'OPEN'


/** GitHub-provided templates for Projects */
export type ProjectTemplate = 'AUTOMATED_KANBAN_V2' | 'AUTOMATED_REVIEWS_KANBAN' | 'BASIC_KANBAN' | 'BUG_TRIAGE'


/** A user's public key. */
export interface PublicKey {
    /** The last time this authorization was used to perform an action. Values will be null for keys not owned by the user. */
    accessedAt?: Scalars['DateTime']
    /**
     * Identifies the date and time when the key was created. Keys created before
     * March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user.
     */
    createdAt?: Scalars['DateTime']
    /** The fingerprint for this PublicKey. */
    fingerprint: Scalars['String']
    id: Scalars['ID']
    /** Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user. */
    isReadOnly?: Scalars['Boolean']
    /** The public key string. */
    key: Scalars['String']
    /**
     * Identifies the date and time when the key was updated. Keys created before
     * March 5th, 2014 may have inaccurate values. Values will be null for keys not
     * owned by the user.
     */
    updatedAt?: Scalars['DateTime']
    __typename: 'PublicKey'
}


/** The connection type for PublicKey. */
export interface PublicKeyConnection {
    /** A list of edges. */
    edges?: (PublicKeyEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PublicKey | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PublicKeyConnection'
}


/** An edge in a connection. */
export interface PublicKeyEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PublicKey
    __typename: 'PublicKeyEdge'
}


/** A repository pull request. */
export interface PullRequest {
    /** Reason that the conversation was locked. */
    activeLockReason?: LockReason
    /** The number of additions in this pull request. */
    additions: Scalars['Int']
    /** A list of Users assigned to this object. */
    assignees: UserConnection
    /** The actor who authored the comment. */
    author?: Actor
    /** Author's association with the subject of the comment. */
    authorAssociation: CommentAuthorAssociation
    /** Identifies the base Ref associated with the pull request. */
    baseRef?: Ref
    /** Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted. */
    baseRefName: Scalars['String']
    /** Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted. */
    baseRefOid: Scalars['GitObjectID']
    /** The repository associated with this pull request's base Ref. */
    baseRepository?: Repository
    /** The body as Markdown. */
    body: Scalars['String']
    /** The body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** The body rendered to text. */
    bodyText: Scalars['String']
    /** Whether or not the pull request is rebaseable. */
    canBeRebased: Scalars['Boolean']
    /** The number of changed files in this pull request. */
    changedFiles: Scalars['Int']
    /** The HTTP path for the checks of this pull request. */
    checksResourcePath: Scalars['URI']
    /** The HTTP URL for the checks of this pull request. */
    checksUrl: Scalars['URI']
    /** `true` if the pull request is closed */
    closed: Scalars['Boolean']
    /** Identifies the date and time when the object was closed. */
    closedAt?: Scalars['DateTime']
    /** A list of comments associated with the pull request. */
    comments: IssueCommentConnection
    /** A list of commits present in this pull request's head branch not present in the base branch. */
    commits: PullRequestCommitConnection
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Check if this comment was created via an email reply. */
    createdViaEmail: Scalars['Boolean']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The number of deletions in this pull request. */
    deletions: Scalars['Int']
    /** The actor who edited this pull request's body. */
    editor?: Actor
    /** Lists the files changed within this pull request. */
    files?: PullRequestChangedFileConnection
    /** Identifies the head Ref associated with the pull request. */
    headRef?: Ref
    /** Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted. */
    headRefName: Scalars['String']
    /** Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted. */
    headRefOid: Scalars['GitObjectID']
    /** The repository associated with this pull request's head Ref. */
    headRepository?: Repository
    /** The owner of the repository associated with this pull request's head Ref. */
    headRepositoryOwner?: RepositoryOwner
    /** The hovercard information for this issue */
    hovercard: Hovercard
    id: Scalars['ID']
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit: Scalars['Boolean']
    /** The head and base repositories are different. */
    isCrossRepository: Scalars['Boolean']
    /** Identifies if the pull request is a draft. */
    isDraft: Scalars['Boolean']
    /** A list of labels associated with the object. */
    labels?: LabelConnection
    /** The moment the editor made the last edit */
    lastEditedAt?: Scalars['DateTime']
    /** `true` if the pull request is locked */
    locked: Scalars['Boolean']
    /** Indicates whether maintainers can modify the pull request. */
    maintainerCanModify: Scalars['Boolean']
    /** The commit that was created when this pull request was merged. */
    mergeCommit?: Commit
    /** Detailed information about the current pull request merge state status. */
    mergeStateStatus: MergeStateStatus
    /** Whether or not the pull request can be merged based on the existence of merge conflicts. */
    mergeable: MergeableState
    /** Whether or not the pull request was merged. */
    merged: Scalars['Boolean']
    /** The date and time that the pull request was merged. */
    mergedAt?: Scalars['DateTime']
    /** The actor who merged the pull request. */
    mergedBy?: Actor
    /** Identifies the milestone associated with the pull request. */
    milestone?: Milestone
    /** Identifies the pull request number. */
    number: Scalars['Int']
    /** A list of Users that are participating in the Pull Request conversation. */
    participants: UserConnection
    /** The permalink to the pull request. */
    permalink: Scalars['URI']
    /**
     * The commit that GitHub automatically generated to test if this pull request
     * could be merged. This field will not return a value if the pull request is
     * merged, or if the test merge commit is still being generated. See the
     * `mergeable` field for more details on the mergeability of the pull request.
     */
    potentialMergeCommit?: Commit
    /** List of project cards associated with this pull request. */
    projectCards: ProjectCardConnection
    /** Identifies when the comment was published at. */
    publishedAt?: Scalars['DateTime']
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroup[]
    /** A list of Reactions left on the Issue. */
    reactions: ReactionConnection
    /** The repository associated with this node. */
    repository: Repository
    /** The HTTP path for this pull request. */
    resourcePath: Scalars['URI']
    /** The HTTP path for reverting this pull request. */
    revertResourcePath: Scalars['URI']
    /** The HTTP URL for reverting this pull request. */
    revertUrl: Scalars['URI']
    /** The current status of this pull request with respect to code review. */
    reviewDecision?: PullRequestReviewDecision
    /** A list of review requests associated with the pull request. */
    reviewRequests?: ReviewRequestConnection
    /** The list of all review threads for this pull request. */
    reviewThreads: PullRequestReviewThreadConnection
    /** A list of reviews associated with the pull request. */
    reviews?: PullRequestReviewConnection
    /** Identifies the state of the pull request. */
    state: PullRequestState
    /** A list of reviewer suggestions based on commit history and past review comments. */
    suggestedReviewers: (SuggestedReviewer | undefined)[]
    /**
     * @deprecated `timeline` will be removed Use PullRequest.timelineItems instead. Removal on 2020-10-01 UTC.
     * A list of events, comments, commits, etc. associated with the pull request.
     */
    timeline: PullRequestTimelineConnection
    /** A list of events, comments, commits, etc. associated with the pull request. */
    timelineItems: PullRequestTimelineItemsConnection
    /** Identifies the pull request title. */
    title: Scalars['String']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this pull request. */
    url: Scalars['URI']
    /** A list of edits to this content. */
    userContentEdits?: UserContentEditConnection
    /** Whether or not the viewer can apply suggestion. */
    viewerCanApplySuggestion: Scalars['Boolean']
    /** Can user react to this subject */
    viewerCanReact: Scalars['Boolean']
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe: Scalars['Boolean']
    /** Check if the current viewer can update this object. */
    viewerCanUpdate: Scalars['Boolean']
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons: CommentCannotUpdateReason[]
    /** Did the viewer author this comment. */
    viewerDidAuthor: Scalars['Boolean']
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: SubscriptionState
    __typename: 'PullRequest'
}


/** A file changed in a pull request. */
export interface PullRequestChangedFile {
    /** The number of additions to the file. */
    additions: Scalars['Int']
    /** The number of deletions to the file. */
    deletions: Scalars['Int']
    /** The path of the file. */
    path: Scalars['String']
    __typename: 'PullRequestChangedFile'
}


/** The connection type for PullRequestChangedFile. */
export interface PullRequestChangedFileConnection {
    /** A list of edges. */
    edges?: (PullRequestChangedFileEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PullRequestChangedFile | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PullRequestChangedFileConnection'
}


/** An edge in a connection. */
export interface PullRequestChangedFileEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PullRequestChangedFile
    __typename: 'PullRequestChangedFileEdge'
}


/** Represents a Git commit part of a pull request. */
export interface PullRequestCommit {
    /** The Git commit object */
    commit: Commit
    id: Scalars['ID']
    /** The pull request this commit belongs to */
    pullRequest: PullRequest
    /** The HTTP path for this pull request commit */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this pull request commit */
    url: Scalars['URI']
    __typename: 'PullRequestCommit'
}


/** Represents a commit comment thread part of a pull request. */
export interface PullRequestCommitCommentThread {
    /** The comments that exist in this thread. */
    comments: CommitCommentConnection
    /** The commit the comments were made on. */
    commit: Commit
    id: Scalars['ID']
    /** The file the comments were made on. */
    path?: Scalars['String']
    /** The position in the diff for the commit that the comment was made on. */
    position?: Scalars['Int']
    /** The pull request this commit comment thread belongs to */
    pullRequest: PullRequest
    /** The repository associated with this node. */
    repository: Repository
    __typename: 'PullRequestCommitCommentThread'
}


/** The connection type for PullRequestCommit. */
export interface PullRequestCommitConnection {
    /** A list of edges. */
    edges?: (PullRequestCommitEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PullRequestCommit | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PullRequestCommitConnection'
}


/** An edge in a connection. */
export interface PullRequestCommitEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PullRequestCommit
    __typename: 'PullRequestCommitEdge'
}


/** The connection type for PullRequest. */
export interface PullRequestConnection {
    /** A list of edges. */
    edges?: (PullRequestEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PullRequest | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PullRequestConnection'
}


/** This aggregates pull requests opened by a user within one repository. */
export interface PullRequestContributionsByRepository {
    /** The pull request contributions. */
    contributions: CreatedPullRequestContributionConnection
    /** The repository in which the pull requests were opened. */
    repository: Repository
    __typename: 'PullRequestContributionsByRepository'
}


/** An edge in a connection. */
export interface PullRequestEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PullRequest
    __typename: 'PullRequestEdge'
}


/** Represents available types of methods to use when merging a pull request. */
export type PullRequestMergeMethod = 'MERGE' | 'REBASE' | 'SQUASH'


/** Properties by which pull_requests connections can be ordered. */
export type PullRequestOrderField = 'CREATED_AT' | 'UPDATED_AT'


/** A review object for a given pull request. */
export interface PullRequestReview {
    /** The actor who authored the comment. */
    author?: Actor
    /** Author's association with the subject of the comment. */
    authorAssociation: CommentAuthorAssociation
    /** Identifies the pull request review body. */
    body: Scalars['String']
    /** The body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** The body of this review rendered as plain text. */
    bodyText: Scalars['String']
    /** A list of review comments for the current pull request review. */
    comments: PullRequestReviewCommentConnection
    /** Identifies the commit associated with this pull request review. */
    commit?: Commit
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Check if this comment was created via an email reply. */
    createdViaEmail: Scalars['Boolean']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The actor who edited the comment. */
    editor?: Actor
    id: Scalars['ID']
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit: Scalars['Boolean']
    /** The moment the editor made the last edit */
    lastEditedAt?: Scalars['DateTime']
    /** A list of teams that this review was made on behalf of. */
    onBehalfOf: TeamConnection
    /** Identifies when the comment was published at. */
    publishedAt?: Scalars['DateTime']
    /** Identifies the pull request associated with this pull request review. */
    pullRequest: PullRequest
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroup[]
    /** A list of Reactions left on the Issue. */
    reactions: ReactionConnection
    /** The repository associated with this node. */
    repository: Repository
    /** The HTTP path permalink for this PullRequestReview. */
    resourcePath: Scalars['URI']
    /** Identifies the current state of the pull request review. */
    state: PullRequestReviewState
    /** Identifies when the Pull Request Review was submitted */
    submittedAt?: Scalars['DateTime']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL permalink for this PullRequestReview. */
    url: Scalars['URI']
    /** A list of edits to this content. */
    userContentEdits?: UserContentEditConnection
    /** Check if the current viewer can delete this object. */
    viewerCanDelete: Scalars['Boolean']
    /** Can user react to this subject */
    viewerCanReact: Scalars['Boolean']
    /** Check if the current viewer can update this object. */
    viewerCanUpdate: Scalars['Boolean']
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons: CommentCannotUpdateReason[]
    /** Did the viewer author this comment. */
    viewerDidAuthor: Scalars['Boolean']
    __typename: 'PullRequestReview'
}


/** A review comment associated with a given repository pull request. */
export interface PullRequestReviewComment {
    /** The actor who authored the comment. */
    author?: Actor
    /** Author's association with the subject of the comment. */
    authorAssociation: CommentAuthorAssociation
    /** The comment body of this review comment. */
    body: Scalars['String']
    /** The body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** The comment body of this review comment rendered as plain text. */
    bodyText: Scalars['String']
    /** Identifies the commit associated with the comment. */
    commit?: Commit
    /** Identifies when the comment was created. */
    createdAt: Scalars['DateTime']
    /** Check if this comment was created via an email reply. */
    createdViaEmail: Scalars['Boolean']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The diff hunk to which the comment applies. */
    diffHunk: Scalars['String']
    /** Identifies when the comment was created in a draft state. */
    draftedAt: Scalars['DateTime']
    /** The actor who edited the comment. */
    editor?: Actor
    id: Scalars['ID']
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit: Scalars['Boolean']
    /** Returns whether or not a comment has been minimized. */
    isMinimized: Scalars['Boolean']
    /** The moment the editor made the last edit */
    lastEditedAt?: Scalars['DateTime']
    /** Returns why the comment was minimized. */
    minimizedReason?: Scalars['String']
    /** Identifies the original commit associated with the comment. */
    originalCommit?: Commit
    /** The original line index in the diff to which the comment applies. */
    originalPosition: Scalars['Int']
    /** Identifies when the comment body is outdated */
    outdated: Scalars['Boolean']
    /** The path to which the comment applies. */
    path: Scalars['String']
    /** The line index in the diff to which the comment applies. */
    position?: Scalars['Int']
    /** Identifies when the comment was published at. */
    publishedAt?: Scalars['DateTime']
    /** The pull request associated with this review comment. */
    pullRequest: PullRequest
    /** The pull request review associated with this review comment. */
    pullRequestReview?: PullRequestReview
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroup[]
    /** A list of Reactions left on the Issue. */
    reactions: ReactionConnection
    /** The comment this is a reply to. */
    replyTo?: PullRequestReviewComment
    /** The repository associated with this node. */
    repository: Repository
    /** The HTTP path permalink for this review comment. */
    resourcePath: Scalars['URI']
    /** Identifies the state of the comment. */
    state: PullRequestReviewCommentState
    /** Identifies when the comment was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL permalink for this review comment. */
    url: Scalars['URI']
    /** A list of edits to this content. */
    userContentEdits?: UserContentEditConnection
    /** Check if the current viewer can delete this object. */
    viewerCanDelete: Scalars['Boolean']
    /** Check if the current viewer can minimize this object. */
    viewerCanMinimize: Scalars['Boolean']
    /** Can user react to this subject */
    viewerCanReact: Scalars['Boolean']
    /** Check if the current viewer can update this object. */
    viewerCanUpdate: Scalars['Boolean']
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons: CommentCannotUpdateReason[]
    /** Did the viewer author this comment. */
    viewerDidAuthor: Scalars['Boolean']
    __typename: 'PullRequestReviewComment'
}


/** The connection type for PullRequestReviewComment. */
export interface PullRequestReviewCommentConnection {
    /** A list of edges. */
    edges?: (PullRequestReviewCommentEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PullRequestReviewComment | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PullRequestReviewCommentConnection'
}


/** An edge in a connection. */
export interface PullRequestReviewCommentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PullRequestReviewComment
    __typename: 'PullRequestReviewCommentEdge'
}


/** The possible states of a pull request review comment. */
export type PullRequestReviewCommentState = 'PENDING' | 'SUBMITTED'


/** The connection type for PullRequestReview. */
export interface PullRequestReviewConnection {
    /** A list of edges. */
    edges?: (PullRequestReviewEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PullRequestReview | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PullRequestReviewConnection'
}


/** This aggregates pull request reviews made by a user within one repository. */
export interface PullRequestReviewContributionsByRepository {
    /** The pull request review contributions. */
    contributions: CreatedPullRequestReviewContributionConnection
    /** The repository in which the pull request reviews were made. */
    repository: Repository
    __typename: 'PullRequestReviewContributionsByRepository'
}


/** The review status of a pull request. */
export type PullRequestReviewDecision = 'APPROVED' | 'CHANGES_REQUESTED' | 'REVIEW_REQUIRED'


/** An edge in a connection. */
export interface PullRequestReviewEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PullRequestReview
    __typename: 'PullRequestReviewEdge'
}


/** The possible events to perform on a pull request review. */
export type PullRequestReviewEvent = 'APPROVE' | 'COMMENT' | 'DISMISS' | 'REQUEST_CHANGES'


/** The possible states of a pull request review. */
export type PullRequestReviewState = 'APPROVED' | 'CHANGES_REQUESTED' | 'COMMENTED' | 'DISMISSED' | 'PENDING'


/** A threaded list of comments for a given pull request. */
export interface PullRequestReviewThread {
    /** A list of pull request comments associated with the thread. */
    comments: PullRequestReviewCommentConnection
    /** The side of the diff on which this thread was placed. */
    diffSide: DiffSide
    id: Scalars['ID']
    /** Whether this thread has been resolved */
    isResolved: Scalars['Boolean']
    /** The line in the file to which this thread refers */
    line?: Scalars['Int']
    /** The original line in the file to which this thread refers. */
    originalLine?: Scalars['Int']
    /** The original start line in the file to which this thread refers (multi-line only). */
    originalStartLine?: Scalars['Int']
    /** Identifies the pull request associated with this thread. */
    pullRequest: PullRequest
    /** Identifies the repository associated with this thread. */
    repository: Repository
    /** The user who resolved this thread */
    resolvedBy?: User
    /** The side of the diff that the first line of the thread starts on (multi-line only) */
    startDiffSide?: DiffSide
    /** The start line in the file to which this thread refers (multi-line only) */
    startLine?: Scalars['Int']
    /** Whether or not the viewer can resolve this thread */
    viewerCanResolve: Scalars['Boolean']
    /** Whether or not the viewer can unresolve this thread */
    viewerCanUnresolve: Scalars['Boolean']
    __typename: 'PullRequestReviewThread'
}


/** Review comment threads for a pull request review. */
export interface PullRequestReviewThreadConnection {
    /** A list of edges. */
    edges?: (PullRequestReviewThreadEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PullRequestReviewThread | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PullRequestReviewThreadConnection'
}


/** An edge in a connection. */
export interface PullRequestReviewThreadEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PullRequestReviewThread
    __typename: 'PullRequestReviewThreadEdge'
}


/** Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits. */
export interface PullRequestRevisionMarker {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The last commit the viewer has seen. */
    lastSeenCommit: Commit
    /** The pull request to which the marker belongs. */
    pullRequest: PullRequest
    __typename: 'PullRequestRevisionMarker'
}


/** The possible states of a pull request. */
export type PullRequestState = 'CLOSED' | 'MERGED' | 'OPEN'


/** The connection type for PullRequestTimelineItem. */
export interface PullRequestTimelineConnection {
    /** A list of edges. */
    edges?: (PullRequestTimelineItemEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PullRequestTimelineItem | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PullRequestTimelineConnection'
}


/** An item in an pull request timeline */
export type PullRequestTimelineItem = (AssignedEvent | BaseRefForcePushedEvent | ClosedEvent | Commit | CommitCommentThread | CrossReferencedEvent | DemilestonedEvent | DeployedEvent | DeploymentEnvironmentChangedEvent | HeadRefDeletedEvent | HeadRefForcePushedEvent | HeadRefRestoredEvent | IssueComment | LabeledEvent | LockedEvent | MergedEvent | MilestonedEvent | PullRequestReview | PullRequestReviewComment | PullRequestReviewThread | ReferencedEvent | RenamedTitleEvent | ReopenedEvent | ReviewDismissedEvent | ReviewRequestRemovedEvent | ReviewRequestedEvent | SubscribedEvent | UnassignedEvent | UnlabeledEvent | UnlockedEvent | UnsubscribedEvent | UserBlockedEvent) & { __isUnion?: true }


/** An edge in a connection. */
export interface PullRequestTimelineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PullRequestTimelineItem
    __typename: 'PullRequestTimelineItemEdge'
}


/** An item in a pull request timeline */
export type PullRequestTimelineItems = (AddedToProjectEvent | AssignedEvent | AutomaticBaseChangeFailedEvent | AutomaticBaseChangeSucceededEvent | BaseRefChangedEvent | BaseRefForcePushedEvent | ClosedEvent | CommentDeletedEvent | ConnectedEvent | ConvertToDraftEvent | ConvertedNoteToIssueEvent | CrossReferencedEvent | DemilestonedEvent | DeployedEvent | DeploymentEnvironmentChangedEvent | DisconnectedEvent | HeadRefDeletedEvent | HeadRefForcePushedEvent | HeadRefRestoredEvent | IssueComment | LabeledEvent | LockedEvent | MarkedAsDuplicateEvent | MentionedEvent | MergedEvent | MilestonedEvent | MovedColumnsInProjectEvent | PinnedEvent | PullRequestCommit | PullRequestCommitCommentThread | PullRequestReview | PullRequestReviewThread | PullRequestRevisionMarker | ReadyForReviewEvent | ReferencedEvent | RemovedFromProjectEvent | RenamedTitleEvent | ReopenedEvent | ReviewDismissedEvent | ReviewRequestRemovedEvent | ReviewRequestedEvent | SubscribedEvent | TransferredEvent | UnassignedEvent | UnlabeledEvent | UnlockedEvent | UnmarkedAsDuplicateEvent | UnpinnedEvent | UnsubscribedEvent | UserBlockedEvent) & { __isUnion?: true }


/** The connection type for PullRequestTimelineItems. */
export interface PullRequestTimelineItemsConnection {
    /** A list of edges. */
    edges?: (PullRequestTimelineItemsEdge | undefined)[]
    /** Identifies the count of items after applying `before` and `after` filters. */
    filteredCount: Scalars['Int']
    /** A list of nodes. */
    nodes?: (PullRequestTimelineItems | undefined)[]
    /** Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing. */
    pageCount: Scalars['Int']
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    /** Identifies the date and time when the timeline was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'PullRequestTimelineItemsConnection'
}


/** An edge in a connection. */
export interface PullRequestTimelineItemsEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PullRequestTimelineItems
    __typename: 'PullRequestTimelineItemsEdge'
}


/** The possible item types found in a timeline. */
export type PullRequestTimelineItemsItemType = 'ADDED_TO_PROJECT_EVENT' | 'ASSIGNED_EVENT' | 'AUTOMATIC_BASE_CHANGE_FAILED_EVENT' | 'AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENT' | 'BASE_REF_CHANGED_EVENT' | 'BASE_REF_FORCE_PUSHED_EVENT' | 'CLOSED_EVENT' | 'COMMENT_DELETED_EVENT' | 'CONNECTED_EVENT' | 'CONVERTED_NOTE_TO_ISSUE_EVENT' | 'CONVERT_TO_DRAFT_EVENT' | 'CROSS_REFERENCED_EVENT' | 'DEMILESTONED_EVENT' | 'DEPLOYED_EVENT' | 'DEPLOYMENT_ENVIRONMENT_CHANGED_EVENT' | 'DISCONNECTED_EVENT' | 'HEAD_REF_DELETED_EVENT' | 'HEAD_REF_FORCE_PUSHED_EVENT' | 'HEAD_REF_RESTORED_EVENT' | 'ISSUE_COMMENT' | 'LABELED_EVENT' | 'LOCKED_EVENT' | 'MARKED_AS_DUPLICATE_EVENT' | 'MENTIONED_EVENT' | 'MERGED_EVENT' | 'MILESTONED_EVENT' | 'MOVED_COLUMNS_IN_PROJECT_EVENT' | 'PINNED_EVENT' | 'PULL_REQUEST_COMMIT' | 'PULL_REQUEST_COMMIT_COMMENT_THREAD' | 'PULL_REQUEST_REVIEW' | 'PULL_REQUEST_REVIEW_THREAD' | 'PULL_REQUEST_REVISION_MARKER' | 'READY_FOR_REVIEW_EVENT' | 'REFERENCED_EVENT' | 'REMOVED_FROM_PROJECT_EVENT' | 'RENAMED_TITLE_EVENT' | 'REOPENED_EVENT' | 'REVIEW_DISMISSED_EVENT' | 'REVIEW_REQUESTED_EVENT' | 'REVIEW_REQUEST_REMOVED_EVENT' | 'SUBSCRIBED_EVENT' | 'TRANSFERRED_EVENT' | 'UNASSIGNED_EVENT' | 'UNLABELED_EVENT' | 'UNLOCKED_EVENT' | 'UNMARKED_AS_DUPLICATE_EVENT' | 'UNPINNED_EVENT' | 'UNSUBSCRIBED_EVENT' | 'USER_BLOCKED_EVENT'


/** The possible target states when updating a pull request. */
export type PullRequestUpdateState = 'CLOSED' | 'OPEN'


/** A Git push. */
export interface Push {
    id: Scalars['ID']
    /** The SHA after the push */
    nextSha?: Scalars['GitObjectID']
    /** The permalink for this push. */
    permalink: Scalars['URI']
    /** The SHA before the push */
    previousSha?: Scalars['GitObjectID']
    /** The user who pushed */
    pusher: User
    /** The repository that was pushed to */
    repository: Repository
    __typename: 'Push'
}


/** A team, user or app who has the ability to push to a protected branch. */
export interface PushAllowance {
    /** The actor that can push. */
    actor?: PushAllowanceActor
    /** Identifies the branch protection rule associated with the allowed user or team. */
    branchProtectionRule?: BranchProtectionRule
    id: Scalars['ID']
    __typename: 'PushAllowance'
}


/** Types that can be an actor. */
export type PushAllowanceActor = (App | Team | User) & { __isUnion?: true }


/** The connection type for PushAllowance. */
export interface PushAllowanceConnection {
    /** A list of edges. */
    edges?: (PushAllowanceEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (PushAllowance | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'PushAllowanceConnection'
}


/** An edge in a connection. */
export interface PushAllowanceEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: PushAllowance
    __typename: 'PushAllowanceEdge'
}


/** The query root of GitHub's GraphQL interface. */
export interface Query {
    /** Look up a code of conduct by its key */
    codeOfConduct?: CodeOfConduct
    /** Look up a code of conduct by its key */
    codesOfConduct?: (CodeOfConduct | undefined)[]
    /** Look up an enterprise by URL slug. */
    enterprise?: Enterprise
    /** Look up a pending enterprise administrator invitation by invitee, enterprise and role. */
    enterpriseAdministratorInvitation?: EnterpriseAdministratorInvitation
    /** Look up a pending enterprise administrator invitation by invitation token. */
    enterpriseAdministratorInvitationByToken?: EnterpriseAdministratorInvitation
    /** Look up an open source license by its key */
    license?: License
    /** Return a list of known open source licenses */
    licenses: (License | undefined)[]
    /** Get alphabetically sorted list of Marketplace categories */
    marketplaceCategories: MarketplaceCategory[]
    /** Look up a Marketplace category by its slug. */
    marketplaceCategory?: MarketplaceCategory
    /** Look up a single Marketplace listing */
    marketplaceListing?: MarketplaceListing
    /** Look up Marketplace listings */
    marketplaceListings: MarketplaceListingConnection
    /** Return information about the GitHub instance */
    meta: GitHubMetadata
    /** Fetches an object given its ID. */
    node?: Node
    /** Lookup nodes by a list of IDs. */
    nodes: (Node | undefined)[]
    /** Lookup a organization by login. */
    organization?: Organization
    /** The client's rate limit information. */
    rateLimit?: RateLimit
    /** Hack to workaround https://github.com/facebook/relay/issues/112 re-exposing the root query object */
    relay: Query
    /** Lookup a given repository by the owner and repository name. */
    repository?: Repository
    /** Lookup a repository owner (ie. either a User or an Organization) by login. */
    repositoryOwner?: RepositoryOwner
    /** Lookup resource by a URL. */
    resource?: UniformResourceLocatable
    /** Perform a search across resources. */
    search: SearchResultItemConnection
    /** GitHub Security Advisories */
    securityAdvisories: SecurityAdvisoryConnection
    /** Fetch a Security Advisory by its GHSA ID */
    securityAdvisory?: SecurityAdvisory
    /** Software Vulnerabilities documented by GitHub Security Advisories */
    securityVulnerabilities: SecurityVulnerabilityConnection
    /**
     * @deprecated `Query.sponsorsListing` will be removed. Use `Sponsorable.sponsorsListing` instead. Removal on 2020-04-01 UTC.
     * Look up a single Sponsors Listing
     */
    sponsorsListing?: SponsorsListing
    /** Look up a topic by name. */
    topic?: Topic
    /** Lookup a user by login. */
    user?: User
    /** The currently authenticated user. */
    viewer: User
    __typename: 'Query'
}


/** Represents the client's rate limit. */
export interface RateLimit {
    /** The point cost for the current query counting against the rate limit. */
    cost: Scalars['Int']
    /** The maximum number of points the client is permitted to consume in a 60 minute window. */
    limit: Scalars['Int']
    /** The maximum number of nodes this query may return */
    nodeCount: Scalars['Int']
    /** The number of points remaining in the current rate limit window. */
    remaining: Scalars['Int']
    /** The time at which the current rate limit window resets in UTC epoch seconds. */
    resetAt: Scalars['DateTime']
    __typename: 'RateLimit'
}


/** Represents a subject that can be reacted on. */
export type Reactable = (CommitComment | Issue | IssueComment | PullRequest | PullRequestReview | PullRequestReviewComment | TeamDiscussion | TeamDiscussionComment) & { __isUnion?: true }


/** The connection type for User. */
export interface ReactingUserConnection {
    /** A list of edges. */
    edges?: (ReactingUserEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'ReactingUserConnection'
}


/** Represents a user that's made a reaction. */
export interface ReactingUserEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    node: User
    /** The moment when the user made the reaction. */
    reactedAt: Scalars['DateTime']
    __typename: 'ReactingUserEdge'
}


/** An emoji reaction to a particular piece of content. */
export interface Reaction {
    /** Identifies the emoji reaction. */
    content: ReactionContent
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** The reactable piece of content */
    reactable: Reactable
    /** Identifies the user who created this reaction. */
    user?: User
    __typename: 'Reaction'
}


/** A list of reactions that have been left on the subject. */
export interface ReactionConnection {
    /** A list of edges. */
    edges?: (ReactionEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Reaction | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    /** Whether or not the authenticated user has left a reaction on the subject. */
    viewerHasReacted: Scalars['Boolean']
    __typename: 'ReactionConnection'
}


/** Emojis that can be attached to Issues, Pull Requests and Comments. */
export type ReactionContent = 'CONFUSED' | 'EYES' | 'HEART' | 'HOORAY' | 'LAUGH' | 'ROCKET' | 'THUMBS_DOWN' | 'THUMBS_UP'


/** An edge in a connection. */
export interface ReactionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Reaction
    __typename: 'ReactionEdge'
}


/** A group of emoji reactions to a particular piece of content. */
export interface ReactionGroup {
    /** Identifies the emoji reaction. */
    content: ReactionContent
    /** Identifies when the reaction was created. */
    createdAt?: Scalars['DateTime']
    /** The subject that was reacted to. */
    subject: Reactable
    /** Users who have reacted to the reaction subject with the emotion represented by this reaction group */
    users: ReactingUserConnection
    /** Whether or not the authenticated user has left a reaction on the subject. */
    viewerHasReacted: Scalars['Boolean']
    __typename: 'ReactionGroup'
}


/** A list of fields that reactions can be ordered by. */
export type ReactionOrderField = 'CREATED_AT'


/** Represents a 'ready_for_review' event on a given pull request. */
export interface ReadyForReviewEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    /** The HTTP path for this ready for review event. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this ready for review event. */
    url: Scalars['URI']
    __typename: 'ReadyForReviewEvent'
}


/** Represents a Git reference. */
export interface Ref {
    /** A list of pull requests with this ref as the head ref. */
    associatedPullRequests: PullRequestConnection
    id: Scalars['ID']
    /** The ref name. */
    name: Scalars['String']
    /** The ref's prefix, such as `refs/heads/` or `refs/tags/`. */
    prefix: Scalars['String']
    /** The repository the ref belongs to. */
    repository: Repository
    /**
     * The object the ref points to.
     * 
     * **Upcoming Change on 2019-07-01 UTC**
     * **Description:** Type for `target` will change from `GitObject!` to `GitObject`.
     * **Reason:** The `target` field may return `null` values and is changing to nullable
     */
    target: GitObject
    __typename: 'Ref'
}


/** The connection type for Ref. */
export interface RefConnection {
    /** A list of edges. */
    edges?: (RefEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Ref | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'RefConnection'
}


/** An edge in a connection. */
export interface RefEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Ref
    __typename: 'RefEdge'
}


/** Properties by which ref connections can be ordered. */
export type RefOrderField = 'ALPHABETICAL' | 'TAG_COMMIT_DATE'


/** Represents a 'referenced' event on a given `ReferencedSubject`. */
export interface ReferencedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the commit associated with the 'referenced' event. */
    commit?: Commit
    /** Identifies the repository associated with the 'referenced' event. */
    commitRepository: Repository
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Reference originated in a different repository. */
    isCrossRepository: Scalars['Boolean']
    /** Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference. */
    isDirectReference: Scalars['Boolean']
    /** Object referenced by event. */
    subject: ReferencedSubject
    __typename: 'ReferencedEvent'
}


/** Any referencable object */
export type ReferencedSubject = (Issue | PullRequest) & { __isUnion?: true }


/** Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes */
export interface RegenerateEnterpriseIdentityProviderRecoveryCodesPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The identity provider for the enterprise. */
    identityProvider?: EnterpriseIdentityProvider
    __typename: 'RegenerateEnterpriseIdentityProviderRecoveryCodesPayload'
}


/** A registry package contains the content for an uploaded package. */
export interface RegistryPackage {
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * The package type color
     */
    color: Scalars['String']
    id: Scalars['ID']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Find the latest version for the package.
     */
    latestVersion?: RegistryPackageVersion
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Identifies the title of the package.
     */
    name: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Identifies the title of the package, with the owner prefixed.
     */
    nameWithOwner: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object. Removal on 2020-04-01 UTC.
     * Find the package file identified by the guid.
     */
    packageFileByGuid?: RegistryPackageFile
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object. Removal on 2020-04-01 UTC.
     * Find the package file identified by the sha256.
     */
    packageFileBySha256?: RegistryPackageFile
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Identifies the type of the package.
     */
    packageType: RegistryPackageType
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * List the prerelease versions for this package.
     */
    preReleaseVersions?: RegistryPackageVersionConnection
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * The type of the package.
     */
    registryPackageType?: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * repository that the release is associated with
     */
    repository?: Repository
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Statistics about package activity.
     */
    statistics?: RegistryPackageStatistics
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object. Removal on 2020-04-01 UTC.
     * list of tags for this package
     */
    tags: RegistryPackageTagConnection
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object. Removal on 2020-04-01 UTC.
     * List the topics for this package.
     */
    topics?: TopicConnection
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Find package version by version string.
     */
    version?: RegistryPackageVersion
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Find package version by version string.
     */
    versionByPlatform?: RegistryPackageVersion
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Find package version by manifest SHA256.
     */
    versionBySha256?: RegistryPackageVersion
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * list of versions for this package
     */
    versions: RegistryPackageVersionConnection
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * List package versions with a specific metadatum.
     */
    versionsByMetadatum?: RegistryPackageVersionConnection
    __typename: 'RegistryPackage'
}


/** The connection type for RegistryPackage. */
export interface RegistryPackageConnection {
    /** A list of edges. */
    edges?: (RegistryPackageEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (RegistryPackage | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'RegistryPackageConnection'
}


/** A package dependency contains the information needed to satisfy a dependency. */
export interface RegistryPackageDependency {
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageDependency` object instead. Removal on 2020-04-01 UTC.
     * Identifies the type of dependency.
     */
    dependencyType: RegistryPackageDependencyType
    id: Scalars['ID']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageDependency` object instead. Removal on 2020-04-01 UTC.
     * Identifies the name of the dependency.
     */
    name: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageDependency` object instead. Removal on 2020-04-01 UTC.
     * Identifies the version of the dependency.
     */
    version: Scalars['String']
    __typename: 'RegistryPackageDependency'
}


/** The connection type for RegistryPackageDependency. */
export interface RegistryPackageDependencyConnection {
    /** A list of edges. */
    edges?: (RegistryPackageDependencyEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (RegistryPackageDependency | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'RegistryPackageDependencyConnection'
}


/** An edge in a connection. */
export interface RegistryPackageDependencyEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: RegistryPackageDependency
    __typename: 'RegistryPackageDependencyEdge'
}


/** The possible types of a registry package dependency. */
export type RegistryPackageDependencyType = 'BUNDLED' | 'DEFAULT' | 'DEV' | 'OPTIONAL' | 'PEER' | 'TEST'


/** An edge in a connection. */
export interface RegistryPackageEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: RegistryPackage
    __typename: 'RegistryPackageEdge'
}


/** A file in a specific registry package version. */
export interface RegistryPackageFile {
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * A unique identifier for this file.
     */
    guid?: Scalars['String']
    id: Scalars['ID']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * Identifies the md5.
     */
    md5?: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * URL to download the asset metadata.
     */
    metadataUrl: Scalars['URI']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * Name of the file
     */
    name: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * The package version this file belongs to.
     */
    packageVersion: RegistryPackageVersion
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * Identifies the sha1.
     */
    sha1?: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * Identifies the sha256.
     */
    sha256?: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * Identifies the size.
     */
    size?: Scalars['Int']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * URL to download the asset.
     */
    url: Scalars['URI']
    __typename: 'RegistryPackageFile'
}


/** The connection type for RegistryPackageFile. */
export interface RegistryPackageFileConnection {
    /** A list of edges. */
    edges?: (RegistryPackageFileEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (RegistryPackageFile | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'RegistryPackageFileConnection'
}


/** An edge in a connection. */
export interface RegistryPackageFileEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: RegistryPackageFile
    __typename: 'RegistryPackageFileEdge'
}


/** Represents an owner of a registry package. */
export type RegistryPackageOwner = (Organization | Repository | User) & { __isUnion?: true }


/** Represents an interface to search packages on an object. */
export type RegistryPackageSearch = (Organization | Repository | User) & { __isUnion?: true }


/** Represents a object that contains package activity statistics such as downloads. */
export interface RegistryPackageStatistics {
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this month.
     */
    downloadsThisMonth: Scalars['Int']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this week.
     */
    downloadsThisWeek: Scalars['Int']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this year.
     */
    downloadsThisYear: Scalars['Int']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded today.
     */
    downloadsToday: Scalars['Int']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded since it was created.
     */
    downloadsTotalCount: Scalars['Int']
    __typename: 'RegistryPackageStatistics'
}


/** A version tag contains the mapping between a tag name and a version. */
export interface RegistryPackageTag {
    id: Scalars['ID']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageTag` object instead. Removal on 2020-04-01 UTC.
     * Identifies the tag name of the version.
     */
    name: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageTag` object instead. Removal on 2020-04-01 UTC.
     * version that the tag is associated with
     */
    version?: RegistryPackageVersion
    __typename: 'RegistryPackageTag'
}


/** The connection type for RegistryPackageTag. */
export interface RegistryPackageTagConnection {
    /** A list of edges. */
    edges?: (RegistryPackageTagEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (RegistryPackageTag | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'RegistryPackageTagConnection'
}


/** An edge in a connection. */
export interface RegistryPackageTagEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: RegistryPackageTag
    __typename: 'RegistryPackageTagEdge'
}


/** The possible types of a registry package. */
export type RegistryPackageType = 'DEBIAN' | 'DOCKER' | 'MAVEN' | 'NPM' | 'NUGET' | 'PYTHON' | 'RUBYGEMS'


/** A package version contains the information about a specific package version. */
export interface RegistryPackageVersion {
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Whether or not this version has been deleted.
     */
    deleted: Scalars['Boolean']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * list of dependencies for this package
     */
    dependencies: RegistryPackageDependencyConnection
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * A file associated with this registry package version
     */
    fileByName?: RegistryPackageFile
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * List of files associated with this registry package version
     */
    files: RegistryPackageFileConnection
    id: Scalars['ID']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * A single line of text to install this package version.
     */
    installationCommand?: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the package manifest for this package version.
     */
    manifest?: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the platform this version was built for.
     */
    platform?: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Indicates whether this version is a pre-release.
     */
    preRelease: Scalars['Boolean']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * The README of this package version
     */
    readme?: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * The HTML README of this package version
     */
    readmeHtml?: Scalars['HTML']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Registry package associated with this version.
     */
    registryPackage?: RegistryPackage
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Release associated with this package.
     */
    release?: Release
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the sha256.
     */
    sha256?: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the size.
     */
    size?: Scalars['Int']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Statistics about package activity.
     */
    statistics?: RegistryPackageVersionStatistics
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the package version summary.
     */
    summary?: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Time at which the most recent file upload for this package version finished
     */
    updatedAt: Scalars['DateTime']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the version number.
     */
    version: Scalars['String']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Can the current viewer edit this Package version.
     */
    viewerCanEdit: Scalars['Boolean']
    __typename: 'RegistryPackageVersion'
}


/** The connection type for RegistryPackageVersion. */
export interface RegistryPackageVersionConnection {
    /** A list of edges. */
    edges?: (RegistryPackageVersionEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (RegistryPackageVersion | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'RegistryPackageVersionConnection'
}


/** An edge in a connection. */
export interface RegistryPackageVersionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: RegistryPackageVersion
    __typename: 'RegistryPackageVersionEdge'
}


/** Represents a object that contains package version activity statistics such as downloads. */
export interface RegistryPackageVersionStatistics {
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersionStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this month.
     */
    downloadsThisMonth: Scalars['Int']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersionStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this week.
     */
    downloadsThisWeek: Scalars['Int']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersionStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this year.
     */
    downloadsThisYear: Scalars['Int']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersionStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded today.
     */
    downloadsToday: Scalars['Int']
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersionStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded since it was created.
     */
    downloadsTotalCount: Scalars['Int']
    __typename: 'RegistryPackageVersionStatistics'
}


/** A release contains the content for a release. */
export interface Release {
    /** The author of the release */
    author?: User
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The description of the release. */
    description?: Scalars['String']
    /** The description of this release rendered to HTML. */
    descriptionHTML?: Scalars['HTML']
    id: Scalars['ID']
    /** Whether or not the release is a draft */
    isDraft: Scalars['Boolean']
    /** Whether or not the release is a prerelease */
    isPrerelease: Scalars['Boolean']
    /** The title of the release. */
    name?: Scalars['String']
    /** Identifies the date and time when the release was created. */
    publishedAt?: Scalars['DateTime']
    /** List of releases assets which are dependent on this release. */
    releaseAssets: ReleaseAssetConnection
    /** The HTTP path for this issue */
    resourcePath: Scalars['URI']
    /** A description of the release, rendered to HTML without any links in it. */
    shortDescriptionHTML?: Scalars['HTML']
    /** The Git tag the release points to */
    tag?: Ref
    /** The name of the release's Git tag */
    tagName: Scalars['String']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this issue */
    url: Scalars['URI']
    __typename: 'Release'
}


/** A release asset contains the content for a release asset. */
export interface ReleaseAsset {
    /** The asset's content-type */
    contentType: Scalars['String']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The number of times this asset was downloaded */
    downloadCount: Scalars['Int']
    /** Identifies the URL where you can download the release asset via the browser. */
    downloadUrl: Scalars['URI']
    id: Scalars['ID']
    /** Identifies the title of the release asset. */
    name: Scalars['String']
    /** Release that the asset is associated with */
    release?: Release
    /** The size (in bytes) of the asset */
    size: Scalars['Int']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The user that performed the upload */
    uploadedBy: User
    /** Identifies the URL of the release asset. */
    url: Scalars['URI']
    __typename: 'ReleaseAsset'
}


/** The connection type for ReleaseAsset. */
export interface ReleaseAssetConnection {
    /** A list of edges. */
    edges?: (ReleaseAssetEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (ReleaseAsset | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'ReleaseAssetConnection'
}


/** An edge in a connection. */
export interface ReleaseAssetEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: ReleaseAsset
    __typename: 'ReleaseAssetEdge'
}


/** The connection type for Release. */
export interface ReleaseConnection {
    /** A list of edges. */
    edges?: (ReleaseEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Release | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'ReleaseConnection'
}


/** An edge in a connection. */
export interface ReleaseEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Release
    __typename: 'ReleaseEdge'
}


/** Properties by which release connections can be ordered. */
export type ReleaseOrderField = 'CREATED_AT' | 'NAME'


/** Autogenerated return type of RemoveAssigneesFromAssignable */
export interface RemoveAssigneesFromAssignablePayload {
    /** The item that was unassigned. */
    assignable?: Assignable
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'RemoveAssigneesFromAssignablePayload'
}


/** Autogenerated return type of RemoveEnterpriseAdmin */
export interface RemoveEnterpriseAdminPayload {
    /** The user who was removed as an administrator. */
    admin?: User
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated enterprise. */
    enterprise?: Enterprise
    /** A message confirming the result of removing an administrator. */
    message?: Scalars['String']
    /** The viewer performing the mutation. */
    viewer?: User
    __typename: 'RemoveEnterpriseAdminPayload'
}


/** Autogenerated return type of RemoveEnterpriseIdentityProvider */
export interface RemoveEnterpriseIdentityProviderPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The identity provider that was removed from the enterprise. */
    identityProvider?: EnterpriseIdentityProvider
    __typename: 'RemoveEnterpriseIdentityProviderPayload'
}


/** Autogenerated return type of RemoveEnterpriseOrganization */
export interface RemoveEnterpriseOrganizationPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated enterprise. */
    enterprise?: Enterprise
    /** The organization that was removed from the enterprise. */
    organization?: Organization
    /** The viewer performing the mutation. */
    viewer?: User
    __typename: 'RemoveEnterpriseOrganizationPayload'
}


/** Autogenerated return type of RemoveLabelsFromLabelable */
export interface RemoveLabelsFromLabelablePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The Labelable the labels were removed from. */
    labelable?: Labelable
    __typename: 'RemoveLabelsFromLabelablePayload'
}


/** Autogenerated return type of RemoveOutsideCollaborator */
export interface RemoveOutsideCollaboratorPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The user that was removed as an outside collaborator. */
    removedUser?: User
    __typename: 'RemoveOutsideCollaboratorPayload'
}


/** Autogenerated return type of RemoveReaction */
export interface RemoveReactionPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The reaction object. */
    reaction?: Reaction
    /** The reactable subject. */
    subject?: Reactable
    __typename: 'RemoveReactionPayload'
}


/** Autogenerated return type of RemoveStar */
export interface RemoveStarPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The starrable. */
    starrable?: Starrable
    __typename: 'RemoveStarPayload'
}


/** Represents a 'removed_from_project' event on a given issue or pull request. */
export interface RemovedFromProjectEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** Project referenced by event. */
    project?: Project
    /** Column name referenced by this project event. */
    projectColumnName: Scalars['String']
    __typename: 'RemovedFromProjectEvent'
}


/** Represents a 'renamed' event on a given issue or pull request */
export interface RenamedTitleEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the current title of the issue or pull request. */
    currentTitle: Scalars['String']
    id: Scalars['ID']
    /** Identifies the previous title of the issue or pull request. */
    previousTitle: Scalars['String']
    /** Subject that was renamed. */
    subject: RenamedTitleSubject
    __typename: 'RenamedTitleEvent'
}


/** An object which has a renamable title */
export type RenamedTitleSubject = (Issue | PullRequest) & { __isUnion?: true }


/** Autogenerated return type of ReopenIssue */
export interface ReopenIssuePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The issue that was opened. */
    issue?: Issue
    __typename: 'ReopenIssuePayload'
}


/** Autogenerated return type of ReopenPullRequest */
export interface ReopenPullRequestPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The pull request that was reopened. */
    pullRequest?: PullRequest
    __typename: 'ReopenPullRequestPayload'
}


/** Represents a 'reopened' event on any `Closable`. */
export interface ReopenedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Object that was reopened. */
    closable: Closable
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    __typename: 'ReopenedEvent'
}


/** Audit log entry for a repo.access event. */
export interface RepoAccessAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    /** The visibility of the repository */
    visibility?: RepoAccessAuditEntryVisibility
    __typename: 'RepoAccessAuditEntry'
}


/** The privacy of a repository */
export type RepoAccessAuditEntryVisibility = 'INTERNAL' | 'PRIVATE' | 'PUBLIC'


/** Audit log entry for a repo.add_member event. */
export interface RepoAddMemberAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    /** The visibility of the repository */
    visibility?: RepoAddMemberAuditEntryVisibility
    __typename: 'RepoAddMemberAuditEntry'
}


/** The privacy of a repository */
export type RepoAddMemberAuditEntryVisibility = 'INTERNAL' | 'PRIVATE' | 'PUBLIC'


/** Audit log entry for a repo.add_topic event. */
export interface RepoAddTopicAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The name of the topic added to the repository */
    topic?: Topic
    /** The name of the topic added to the repository */
    topicName?: Scalars['String']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoAddTopicAuditEntry'
}


/** Audit log entry for a repo.archived event. */
export interface RepoArchivedAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    /** The visibility of the repository */
    visibility?: RepoArchivedAuditEntryVisibility
    __typename: 'RepoArchivedAuditEntry'
}


/** The privacy of a repository */
export type RepoArchivedAuditEntryVisibility = 'INTERNAL' | 'PRIVATE' | 'PUBLIC'


/** Audit log entry for a repo.change_merge_setting event. */
export interface RepoChangeMergeSettingAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** Whether the change was to enable (true) or disable (false) the merge type */
    isEnabled?: Scalars['Boolean']
    /** The merge method affected by the change */
    mergeType?: RepoChangeMergeSettingAuditEntryMergeType
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoChangeMergeSettingAuditEntry'
}


/** The merge options available for pull requests to this repository. */
export type RepoChangeMergeSettingAuditEntryMergeType = 'MERGE' | 'REBASE' | 'SQUASH'


/** Audit log entry for a repo.config.disable_anonymous_git_access event. */
export interface RepoConfigDisableAnonymousGitAccessAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoConfigDisableAnonymousGitAccessAuditEntry'
}


/** Audit log entry for a repo.config.disable_collaborators_only event. */
export interface RepoConfigDisableCollaboratorsOnlyAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoConfigDisableCollaboratorsOnlyAuditEntry'
}


/** Audit log entry for a repo.config.disable_contributors_only event. */
export interface RepoConfigDisableContributorsOnlyAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoConfigDisableContributorsOnlyAuditEntry'
}


/** Audit log entry for a repo.config.disable_sockpuppet_disallowed event. */
export interface RepoConfigDisableSockpuppetDisallowedAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoConfigDisableSockpuppetDisallowedAuditEntry'
}


/** Audit log entry for a repo.config.enable_anonymous_git_access event. */
export interface RepoConfigEnableAnonymousGitAccessAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoConfigEnableAnonymousGitAccessAuditEntry'
}


/** Audit log entry for a repo.config.enable_collaborators_only event. */
export interface RepoConfigEnableCollaboratorsOnlyAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoConfigEnableCollaboratorsOnlyAuditEntry'
}


/** Audit log entry for a repo.config.enable_contributors_only event. */
export interface RepoConfigEnableContributorsOnlyAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoConfigEnableContributorsOnlyAuditEntry'
}


/** Audit log entry for a repo.config.enable_sockpuppet_disallowed event. */
export interface RepoConfigEnableSockpuppetDisallowedAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoConfigEnableSockpuppetDisallowedAuditEntry'
}


/** Audit log entry for a repo.config.lock_anonymous_git_access event. */
export interface RepoConfigLockAnonymousGitAccessAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoConfigLockAnonymousGitAccessAuditEntry'
}


/** Audit log entry for a repo.config.unlock_anonymous_git_access event. */
export interface RepoConfigUnlockAnonymousGitAccessAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoConfigUnlockAnonymousGitAccessAuditEntry'
}


/** Audit log entry for a repo.create event. */
export interface RepoCreateAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The name of the parent repository for this forked repository. */
    forkParentName?: Scalars['String']
    /** The name of the root repository for this netork. */
    forkSourceName?: Scalars['String']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    /** The visibility of the repository */
    visibility?: RepoCreateAuditEntryVisibility
    __typename: 'RepoCreateAuditEntry'
}


/** The privacy of a repository */
export type RepoCreateAuditEntryVisibility = 'INTERNAL' | 'PRIVATE' | 'PUBLIC'


/** Audit log entry for a repo.destroy event. */
export interface RepoDestroyAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    /** The visibility of the repository */
    visibility?: RepoDestroyAuditEntryVisibility
    __typename: 'RepoDestroyAuditEntry'
}


/** The privacy of a repository */
export type RepoDestroyAuditEntryVisibility = 'INTERNAL' | 'PRIVATE' | 'PUBLIC'


/** Audit log entry for a repo.remove_member event. */
export interface RepoRemoveMemberAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    /** The visibility of the repository */
    visibility?: RepoRemoveMemberAuditEntryVisibility
    __typename: 'RepoRemoveMemberAuditEntry'
}


/** The privacy of a repository */
export type RepoRemoveMemberAuditEntryVisibility = 'INTERNAL' | 'PRIVATE' | 'PUBLIC'


/** Audit log entry for a repo.remove_topic event. */
export interface RepoRemoveTopicAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The name of the topic added to the repository */
    topic?: Topic
    /** The name of the topic added to the repository */
    topicName?: Scalars['String']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepoRemoveTopicAuditEntry'
}


/** The reasons a piece of content can be reported or minimized. */
export type ReportedContentClassifiers = 'ABUSE' | 'DUPLICATE' | 'OFF_TOPIC' | 'OUTDATED' | 'RESOLVED' | 'SPAM'


/** A repository contains the content for a project. */
export interface Repository {
    /** A list of users that can be assigned to issues in this repository. */
    assignableUsers: UserConnection
    /** A list of branch protection rules for this repository. */
    branchProtectionRules: BranchProtectionRuleConnection
    /** Returns the code of conduct for this repository */
    codeOfConduct?: CodeOfConduct
    /** A list of collaborators associated with the repository. */
    collaborators?: RepositoryCollaboratorConnection
    /** A list of commit comments associated with the repository. */
    commitComments: CommitCommentConnection
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The Ref associated with the repository's default branch. */
    defaultBranchRef?: Ref
    /** Whether or not branches are automatically deleted when merged in this repository. */
    deleteBranchOnMerge: Scalars['Boolean']
    /** A list of dependency manifests contained in the repository */
    dependencyGraphManifests?: DependencyGraphManifestConnection
    /** A list of deploy keys that are on this repository. */
    deployKeys: DeployKeyConnection
    /** Deployments associated with the repository */
    deployments: DeploymentConnection
    /** The description of the repository. */
    description?: Scalars['String']
    /** The description of the repository rendered to HTML. */
    descriptionHTML: Scalars['HTML']
    /** The number of kilobytes this repository occupies on disk. */
    diskUsage?: Scalars['Int']
    /** Returns how many forks there are of this repository in the whole network. */
    forkCount: Scalars['Int']
    /** A list of direct forked repositories. */
    forks: RepositoryConnection
    /** The funding links for this repository */
    fundingLinks: FundingLink[]
    /** Indicates if the repository has issues feature enabled. */
    hasIssuesEnabled: Scalars['Boolean']
    /** Indicates if the repository has the Projects feature enabled. */
    hasProjectsEnabled: Scalars['Boolean']
    /** Indicates if the repository has wiki feature enabled. */
    hasWikiEnabled: Scalars['Boolean']
    /** The repository's URL. */
    homepageUrl?: Scalars['URI']
    id: Scalars['ID']
    /** Indicates if the repository is unmaintained. */
    isArchived: Scalars['Boolean']
    /** Returns whether or not this repository disabled. */
    isDisabled: Scalars['Boolean']
    /** Identifies if the repository is a fork. */
    isFork: Scalars['Boolean']
    /** Indicates if the repository has been locked or not. */
    isLocked: Scalars['Boolean']
    /** Identifies if the repository is a mirror. */
    isMirror: Scalars['Boolean']
    /** Identifies if the repository is private. */
    isPrivate: Scalars['Boolean']
    /** Identifies if the repository is a template that can be used to generate new repositories. */
    isTemplate: Scalars['Boolean']
    /** Returns a single issue from the current repository by number. */
    issue?: Issue
    /** Returns a single issue-like object from the current repository by number. */
    issueOrPullRequest?: IssueOrPullRequest
    /** A list of issues that have been opened in the repository. */
    issues: IssueConnection
    /** Returns a single label by name */
    label?: Label
    /** A list of labels associated with the repository. */
    labels?: LabelConnection
    /** A list containing a breakdown of the language composition of the repository. */
    languages?: LanguageConnection
    /** The license associated with the repository */
    licenseInfo?: License
    /** The reason the repository has been locked. */
    lockReason?: RepositoryLockReason
    /** A list of Users that can be mentioned in the context of the repository. */
    mentionableUsers: UserConnection
    /** Whether or not PRs are merged with a merge commit on this repository. */
    mergeCommitAllowed: Scalars['Boolean']
    /** Returns a single milestone from the current repository by number. */
    milestone?: Milestone
    /** A list of milestones associated with the repository. */
    milestones?: MilestoneConnection
    /** The repository's original mirror URL. */
    mirrorUrl?: Scalars['URI']
    /** The name of the repository. */
    name: Scalars['String']
    /** The repository's name with owner. */
    nameWithOwner: Scalars['String']
    /** A Git object in the repository */
    object?: GitObject
    /** The image used to represent this repository in Open Graph data. */
    openGraphImageUrl: Scalars['URI']
    /** The User owner of the repository. */
    owner: RepositoryOwner
    /** A list of packages under the owner. */
    packages: PackageConnection
    /** The repository parent, if this is a fork. */
    parent?: Repository
    /** A list of pinned issues for this repository. */
    pinnedIssues?: PinnedIssueConnection
    /** The primary language of the repository's code. */
    primaryLanguage?: Language
    /** Find project by number. */
    project?: Project
    /** A list of projects under the owner. */
    projects: ProjectConnection
    /** The HTTP path listing the repository's projects */
    projectsResourcePath: Scalars['URI']
    /** The HTTP URL listing the repository's projects */
    projectsUrl: Scalars['URI']
    /** Returns a single pull request from the current repository by number. */
    pullRequest?: PullRequest
    /** A list of pull requests that have been opened in the repository. */
    pullRequests: PullRequestConnection
    /** Identifies when the repository was last pushed to. */
    pushedAt?: Scalars['DateTime']
    /** Whether or not rebase-merging is enabled on this repository. */
    rebaseMergeAllowed: Scalars['Boolean']
    /** Fetch a given ref from the repository */
    ref?: Ref
    /** Fetch a list of refs from the repository */
    refs?: RefConnection
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageOwner` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages under the owner.
     */
    registryPackages: RegistryPackageConnection
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageSearch` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages for a particular search query.
     */
    registryPackagesForQuery: RegistryPackageConnection
    /** Lookup a single release given various criteria. */
    release?: Release
    /** List of releases which are dependent on this repository. */
    releases: ReleaseConnection
    /** A list of applied repository-topic associations for this repository. */
    repositoryTopics: RepositoryTopicConnection
    /** The HTTP path for this repository */
    resourcePath: Scalars['URI']
    /** A description of the repository, rendered to HTML without any links in it. */
    shortDescriptionHTML: Scalars['HTML']
    /** Whether or not squash-merging is enabled on this repository. */
    squashMergeAllowed: Scalars['Boolean']
    /** The SSH URL to clone this repository */
    sshUrl: Scalars['GitSSHRemote']
    /** A list of users who have starred this starrable. */
    stargazers: StargazerConnection
    /**
     * Returns a list of all submodules in this repository parsed from the
     * .gitmodules file as of the default branch's HEAD commit.
     */
    submodules: SubmoduleConnection
    /** Temporary authentication token for cloning this repository. */
    tempCloneToken?: Scalars['String']
    /** The repository from which this repository was generated, if any. */
    templateRepository?: Repository
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this repository */
    url: Scalars['URI']
    /** Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar. */
    usesCustomOpenGraphImage: Scalars['Boolean']
    /** Indicates whether the viewer has admin permissions on this repository. */
    viewerCanAdminister: Scalars['Boolean']
    /** Can the current viewer create new projects on this owner. */
    viewerCanCreateProjects: Scalars['Boolean']
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe: Scalars['Boolean']
    /** Indicates whether the viewer can update the topics of this repository. */
    viewerCanUpdateTopics: Scalars['Boolean']
    /** Returns a boolean indicating whether the viewing user has starred this starrable. */
    viewerHasStarred: Scalars['Boolean']
    /** The users permission level on the repository. Will return null if authenticated as an GitHub App. */
    viewerPermission?: RepositoryPermission
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: SubscriptionState
    /** A list of vulnerability alerts that are on this repository. */
    vulnerabilityAlerts?: RepositoryVulnerabilityAlertConnection
    /** A list of users watching the repository. */
    watchers: UserConnection
    __typename: 'Repository'
}


/** The affiliation of a user to a repository */
export type RepositoryAffiliation = 'COLLABORATOR' | 'ORGANIZATION_MEMBER' | 'OWNER'


/** Metadata for an audit entry with action repo.* */
export type RepositoryAuditEntryData = (OrgRestoreMemberMembershipRepositoryAuditEntryData | PrivateRepositoryForkingDisableAuditEntry | PrivateRepositoryForkingEnableAuditEntry | RepoAccessAuditEntry | RepoAddMemberAuditEntry | RepoAddTopicAuditEntry | RepoArchivedAuditEntry | RepoChangeMergeSettingAuditEntry | RepoConfigDisableAnonymousGitAccessAuditEntry | RepoConfigDisableCollaboratorsOnlyAuditEntry | RepoConfigDisableContributorsOnlyAuditEntry | RepoConfigDisableSockpuppetDisallowedAuditEntry | RepoConfigEnableAnonymousGitAccessAuditEntry | RepoConfigEnableCollaboratorsOnlyAuditEntry | RepoConfigEnableContributorsOnlyAuditEntry | RepoConfigEnableSockpuppetDisallowedAuditEntry | RepoConfigLockAnonymousGitAccessAuditEntry | RepoConfigUnlockAnonymousGitAccessAuditEntry | RepoCreateAuditEntry | RepoDestroyAuditEntry | RepoRemoveMemberAuditEntry | RepoRemoveTopicAuditEntry | TeamAddRepositoryAuditEntry | TeamRemoveRepositoryAuditEntry) & { __isUnion?: true }


/** The connection type for User. */
export interface RepositoryCollaboratorConnection {
    /** A list of edges. */
    edges?: (RepositoryCollaboratorEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'RepositoryCollaboratorConnection'
}


/** Represents a user who is a collaborator of a repository. */
export interface RepositoryCollaboratorEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    node: User
    /**
     * The permission the user has on the repository.
     * 
     * **Upcoming Change on 2020-10-01 UTC**
     * **Description:** Type for `permission` will change from `RepositoryPermission!` to `String`.
     * **Reason:** This field may return additional values
     */
    permission: RepositoryPermission
    /** A list of sources for the user's access to the repository. */
    permissionSources?: PermissionSource[]
    __typename: 'RepositoryCollaboratorEdge'
}


/** A list of repositories owned by the subject. */
export interface RepositoryConnection {
    /** A list of edges. */
    edges?: (RepositoryEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Repository | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    /** The total size in kilobytes of all repositories in the connection. */
    totalDiskUsage: Scalars['Int']
    __typename: 'RepositoryConnection'
}


/** The reason a repository is listed as 'contributed'. */
export type RepositoryContributionType = 'COMMIT' | 'ISSUE' | 'PULL_REQUEST' | 'PULL_REQUEST_REVIEW' | 'REPOSITORY'


/** An edge in a connection. */
export interface RepositoryEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Repository
    __typename: 'RepositoryEdge'
}


/** A subset of repository info. */
export type RepositoryInfo = (Repository) & { __isUnion?: true }


/** An invitation for a user to be added to a repository. */
export interface RepositoryInvitation {
    /** The email address that received the invitation. */
    email?: Scalars['String']
    id: Scalars['ID']
    /** The user who received the invitation. */
    invitee?: User
    /** The user who created the invitation. */
    inviter: User
    /**
     * The permission granted on this repository by this invitation.
     * 
     * **Upcoming Change on 2020-10-01 UTC**
     * **Description:** Type for `permission` will change from `RepositoryPermission!` to `String`.
     * **Reason:** This field may return additional values
     */
    permission: RepositoryPermission
    /** The Repository the user is invited to. */
    repository?: RepositoryInfo
    __typename: 'RepositoryInvitation'
}


/** The connection type for RepositoryInvitation. */
export interface RepositoryInvitationConnection {
    /** A list of edges. */
    edges?: (RepositoryInvitationEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (RepositoryInvitation | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'RepositoryInvitationConnection'
}


/** An edge in a connection. */
export interface RepositoryInvitationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: RepositoryInvitation
    __typename: 'RepositoryInvitationEdge'
}


/** Properties by which repository invitation connections can be ordered. */
export type RepositoryInvitationOrderField = 'CREATED_AT' | 'INVITEE_LOGIN'


/** The possible reasons a given repository could be in a locked state. */
export type RepositoryLockReason = 'BILLING' | 'MIGRATING' | 'MOVING' | 'RENAME'


/** Represents a object that belongs to a repository. */
export type RepositoryNode = (CommitComment | CommitCommentThread | Issue | IssueComment | PullRequest | PullRequestCommitCommentThread | PullRequestReview | PullRequestReviewComment | RepositoryVulnerabilityAlert) & { __isUnion?: true }


/** Properties by which repository connections can be ordered. */
export type RepositoryOrderField = 'CREATED_AT' | 'NAME' | 'PUSHED_AT' | 'STARGAZERS' | 'UPDATED_AT'


/** Represents an owner of a Repository. */
export type RepositoryOwner = (Organization | User) & { __isUnion?: true }


/** The access level to a repository */
export type RepositoryPermission = 'ADMIN' | 'MAINTAIN' | 'READ' | 'TRIAGE' | 'WRITE'


/** The privacy of a repository */
export type RepositoryPrivacy = 'PRIVATE' | 'PUBLIC'


/** A repository-topic connects a repository to a topic. */
export interface RepositoryTopic {
    id: Scalars['ID']
    /** The HTTP path for this repository-topic. */
    resourcePath: Scalars['URI']
    /** The topic. */
    topic: Topic
    /** The HTTP URL for this repository-topic. */
    url: Scalars['URI']
    __typename: 'RepositoryTopic'
}


/** The connection type for RepositoryTopic. */
export interface RepositoryTopicConnection {
    /** A list of edges. */
    edges?: (RepositoryTopicEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (RepositoryTopic | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'RepositoryTopicConnection'
}


/** An edge in a connection. */
export interface RepositoryTopicEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: RepositoryTopic
    __typename: 'RepositoryTopicEdge'
}


/** The repository's visibility level. */
export type RepositoryVisibility = 'INTERNAL' | 'PRIVATE' | 'PUBLIC'


/** Audit log entry for a repository_visibility_change.disable event. */
export interface RepositoryVisibilityChangeDisableAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: Scalars['URI']
    /** The slug of the enterprise. */
    enterpriseSlug?: Scalars['String']
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: Scalars['URI']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepositoryVisibilityChangeDisableAuditEntry'
}


/** Audit log entry for a repository_visibility_change.enable event. */
export interface RepositoryVisibilityChangeEnableAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: Scalars['URI']
    /** The slug of the enterprise. */
    enterpriseSlug?: Scalars['String']
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: Scalars['URI']
    id: Scalars['ID']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'RepositoryVisibilityChangeEnableAuditEntry'
}


/** A alert for a repository with an affected vulnerability. */
export interface RepositoryVulnerabilityAlert {
    /** When was the alert created? */
    createdAt: Scalars['DateTime']
    /** The reason the alert was dismissed */
    dismissReason?: Scalars['String']
    /** When was the alert dimissed? */
    dismissedAt?: Scalars['DateTime']
    /** The user who dismissed the alert */
    dismisser?: User
    id: Scalars['ID']
    /** The associated repository */
    repository: Repository
    /** The associated security advisory */
    securityAdvisory?: SecurityAdvisory
    /** The associated security vulnerablity */
    securityVulnerability?: SecurityVulnerability
    /** The vulnerable manifest filename */
    vulnerableManifestFilename: Scalars['String']
    /** The vulnerable manifest path */
    vulnerableManifestPath: Scalars['String']
    /** The vulnerable requirements */
    vulnerableRequirements?: Scalars['String']
    __typename: 'RepositoryVulnerabilityAlert'
}


/** The connection type for RepositoryVulnerabilityAlert. */
export interface RepositoryVulnerabilityAlertConnection {
    /** A list of edges. */
    edges?: (RepositoryVulnerabilityAlertEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (RepositoryVulnerabilityAlert | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'RepositoryVulnerabilityAlertConnection'
}


/** An edge in a connection. */
export interface RepositoryVulnerabilityAlertEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: RepositoryVulnerabilityAlert
    __typename: 'RepositoryVulnerabilityAlertEdge'
}


/** Autogenerated return type of RequestReviews */
export interface RequestReviewsPayload {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The pull request that is getting requests. */
    pullRequest?: PullRequest
    /** The edge from the pull request to the requested reviewers. */
    requestedReviewersEdge?: UserEdge
    __typename: 'RequestReviewsPayload'
}


/** The possible states that can be requested when creating a check run. */
export type RequestableCheckStatusState = 'COMPLETED' | 'IN_PROGRESS' | 'QUEUED'


/** Types that can be requested reviewers. */
export type RequestedReviewer = (Mannequin | Team | User) & { __isUnion?: true }


/** Autogenerated return type of RerequestCheckSuite */
export interface RerequestCheckSuitePayload {
    /** The requested check suite. */
    checkSuite?: CheckSuite
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'RerequestCheckSuitePayload'
}


/** Autogenerated return type of ResolveReviewThread */
export interface ResolveReviewThreadPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The thread to resolve. */
    thread?: PullRequestReviewThread
    __typename: 'ResolveReviewThreadPayload'
}


/** Represents a private contribution a user made on GitHub. */
export interface RestrictedContribution {
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted: Scalars['Boolean']
    /** When this contribution was made. */
    occurredAt: Scalars['DateTime']
    /** The HTTP path for this contribution. */
    resourcePath: Scalars['URI']
    /** The HTTP URL for this contribution. */
    url: Scalars['URI']
    /** The user who made this contribution. */
    user: User
    __typename: 'RestrictedContribution'
}


/** A team or user who has the ability to dismiss a review on a protected branch. */
export interface ReviewDismissalAllowance {
    /** The actor that can dismiss. */
    actor?: ReviewDismissalAllowanceActor
    /** Identifies the branch protection rule associated with the allowed user or team. */
    branchProtectionRule?: BranchProtectionRule
    id: Scalars['ID']
    __typename: 'ReviewDismissalAllowance'
}


/** Types that can be an actor. */
export type ReviewDismissalAllowanceActor = (Team | User) & { __isUnion?: true }


/** The connection type for ReviewDismissalAllowance. */
export interface ReviewDismissalAllowanceConnection {
    /** A list of edges. */
    edges?: (ReviewDismissalAllowanceEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (ReviewDismissalAllowance | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'ReviewDismissalAllowanceConnection'
}


/** An edge in a connection. */
export interface ReviewDismissalAllowanceEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: ReviewDismissalAllowance
    __typename: 'ReviewDismissalAllowanceEdge'
}


/** Represents a 'review_dismissed' event on a given issue or pull request. */
export interface ReviewDismissedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** Identifies the optional message associated with the 'review_dismissed' event. */
    dismissalMessage?: Scalars['String']
    /** Identifies the optional message associated with the event, rendered to HTML. */
    dismissalMessageHTML?: Scalars['String']
    id: Scalars['ID']
    /** Identifies the previous state of the review with the 'review_dismissed' event. */
    previousReviewState: PullRequestReviewState
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    /** Identifies the commit which caused the review to become stale. */
    pullRequestCommit?: PullRequestCommit
    /** The HTTP path for this review dismissed event. */
    resourcePath: Scalars['URI']
    /** Identifies the review associated with the 'review_dismissed' event. */
    review?: PullRequestReview
    /** The HTTP URL for this review dismissed event. */
    url: Scalars['URI']
    __typename: 'ReviewDismissedEvent'
}


/** A request for a user to review a pull request. */
export interface ReviewRequest {
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** Identifies the pull request associated with this review request. */
    pullRequest: PullRequest
    /** The reviewer that is requested. */
    requestedReviewer?: RequestedReviewer
    __typename: 'ReviewRequest'
}


/** The connection type for ReviewRequest. */
export interface ReviewRequestConnection {
    /** A list of edges. */
    edges?: (ReviewRequestEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (ReviewRequest | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'ReviewRequestConnection'
}


/** An edge in a connection. */
export interface ReviewRequestEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: ReviewRequest
    __typename: 'ReviewRequestEdge'
}


/** Represents an 'review_request_removed' event on a given pull request. */
export interface ReviewRequestRemovedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    /** Identifies the reviewer whose review request was removed. */
    requestedReviewer?: RequestedReviewer
    __typename: 'ReviewRequestRemovedEvent'
}


/** Represents an 'review_requested' event on a given pull request. */
export interface ReviewRequestedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** PullRequest referenced by event. */
    pullRequest: PullRequest
    /** Identifies the reviewer whose review was requested. */
    requestedReviewer?: RequestedReviewer
    __typename: 'ReviewRequestedEvent'
}


/**
 * A hovercard context with a message describing the current code review state of the pull
 * request.
 */
export interface ReviewStatusHovercardContext {
    /** A string describing this context */
    message: Scalars['String']
    /** An octicon to accompany this context */
    octicon: Scalars['String']
    /** The current status of the pull request with respect to code review. */
    reviewDecision?: PullRequestReviewDecision
    __typename: 'ReviewStatusHovercardContext'
}


/** The possible digest algorithms used to sign SAML requests for an identity provider. */
export type SamlDigestAlgorithm = 'SHA1' | 'SHA256' | 'SHA384' | 'SHA512'


/** The possible signature algorithms used to sign SAML requests for a Identity Provider. */
export type SamlSignatureAlgorithm = 'RSA_SHA1' | 'RSA_SHA256' | 'RSA_SHA384' | 'RSA_SHA512'


/** A Saved Reply is text a user can use to reply quickly. */
export interface SavedReply {
    /** The body of the saved reply. */
    body: Scalars['String']
    /** The saved reply body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    id: Scalars['ID']
    /** The title of the saved reply. */
    title: Scalars['String']
    /** The user that saved this reply. */
    user?: Actor
    __typename: 'SavedReply'
}


/** The connection type for SavedReply. */
export interface SavedReplyConnection {
    /** A list of edges. */
    edges?: (SavedReplyEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (SavedReply | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'SavedReplyConnection'
}


/** An edge in a connection. */
export interface SavedReplyEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: SavedReply
    __typename: 'SavedReplyEdge'
}


/** Properties by which saved reply connections can be ordered. */
export type SavedReplyOrderField = 'UPDATED_AT'


/** The results of a search. */
export type SearchResultItem = (App | Issue | MarketplaceListing | Organization | PullRequest | Repository | User) & { __isUnion?: true }


/** A list of results that matched against a search query. */
export interface SearchResultItemConnection {
    /** The number of pieces of code that matched the search query. */
    codeCount: Scalars['Int']
    /** A list of edges. */
    edges?: (SearchResultItemEdge | undefined)[]
    /** The number of issues that matched the search query. */
    issueCount: Scalars['Int']
    /** A list of nodes. */
    nodes?: (SearchResultItem | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** The number of repositories that matched the search query. */
    repositoryCount: Scalars['Int']
    /** The number of users that matched the search query. */
    userCount: Scalars['Int']
    /** The number of wiki pages that matched the search query. */
    wikiCount: Scalars['Int']
    __typename: 'SearchResultItemConnection'
}


/** An edge in a connection. */
export interface SearchResultItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: SearchResultItem
    /** Text matches on the result found. */
    textMatches?: (TextMatch | undefined)[]
    __typename: 'SearchResultItemEdge'
}


/** Represents the individual results of a search. */
export type SearchType = 'ISSUE' | 'REPOSITORY' | 'USER'


/** A GitHub Security Advisory */
export interface SecurityAdvisory {
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** This is a long plaintext description of the advisory */
    description: Scalars['String']
    /** The GitHub Security Advisory ID */
    ghsaId: Scalars['String']
    id: Scalars['ID']
    /** A list of identifiers for this advisory */
    identifiers: SecurityAdvisoryIdentifier[]
    /** The organization that originated the advisory */
    origin: Scalars['String']
    /** The permalink for the advisory */
    permalink?: Scalars['URI']
    /** When the advisory was published */
    publishedAt: Scalars['DateTime']
    /** A list of references for this advisory */
    references: SecurityAdvisoryReference[]
    /** The severity of the advisory */
    severity: SecurityAdvisorySeverity
    /** A short plaintext summary of the advisory */
    summary: Scalars['String']
    /** When the advisory was last updated */
    updatedAt: Scalars['DateTime']
    /** Vulnerabilities associated with this Advisory */
    vulnerabilities: SecurityVulnerabilityConnection
    /** When the advisory was withdrawn, if it has been withdrawn */
    withdrawnAt?: Scalars['DateTime']
    __typename: 'SecurityAdvisory'
}


/** The connection type for SecurityAdvisory. */
export interface SecurityAdvisoryConnection {
    /** A list of edges. */
    edges?: (SecurityAdvisoryEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (SecurityAdvisory | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'SecurityAdvisoryConnection'
}


/** The possible ecosystems of a security vulnerability's package. */
export type SecurityAdvisoryEcosystem = 'COMPOSER' | 'MAVEN' | 'NPM' | 'NUGET' | 'PIP' | 'RUBYGEMS'


/** An edge in a connection. */
export interface SecurityAdvisoryEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: SecurityAdvisory
    __typename: 'SecurityAdvisoryEdge'
}


/** A GitHub Security Advisory Identifier */
export interface SecurityAdvisoryIdentifier {
    /** The identifier type, e.g. GHSA, CVE */
    type: Scalars['String']
    /** The identifier */
    value: Scalars['String']
    __typename: 'SecurityAdvisoryIdentifier'
}


/** Identifier formats available for advisories. */
export type SecurityAdvisoryIdentifierType = 'CVE' | 'GHSA'


/** Properties by which security advisory connections can be ordered. */
export type SecurityAdvisoryOrderField = 'PUBLISHED_AT' | 'UPDATED_AT'


/** An individual package */
export interface SecurityAdvisoryPackage {
    /** The ecosystem the package belongs to, e.g. RUBYGEMS, NPM */
    ecosystem: SecurityAdvisoryEcosystem
    /** The package name */
    name: Scalars['String']
    __typename: 'SecurityAdvisoryPackage'
}


/** An individual package version */
export interface SecurityAdvisoryPackageVersion {
    /** The package name or version */
    identifier: Scalars['String']
    __typename: 'SecurityAdvisoryPackageVersion'
}


/** A GitHub Security Advisory Reference */
export interface SecurityAdvisoryReference {
    /** A publicly accessible reference */
    url: Scalars['URI']
    __typename: 'SecurityAdvisoryReference'
}


/** Severity of the vulnerability. */
export type SecurityAdvisorySeverity = 'CRITICAL' | 'HIGH' | 'LOW' | 'MODERATE'


/** An individual vulnerability within an Advisory */
export interface SecurityVulnerability {
    /** The Advisory associated with this Vulnerability */
    advisory: SecurityAdvisory
    /** The first version containing a fix for the vulnerability */
    firstPatchedVersion?: SecurityAdvisoryPackageVersion
    /** A description of the vulnerable package */
    package: SecurityAdvisoryPackage
    /** The severity of the vulnerability within this package */
    severity: SecurityAdvisorySeverity
    /** When the vulnerability was last updated */
    updatedAt: Scalars['DateTime']
    /**
     * A string that describes the vulnerable package versions.
     * This string follows a basic syntax with a few forms.
     * + `= 0.2.0` denotes a single vulnerable version.
     * + `<= 1.0.8` denotes a version range up to and including the specified version
     * + `< 0.1.11` denotes a version range up to, but excluding, the specified version
     * + `>= 4.3.0, < 4.3.5` denotes a version range with a known minimum and maximum version.
     * + `>= 0.0.1` denotes a version range with a known minimum, but no known maximum
     */
    vulnerableVersionRange: Scalars['String']
    __typename: 'SecurityVulnerability'
}


/** The connection type for SecurityVulnerability. */
export interface SecurityVulnerabilityConnection {
    /** A list of edges. */
    edges?: (SecurityVulnerabilityEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (SecurityVulnerability | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'SecurityVulnerabilityConnection'
}


/** An edge in a connection. */
export interface SecurityVulnerabilityEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: SecurityVulnerability
    __typename: 'SecurityVulnerabilityEdge'
}


/** Properties by which security vulnerability connections can be ordered. */
export type SecurityVulnerabilityOrderField = 'UPDATED_AT'


/** Autogenerated return type of SetEnterpriseIdentityProvider */
export interface SetEnterpriseIdentityProviderPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The identity provider for the enterprise. */
    identityProvider?: EnterpriseIdentityProvider
    __typename: 'SetEnterpriseIdentityProviderPayload'
}


/** Represents an S/MIME signature on a Commit or Tag. */
export interface SmimeSignature {
    /** Email used to sign this object. */
    email: Scalars['String']
    /** True if the signature is valid and verified by GitHub. */
    isValid: Scalars['Boolean']
    /** Payload for GPG signing object. Raw ODB object without the signature header. */
    payload: Scalars['String']
    /** ASCII-armored signature header from object. */
    signature: Scalars['String']
    /** GitHub user corresponding to the email signing this commit. */
    signer?: User
    /**
     * The state of this signature. `VALID` if signature is valid and verified by
     * GitHub, otherwise represents reason why signature is considered invalid.
     */
    state: GitSignatureState
    /** True if the signature was made with GitHub's signing key. */
    wasSignedByGitHub: Scalars['Boolean']
    __typename: 'SmimeSignature'
}


/** Entites that can sponsor others via GitHub Sponsors */
export type Sponsor = (Organization | User) & { __isUnion?: true }


/** Entities that can be sponsored through GitHub Sponsors */
export type Sponsorable = (Organization | User) & { __isUnion?: true }


/** A GitHub Sponsors listing. */
export interface SponsorsListing {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The full description of the listing. */
    fullDescription: Scalars['String']
    /** The full description of the listing rendered to HTML. */
    fullDescriptionHTML: Scalars['HTML']
    id: Scalars['ID']
    /** The listing's full name. */
    name: Scalars['String']
    /** The short description of the listing. */
    shortDescription: Scalars['String']
    /** The short name of the listing. */
    slug: Scalars['String']
    /** The published tiers for this GitHub Sponsors listing. */
    tiers?: SponsorsTierConnection
    __typename: 'SponsorsListing'
}


/** A GitHub Sponsors tier associated with a GitHub Sponsors listing. */
export interface SponsorsTier {
    /** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */
    adminInfo?: SponsorsTierAdminInfo
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The description of the tier. */
    description: Scalars['String']
    /** The tier description rendered to HTML */
    descriptionHTML: Scalars['HTML']
    id: Scalars['ID']
    /** How much this tier costs per month in cents. */
    monthlyPriceInCents: Scalars['Int']
    /** How much this tier costs per month in dollars. */
    monthlyPriceInDollars: Scalars['Int']
    /** The name of the tier. */
    name: Scalars['String']
    /** The sponsors listing that this tier belongs to. */
    sponsorsListing: SponsorsListing
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'SponsorsTier'
}


/** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */
export interface SponsorsTierAdminInfo {
    /** The sponsorships associated with this tier. */
    sponsorships: SponsorshipConnection
    __typename: 'SponsorsTierAdminInfo'
}


/** The connection type for SponsorsTier. */
export interface SponsorsTierConnection {
    /** A list of edges. */
    edges?: (SponsorsTierEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (SponsorsTier | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'SponsorsTierConnection'
}


/** An edge in a connection. */
export interface SponsorsTierEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: SponsorsTier
    __typename: 'SponsorsTierEdge'
}


/** Properties by which Sponsors tiers connections can be ordered. */
export type SponsorsTierOrderField = 'CREATED_AT' | 'MONTHLY_PRICE_IN_CENTS'


/** A sponsorship relationship between a sponsor and a maintainer */
export interface Sponsorship {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /**
     * @deprecated `Sponsorship.maintainer` will be removed. Use `Sponsorship.sponsorable` instead. Removal on 2020-04-01 UTC.
     * The entity that is being sponsored
     */
    maintainer: User
    /** The privacy level for this sponsorship. */
    privacyLevel: SponsorshipPrivacy
    /**
     * @deprecated `Sponsorship.sponsor` will be removed. Use `Sponsorship.sponsorEntity` instead. Removal on 2020-10-01 UTC.
     * The user that is sponsoring. Returns null if the sponsorship is private or if sponsor is not a user.
     */
    sponsor?: User
    /** The user or organization that is sponsoring. Returns null if the sponsorship is private. */
    sponsorEntity?: Sponsor
    /** The entity that is being sponsored */
    sponsorable: Sponsorable
    /** The associated sponsorship tier */
    tier?: SponsorsTier
    __typename: 'Sponsorship'
}


/** The connection type for Sponsorship. */
export interface SponsorshipConnection {
    /** A list of edges. */
    edges?: (SponsorshipEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Sponsorship | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'SponsorshipConnection'
}


/** An edge in a connection. */
export interface SponsorshipEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Sponsorship
    __typename: 'SponsorshipEdge'
}


/** Properties by which sponsorship connections can be ordered. */
export type SponsorshipOrderField = 'CREATED_AT'


/** The privacy of a sponsorship */
export type SponsorshipPrivacy = 'PRIVATE' | 'PUBLIC'


/** Properties by which star connections can be ordered. */
export type StarOrderField = 'STARRED_AT'


/** The connection type for User. */
export interface StargazerConnection {
    /** A list of edges. */
    edges?: (StargazerEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'StargazerConnection'
}


/** Represents a user that's starred a repository. */
export interface StargazerEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    node: User
    /** Identifies when the item was starred. */
    starredAt: Scalars['DateTime']
    __typename: 'StargazerEdge'
}


/** Things that can be starred. */
export type Starrable = (Gist | Repository | Topic) & { __isUnion?: true }


/** The connection type for Repository. */
export interface StarredRepositoryConnection {
    /** A list of edges. */
    edges?: (StarredRepositoryEdge | undefined)[]
    /** Is the list of stars for this user truncated? This is true for users that have many stars. */
    isOverLimit: Scalars['Boolean']
    /** A list of nodes. */
    nodes?: (Repository | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'StarredRepositoryConnection'
}


/** Represents a starred repository. */
export interface StarredRepositoryEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    node: Repository
    /** Identifies when the item was starred. */
    starredAt: Scalars['DateTime']
    __typename: 'StarredRepositoryEdge'
}


/** Represents a commit status. */
export interface Status {
    /** The commit this status is attached to. */
    commit?: Commit
    /** Looks up an individual status context by context name. */
    context?: StatusContext
    /** The individual status contexts for this commit. */
    contexts: StatusContext[]
    id: Scalars['ID']
    /** The combined commit status. */
    state: StatusState
    __typename: 'Status'
}


/** Represents the rollup for both the check runs and status for a commit. */
export interface StatusCheckRollup {
    /** The commit the status and check runs are attached to. */
    commit?: Commit
    /** A list of status contexts and check runs for this commit. */
    contexts: StatusCheckRollupContextConnection
    id: Scalars['ID']
    /** The combined status for the commit. */
    state: StatusState
    __typename: 'StatusCheckRollup'
}


/** Types that can be inside a StatusCheckRollup context. */
export type StatusCheckRollupContext = (CheckRun | StatusContext) & { __isUnion?: true }


/** The connection type for StatusCheckRollupContext. */
export interface StatusCheckRollupContextConnection {
    /** A list of edges. */
    edges?: (StatusCheckRollupContextEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (StatusCheckRollupContext | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'StatusCheckRollupContextConnection'
}


/** An edge in a connection. */
export interface StatusCheckRollupContextEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: StatusCheckRollupContext
    __typename: 'StatusCheckRollupContextEdge'
}


/** Represents an individual commit status context */
export interface StatusContext {
    /** The avatar of the OAuth application or the user that created the status */
    avatarUrl?: Scalars['URI']
    /** This commit this status context is attached to. */
    commit?: Commit
    /** The name of this status context. */
    context: Scalars['String']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The actor who created this status context. */
    creator?: Actor
    /** The description for this status context. */
    description?: Scalars['String']
    id: Scalars['ID']
    /** The state of this status context. */
    state: StatusState
    /** The URL for this status context. */
    targetUrl?: Scalars['URI']
    __typename: 'StatusContext'
}


/** The possible commit status states. */
export type StatusState = 'ERROR' | 'EXPECTED' | 'FAILURE' | 'PENDING' | 'SUCCESS'


/** Autogenerated return type of SubmitPullRequestReview */
export interface SubmitPullRequestReviewPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The submitted pull request review. */
    pullRequestReview?: PullRequestReview
    __typename: 'SubmitPullRequestReviewPayload'
}


/** A pointer to a repository at a specific revision embedded inside another repository. */
export interface Submodule {
    /** The branch of the upstream submodule for tracking updates */
    branch?: Scalars['String']
    /** The git URL of the submodule repository */
    gitUrl: Scalars['URI']
    /** The name of the submodule in .gitmodules */
    name: Scalars['String']
    /** The path in the superproject that this submodule is located in */
    path: Scalars['String']
    /** The commit revision of the subproject repository being tracked by the submodule */
    subprojectCommitOid?: Scalars['GitObjectID']
    __typename: 'Submodule'
}


/** The connection type for Submodule. */
export interface SubmoduleConnection {
    /** A list of edges. */
    edges?: (SubmoduleEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Submodule | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'SubmoduleConnection'
}


/** An edge in a connection. */
export interface SubmoduleEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Submodule
    __typename: 'SubmoduleEdge'
}


/** Entities that can be subscribed to for web and email notifications. */
export type Subscribable = (Commit | Issue | PullRequest | Repository | Team | TeamDiscussion) & { __isUnion?: true }


/** Represents a 'subscribed' event on a given `Subscribable`. */
export interface SubscribedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Object referenced by event. */
    subscribable: Subscribable
    __typename: 'SubscribedEvent'
}


/** The possible states of a subscription. */
export type SubscriptionState = 'IGNORED' | 'SUBSCRIBED' | 'UNSUBSCRIBED'


/** A suggestion to review a pull request based on a user's commit history and review comments. */
export interface SuggestedReviewer {
    /** Is this suggestion based on past commits? */
    isAuthor: Scalars['Boolean']
    /** Is this suggestion based on past review comments? */
    isCommenter: Scalars['Boolean']
    /** Identifies the user suggested to review the pull request. */
    reviewer: User
    __typename: 'SuggestedReviewer'
}


/** Represents a Git tag. */
export interface Tag {
    /** An abbreviated version of the Git object ID */
    abbreviatedOid: Scalars['String']
    /** The HTTP path for this Git object */
    commitResourcePath: Scalars['URI']
    /** The HTTP URL for this Git object */
    commitUrl: Scalars['URI']
    id: Scalars['ID']
    /** The Git tag message. */
    message?: Scalars['String']
    /** The Git tag name. */
    name: Scalars['String']
    /** The Git object ID */
    oid: Scalars['GitObjectID']
    /** The Repository the Git object belongs to */
    repository: Repository
    /** Details about the tag author. */
    tagger?: GitActor
    /** The Git object the tag points to. */
    target: GitObject
    __typename: 'Tag'
}


/** A team of users in an organization. */
export interface Team {
    /** A list of teams that are ancestors of this team. */
    ancestors: TeamConnection
    /** A URL pointing to the team's avatar. */
    avatarUrl?: Scalars['URI']
    /** List of child teams belonging to this team */
    childTeams: TeamConnection
    /** The slug corresponding to the organization and team. */
    combinedSlug: Scalars['String']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The description of the team. */
    description?: Scalars['String']
    /** Find a team discussion by its number. */
    discussion?: TeamDiscussion
    /** A list of team discussions. */
    discussions: TeamDiscussionConnection
    /** The HTTP path for team discussions */
    discussionsResourcePath: Scalars['URI']
    /** The HTTP URL for team discussions */
    discussionsUrl: Scalars['URI']
    /** The HTTP path for editing this team */
    editTeamResourcePath: Scalars['URI']
    /** The HTTP URL for editing this team */
    editTeamUrl: Scalars['URI']
    id: Scalars['ID']
    /** A list of pending invitations for users to this team */
    invitations?: OrganizationInvitationConnection
    /** Get the status messages members of this entity have set that are either public or visible only to the organization. */
    memberStatuses: UserStatusConnection
    /** A list of users who are members of this team. */
    members: TeamMemberConnection
    /** The HTTP path for the team' members */
    membersResourcePath: Scalars['URI']
    /** The HTTP URL for the team' members */
    membersUrl: Scalars['URI']
    /** The name of the team. */
    name: Scalars['String']
    /** The HTTP path creating a new team */
    newTeamResourcePath: Scalars['URI']
    /** The HTTP URL creating a new team */
    newTeamUrl: Scalars['URI']
    /** The organization that owns this team. */
    organization: Organization
    /** The parent team of the team. */
    parentTeam?: Team
    /** The level of privacy the team has. */
    privacy: TeamPrivacy
    /** A list of repositories this team has access to. */
    repositories: TeamRepositoryConnection
    /** The HTTP path for this team's repositories */
    repositoriesResourcePath: Scalars['URI']
    /** The HTTP URL for this team's repositories */
    repositoriesUrl: Scalars['URI']
    /** The HTTP path for this team */
    resourcePath: Scalars['URI']
    /** What algorithm is used for review assignment for this team */
    reviewRequestDelegationAlgorithm?: TeamReviewAssignmentAlgorithm
    /** True if review assignment is enabled for this team */
    reviewRequestDelegationEnabled: Scalars['Boolean']
    /** How many team members are required for review assignment for this team */
    reviewRequestDelegationMemberCount?: Scalars['Int']
    /** When assigning team members via delegation, whether the entire team should be notified as well. */
    reviewRequestDelegationNotifyTeam: Scalars['Boolean']
    /** The slug corresponding to the team. */
    slug: Scalars['String']
    /** The HTTP path for this team's teams */
    teamsResourcePath: Scalars['URI']
    /** The HTTP URL for this team's teams */
    teamsUrl: Scalars['URI']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this team */
    url: Scalars['URI']
    /** Team is adminable by the viewer. */
    viewerCanAdminister: Scalars['Boolean']
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe: Scalars['Boolean']
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: SubscriptionState
    __typename: 'Team'
}


/** Audit log entry for a team.add_member event. */
export interface TeamAddMemberAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** Whether the team was mapped to an LDAP Group. */
    isLdapMapped?: Scalars['Boolean']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The team associated with the action */
    team?: Team
    /** The name of the team */
    teamName?: Scalars['String']
    /** The HTTP path for this team */
    teamResourcePath?: Scalars['URI']
    /** The HTTP URL for this team */
    teamUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'TeamAddMemberAuditEntry'
}


/** Audit log entry for a team.add_repository event. */
export interface TeamAddRepositoryAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** Whether the team was mapped to an LDAP Group. */
    isLdapMapped?: Scalars['Boolean']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The team associated with the action */
    team?: Team
    /** The name of the team */
    teamName?: Scalars['String']
    /** The HTTP path for this team */
    teamResourcePath?: Scalars['URI']
    /** The HTTP URL for this team */
    teamUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'TeamAddRepositoryAuditEntry'
}


/** Metadata for an audit entry with action team.* */
export type TeamAuditEntryData = (OrgRestoreMemberMembershipTeamAuditEntryData | TeamAddMemberAuditEntry | TeamAddRepositoryAuditEntry | TeamChangeParentTeamAuditEntry | TeamRemoveMemberAuditEntry | TeamRemoveRepositoryAuditEntry) & { __isUnion?: true }


/** Audit log entry for a team.change_parent_team event. */
export interface TeamChangeParentTeamAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** Whether the team was mapped to an LDAP Group. */
    isLdapMapped?: Scalars['Boolean']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The new parent team. */
    parentTeam?: Team
    /** The name of the new parent team */
    parentTeamName?: Scalars['String']
    /** The name of the former parent team */
    parentTeamNameWas?: Scalars['String']
    /** The HTTP path for the parent team */
    parentTeamResourcePath?: Scalars['URI']
    /** The HTTP URL for the parent team */
    parentTeamUrl?: Scalars['URI']
    /** The former parent team. */
    parentTeamWas?: Team
    /** The HTTP path for the previous parent team */
    parentTeamWasResourcePath?: Scalars['URI']
    /** The HTTP URL for the previous parent team */
    parentTeamWasUrl?: Scalars['URI']
    /** The team associated with the action */
    team?: Team
    /** The name of the team */
    teamName?: Scalars['String']
    /** The HTTP path for this team */
    teamResourcePath?: Scalars['URI']
    /** The HTTP URL for this team */
    teamUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'TeamChangeParentTeamAuditEntry'
}


/** The connection type for Team. */
export interface TeamConnection {
    /** A list of edges. */
    edges?: (TeamEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Team | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'TeamConnection'
}


/** A team discussion. */
export interface TeamDiscussion {
    /** The actor who authored the comment. */
    author?: Actor
    /** Author's association with the discussion's team. */
    authorAssociation: CommentAuthorAssociation
    /** The body as Markdown. */
    body: Scalars['String']
    /** The body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** The body rendered to text. */
    bodyText: Scalars['String']
    /** Identifies the discussion body hash. */
    bodyVersion: Scalars['String']
    /** A list of comments on this discussion. */
    comments: TeamDiscussionCommentConnection
    /** The HTTP path for discussion comments */
    commentsResourcePath: Scalars['URI']
    /** The HTTP URL for discussion comments */
    commentsUrl: Scalars['URI']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Check if this comment was created via an email reply. */
    createdViaEmail: Scalars['Boolean']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The actor who edited the comment. */
    editor?: Actor
    id: Scalars['ID']
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit: Scalars['Boolean']
    /** Whether or not the discussion is pinned. */
    isPinned: Scalars['Boolean']
    /** Whether or not the discussion is only visible to team members and org admins. */
    isPrivate: Scalars['Boolean']
    /** The moment the editor made the last edit */
    lastEditedAt?: Scalars['DateTime']
    /** Identifies the discussion within its team. */
    number: Scalars['Int']
    /** Identifies when the comment was published at. */
    publishedAt?: Scalars['DateTime']
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroup[]
    /** A list of Reactions left on the Issue. */
    reactions: ReactionConnection
    /** The HTTP path for this discussion */
    resourcePath: Scalars['URI']
    /** The team that defines the context of this discussion. */
    team: Team
    /** The title of the discussion */
    title: Scalars['String']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this discussion */
    url: Scalars['URI']
    /** A list of edits to this content. */
    userContentEdits?: UserContentEditConnection
    /** Check if the current viewer can delete this object. */
    viewerCanDelete: Scalars['Boolean']
    /** Whether or not the current viewer can pin this discussion. */
    viewerCanPin: Scalars['Boolean']
    /** Can user react to this subject */
    viewerCanReact: Scalars['Boolean']
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe: Scalars['Boolean']
    /** Check if the current viewer can update this object. */
    viewerCanUpdate: Scalars['Boolean']
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons: CommentCannotUpdateReason[]
    /** Did the viewer author this comment. */
    viewerDidAuthor: Scalars['Boolean']
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: SubscriptionState
    __typename: 'TeamDiscussion'
}


/** A comment on a team discussion. */
export interface TeamDiscussionComment {
    /** The actor who authored the comment. */
    author?: Actor
    /** Author's association with the comment's team. */
    authorAssociation: CommentAuthorAssociation
    /** The body as Markdown. */
    body: Scalars['String']
    /** The body rendered to HTML. */
    bodyHTML: Scalars['HTML']
    /** The body rendered to text. */
    bodyText: Scalars['String']
    /** The current version of the body content. */
    bodyVersion: Scalars['String']
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Check if this comment was created via an email reply. */
    createdViaEmail: Scalars['Boolean']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The discussion this comment is about. */
    discussion: TeamDiscussion
    /** The actor who edited the comment. */
    editor?: Actor
    id: Scalars['ID']
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit: Scalars['Boolean']
    /** The moment the editor made the last edit */
    lastEditedAt?: Scalars['DateTime']
    /** Identifies the comment number. */
    number: Scalars['Int']
    /** Identifies when the comment was published at. */
    publishedAt?: Scalars['DateTime']
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroup[]
    /** A list of Reactions left on the Issue. */
    reactions: ReactionConnection
    /** The HTTP path for this comment */
    resourcePath: Scalars['URI']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this comment */
    url: Scalars['URI']
    /** A list of edits to this content. */
    userContentEdits?: UserContentEditConnection
    /** Check if the current viewer can delete this object. */
    viewerCanDelete: Scalars['Boolean']
    /** Can user react to this subject */
    viewerCanReact: Scalars['Boolean']
    /** Check if the current viewer can update this object. */
    viewerCanUpdate: Scalars['Boolean']
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons: CommentCannotUpdateReason[]
    /** Did the viewer author this comment. */
    viewerDidAuthor: Scalars['Boolean']
    __typename: 'TeamDiscussionComment'
}


/** The connection type for TeamDiscussionComment. */
export interface TeamDiscussionCommentConnection {
    /** A list of edges. */
    edges?: (TeamDiscussionCommentEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (TeamDiscussionComment | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'TeamDiscussionCommentConnection'
}


/** An edge in a connection. */
export interface TeamDiscussionCommentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: TeamDiscussionComment
    __typename: 'TeamDiscussionCommentEdge'
}


/** Properties by which team discussion comment connections can be ordered. */
export type TeamDiscussionCommentOrderField = 'NUMBER'


/** The connection type for TeamDiscussion. */
export interface TeamDiscussionConnection {
    /** A list of edges. */
    edges?: (TeamDiscussionEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (TeamDiscussion | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'TeamDiscussionConnection'
}


/** An edge in a connection. */
export interface TeamDiscussionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: TeamDiscussion
    __typename: 'TeamDiscussionEdge'
}


/** Properties by which team discussion connections can be ordered. */
export type TeamDiscussionOrderField = 'CREATED_AT'


/** An edge in a connection. */
export interface TeamEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Team
    __typename: 'TeamEdge'
}


/** The connection type for User. */
export interface TeamMemberConnection {
    /** A list of edges. */
    edges?: (TeamMemberEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'TeamMemberConnection'
}


/** Represents a user who is a member of a team. */
export interface TeamMemberEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The HTTP path to the organization's member access page. */
    memberAccessResourcePath: Scalars['URI']
    /** The HTTP URL to the organization's member access page. */
    memberAccessUrl: Scalars['URI']
    node: User
    /** The role the member has on the team. */
    role: TeamMemberRole
    __typename: 'TeamMemberEdge'
}


/** Properties by which team member connections can be ordered. */
export type TeamMemberOrderField = 'CREATED_AT' | 'LOGIN'


/** The possible team member roles; either 'maintainer' or 'member'. */
export type TeamMemberRole = 'MAINTAINER' | 'MEMBER'


/** Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL. */
export type TeamMembershipType = 'ALL' | 'CHILD_TEAM' | 'IMMEDIATE'


/** Properties by which team connections can be ordered. */
export type TeamOrderField = 'NAME'


/** The possible team privacy values. */
export type TeamPrivacy = 'SECRET' | 'VISIBLE'


/** Audit log entry for a team.remove_member event. */
export interface TeamRemoveMemberAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** Whether the team was mapped to an LDAP Group. */
    isLdapMapped?: Scalars['Boolean']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The team associated with the action */
    team?: Team
    /** The name of the team */
    teamName?: Scalars['String']
    /** The HTTP path for this team */
    teamResourcePath?: Scalars['URI']
    /** The HTTP URL for this team */
    teamUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'TeamRemoveMemberAuditEntry'
}


/** Audit log entry for a team.remove_repository event. */
export interface TeamRemoveRepositoryAuditEntry {
    /** The action name */
    action: Scalars['String']
    /** The user who initiated the action */
    actor?: AuditEntryActor
    /** The IP address of the actor */
    actorIp?: Scalars['String']
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocation
    /** The username of the user who initiated the action */
    actorLogin?: Scalars['String']
    /** The HTTP path for the actor. */
    actorResourcePath?: Scalars['URI']
    /** The HTTP URL for the actor. */
    actorUrl?: Scalars['URI']
    /** The time the action was initiated */
    createdAt: Scalars['PreciseDateTime']
    id: Scalars['ID']
    /** Whether the team was mapped to an LDAP Group. */
    isLdapMapped?: Scalars['Boolean']
    /** The corresponding operation type for the action */
    operationType?: OperationType
    /** The Organization associated with the Audit Entry. */
    organization?: Organization
    /** The name of the Organization. */
    organizationName?: Scalars['String']
    /** The HTTP path for the organization */
    organizationResourcePath?: Scalars['URI']
    /** The HTTP URL for the organization */
    organizationUrl?: Scalars['URI']
    /** The repository associated with the action */
    repository?: Repository
    /** The name of the repository */
    repositoryName?: Scalars['String']
    /** The HTTP path for the repository */
    repositoryResourcePath?: Scalars['URI']
    /** The HTTP URL for the repository */
    repositoryUrl?: Scalars['URI']
    /** The team associated with the action */
    team?: Team
    /** The name of the team */
    teamName?: Scalars['String']
    /** The HTTP path for this team */
    teamResourcePath?: Scalars['URI']
    /** The HTTP URL for this team */
    teamUrl?: Scalars['URI']
    /** The user affected by the action */
    user?: User
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: Scalars['String']
    /** The HTTP path for the user. */
    userResourcePath?: Scalars['URI']
    /** The HTTP URL for the user. */
    userUrl?: Scalars['URI']
    __typename: 'TeamRemoveRepositoryAuditEntry'
}


/** The connection type for Repository. */
export interface TeamRepositoryConnection {
    /** A list of edges. */
    edges?: (TeamRepositoryEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Repository | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'TeamRepositoryConnection'
}


/** Represents a team repository. */
export interface TeamRepositoryEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    node: Repository
    /**
     * The permission level the team has on the repository
     * 
     * **Upcoming Change on 2020-10-01 UTC**
     * **Description:** Type for `permission` will change from `RepositoryPermission!` to `String`.
     * **Reason:** This field may return additional values
     */
    permission: RepositoryPermission
    __typename: 'TeamRepositoryEdge'
}


/** Properties by which team repository connections can be ordered. */
export type TeamRepositoryOrderField = 'CREATED_AT' | 'NAME' | 'PERMISSION' | 'PUSHED_AT' | 'STARGAZERS' | 'UPDATED_AT'


/** The possible team review assignment algorithms */
export type TeamReviewAssignmentAlgorithm = 'LOAD_BALANCE' | 'ROUND_ROBIN'


/** The role of a user on a team. */
export type TeamRole = 'ADMIN' | 'MEMBER'


/** A text match within a search result. */
export interface TextMatch {
    /** The specific text fragment within the property matched on. */
    fragment: Scalars['String']
    /** Highlights within the matched fragment. */
    highlights: TextMatchHighlight[]
    /** The property matched on. */
    property: Scalars['String']
    __typename: 'TextMatch'
}


/** Represents a single highlight in a search result match. */
export interface TextMatchHighlight {
    /** The indice in the fragment where the matched text begins. */
    beginIndice: Scalars['Int']
    /** The indice in the fragment where the matched text ends. */
    endIndice: Scalars['Int']
    /** The text matched. */
    text: Scalars['String']
    __typename: 'TextMatchHighlight'
}


/** A topic aggregates entities that are related to a subject. */
export interface Topic {
    id: Scalars['ID']
    /** The topic's name. */
    name: Scalars['String']
    /**
     * A list of related topics, including aliases of this topic, sorted with the most relevant
     * first. Returns up to 10 Topics.
     */
    relatedTopics: Topic[]
    /** A list of users who have starred this starrable. */
    stargazers: StargazerConnection
    /** Returns a boolean indicating whether the viewing user has starred this starrable. */
    viewerHasStarred: Scalars['Boolean']
    __typename: 'Topic'
}


/** Metadata for an audit entry with a topic. */
export type TopicAuditEntryData = (RepoAddTopicAuditEntry | RepoRemoveTopicAuditEntry) & { __isUnion?: true }


/** The connection type for Topic. */
export interface TopicConnection {
    /** A list of edges. */
    edges?: (TopicEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (Topic | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'TopicConnection'
}


/** An edge in a connection. */
export interface TopicEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: Topic
    __typename: 'TopicEdge'
}


/** Reason that the suggested topic is declined. */
export type TopicSuggestionDeclineReason = 'NOT_RELEVANT' | 'PERSONAL_PREFERENCE' | 'TOO_GENERAL' | 'TOO_SPECIFIC'


/** Autogenerated return type of TransferIssue */
export interface TransferIssuePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The issue that was transferred */
    issue?: Issue
    __typename: 'TransferIssuePayload'
}


/** Represents a 'transferred' event on a given issue or pull request. */
export interface TransferredEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** The repository this came from */
    fromRepository?: Repository
    id: Scalars['ID']
    /** Identifies the issue associated with the event. */
    issue: Issue
    __typename: 'TransferredEvent'
}


/** Represents a Git tree. */
export interface Tree {
    /** An abbreviated version of the Git object ID */
    abbreviatedOid: Scalars['String']
    /** The HTTP path for this Git object */
    commitResourcePath: Scalars['URI']
    /** The HTTP URL for this Git object */
    commitUrl: Scalars['URI']
    /** A list of tree entries. */
    entries?: TreeEntry[]
    id: Scalars['ID']
    /** The Git object ID */
    oid: Scalars['GitObjectID']
    /** The Repository the Git object belongs to */
    repository: Repository
    __typename: 'Tree'
}


/** Represents a Git tree entry. */
export interface TreeEntry {
    /** Entry file mode. */
    mode: Scalars['Int']
    /** Entry file name. */
    name: Scalars['String']
    /** Entry file object. */
    object?: GitObject
    /** Entry file Git object ID. */
    oid: Scalars['GitObjectID']
    /** The Repository the tree entry belongs to */
    repository: Repository
    /** If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule */
    submodule?: Submodule
    /** Entry file type. */
    type: Scalars['String']
    __typename: 'TreeEntry'
}


/** Autogenerated return type of UnarchiveRepository */
export interface UnarchiveRepositoryPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The repository that was unarchived. */
    repository?: Repository
    __typename: 'UnarchiveRepositoryPayload'
}


/** Represents an 'unassigned' event on any assignable object. */
export interface UnassignedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the assignable associated with the event. */
    assignable: Assignable
    /** Identifies the user or mannequin that was unassigned. */
    assignee?: Assignee
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /**
     * @deprecated Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC.
     * Identifies the subject (user) who was unassigned.
     */
    user?: User
    __typename: 'UnassignedEvent'
}


/** Autogenerated return type of UnfollowUser */
export interface UnfollowUserPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The user that was unfollowed. */
    user?: User
    __typename: 'UnfollowUserPayload'
}


/** Represents a type that can be retrieved by a URL. */
export type UniformResourceLocatable = (Bot | CheckRun | ClosedEvent | Commit | ConvertToDraftEvent | CrossReferencedEvent | Gist | Issue | Mannequin | MergedEvent | Milestone | Organization | PullRequest | PullRequestCommit | ReadyForReviewEvent | Release | Repository | RepositoryTopic | ReviewDismissedEvent | TeamDiscussion | TeamDiscussionComment | User) & { __isUnion?: true }


/** Represents an unknown signature on a Commit or Tag. */
export interface UnknownSignature {
    /** Email used to sign this object. */
    email: Scalars['String']
    /** True if the signature is valid and verified by GitHub. */
    isValid: Scalars['Boolean']
    /** Payload for GPG signing object. Raw ODB object without the signature header. */
    payload: Scalars['String']
    /** ASCII-armored signature header from object. */
    signature: Scalars['String']
    /** GitHub user corresponding to the email signing this commit. */
    signer?: User
    /**
     * The state of this signature. `VALID` if signature is valid and verified by
     * GitHub, otherwise represents reason why signature is considered invalid.
     */
    state: GitSignatureState
    /** True if the signature was made with GitHub's signing key. */
    wasSignedByGitHub: Scalars['Boolean']
    __typename: 'UnknownSignature'
}


/** Represents an 'unlabeled' event on a given issue or pull request. */
export interface UnlabeledEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Identifies the label associated with the 'unlabeled' event. */
    label: Label
    /** Identifies the `Labelable` associated with the event. */
    labelable: Labelable
    __typename: 'UnlabeledEvent'
}


/** Autogenerated return type of UnlinkRepositoryFromProject */
export interface UnlinkRepositoryFromProjectPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The linked Project. */
    project?: Project
    /** The linked Repository. */
    repository?: Repository
    __typename: 'UnlinkRepositoryFromProjectPayload'
}


/** Autogenerated return type of UnlockLockable */
export interface UnlockLockablePayload {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The item that was unlocked. */
    unlockedRecord?: Lockable
    __typename: 'UnlockLockablePayload'
}


/** Represents an 'unlocked' event on a given issue or pull request. */
export interface UnlockedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Object that was unlocked. */
    lockable: Lockable
    __typename: 'UnlockedEvent'
}


/** Autogenerated return type of UnmarkIssueAsDuplicate */
export interface UnmarkIssueAsDuplicatePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The issue or pull request that was marked as a duplicate. */
    duplicate?: IssueOrPullRequest
    __typename: 'UnmarkIssueAsDuplicatePayload'
}


/** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */
export interface UnmarkedAsDuplicateEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    __typename: 'UnmarkedAsDuplicateEvent'
}


/** Autogenerated return type of UnminimizeComment */
export interface UnminimizeCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The comment that was unminimized. */
    unminimizedComment?: Minimizable
    __typename: 'UnminimizeCommentPayload'
}


/** Autogenerated return type of UnpinIssue */
export interface UnpinIssuePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The issue that was unpinned */
    issue?: Issue
    __typename: 'UnpinIssuePayload'
}


/** Represents an 'unpinned' event on a given issue or pull request. */
export interface UnpinnedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Identifies the issue associated with the event. */
    issue: Issue
    __typename: 'UnpinnedEvent'
}


/** Autogenerated return type of UnresolveReviewThread */
export interface UnresolveReviewThreadPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The thread to resolve. */
    thread?: PullRequestReviewThread
    __typename: 'UnresolveReviewThreadPayload'
}


/** Represents an 'unsubscribed' event on a given `Subscribable`. */
export interface UnsubscribedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** Object referenced by event. */
    subscribable: Subscribable
    __typename: 'UnsubscribedEvent'
}


/** Entities that can be updated. */
export type Updatable = (CommitComment | GistComment | Issue | IssueComment | Project | PullRequest | PullRequestReview | PullRequestReviewComment | TeamDiscussion | TeamDiscussionComment) & { __isUnion?: true }


/** Comments that can be updated. */
export type UpdatableComment = (CommitComment | GistComment | Issue | IssueComment | PullRequest | PullRequestReview | PullRequestReviewComment | TeamDiscussion | TeamDiscussionComment) & { __isUnion?: true }


/** Autogenerated return type of UpdateBranchProtectionRule */
export interface UpdateBranchProtectionRulePayload {
    /** The newly created BranchProtectionRule. */
    branchProtectionRule?: BranchProtectionRule
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'UpdateBranchProtectionRulePayload'
}


/** Autogenerated return type of UpdateCheckRun */
export interface UpdateCheckRunPayload {
    /** The updated check run. */
    checkRun?: CheckRun
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'UpdateCheckRunPayload'
}


/** Autogenerated return type of UpdateCheckSuitePreferences */
export interface UpdateCheckSuitePreferencesPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated repository. */
    repository?: Repository
    __typename: 'UpdateCheckSuitePreferencesPayload'
}


/** Autogenerated return type of UpdateEnterpriseActionExecutionCapabilitySetting */
export interface UpdateEnterpriseActionExecutionCapabilitySettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated action execution capability setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the action execution capability setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseActionExecutionCapabilitySettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseAdministratorRole */
export interface UpdateEnterpriseAdministratorRolePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** A message confirming the result of changing the administrator's role. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseAdministratorRolePayload'
}


/** Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting */
export interface UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated allow private repository forking setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the allow private repository forking setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting */
export interface UpdateEnterpriseDefaultRepositoryPermissionSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated default repository permission setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the default repository permission setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseDefaultRepositoryPermissionSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting */
export interface UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated members can change repository visibility setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the members can change repository visibility setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting */
export interface UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated members can create repositories setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the members can create repositories setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting */
export interface UpdateEnterpriseMembersCanDeleteIssuesSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated members can delete issues setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the members can delete issues setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseMembersCanDeleteIssuesSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting */
export interface UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated members can delete repositories setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the members can delete repositories setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting */
export interface UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated members can invite collaborators setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the members can invite collaborators setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting */
export interface UpdateEnterpriseMembersCanMakePurchasesSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated members can make purchases setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the members can make purchases setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseMembersCanMakePurchasesSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting */
export interface UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated members can update protected branches setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the members can update protected branches setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting */
export interface UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated members can view dependency insights setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the members can view dependency insights setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting */
export interface UpdateEnterpriseOrganizationProjectsSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated organization projects setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the organization projects setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseOrganizationProjectsSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseProfile */
export interface UpdateEnterpriseProfilePayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated enterprise. */
    enterprise?: Enterprise
    __typename: 'UpdateEnterpriseProfilePayload'
}


/** Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting */
export interface UpdateEnterpriseRepositoryProjectsSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated repository projects setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the repository projects setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseRepositoryProjectsSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting */
export interface UpdateEnterpriseTeamDiscussionsSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated team discussions setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the team discussions setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseTeamDiscussionsSettingPayload'
}


/** Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting */
export interface UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The enterprise with the updated two factor authentication required setting. */
    enterprise?: Enterprise
    /** A message confirming the result of updating the two factor authentication required setting. */
    message?: Scalars['String']
    __typename: 'UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload'
}


/** Autogenerated return type of UpdateIpAllowListEnabledSetting */
export interface UpdateIpAllowListEnabledSettingPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The IP allow list owner on which the setting was updated. */
    owner?: IpAllowListOwner
    __typename: 'UpdateIpAllowListEnabledSettingPayload'
}


/** Autogenerated return type of UpdateIpAllowListEntry */
export interface UpdateIpAllowListEntryPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The IP allow list entry that was updated. */
    ipAllowListEntry?: IpAllowListEntry
    __typename: 'UpdateIpAllowListEntryPayload'
}


/** Autogenerated return type of UpdateIssueComment */
export interface UpdateIssueCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated comment. */
    issueComment?: IssueComment
    __typename: 'UpdateIssueCommentPayload'
}


/** Autogenerated return type of UpdateIssue */
export interface UpdateIssuePayload {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The issue. */
    issue?: Issue
    __typename: 'UpdateIssuePayload'
}


/** Autogenerated return type of UpdateLabel */
export interface UpdateLabelPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated label. */
    label?: Label
    __typename: 'UpdateLabelPayload'
}


/** Autogenerated return type of UpdateProjectCard */
export interface UpdateProjectCardPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated ProjectCard. */
    projectCard?: ProjectCard
    __typename: 'UpdateProjectCardPayload'
}


/** Autogenerated return type of UpdateProjectColumn */
export interface UpdateProjectColumnPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated project column. */
    projectColumn?: ProjectColumn
    __typename: 'UpdateProjectColumnPayload'
}


/** Autogenerated return type of UpdateProject */
export interface UpdateProjectPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated project. */
    project?: Project
    __typename: 'UpdateProjectPayload'
}


/** Autogenerated return type of UpdatePullRequest */
export interface UpdatePullRequestPayload {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated pull request. */
    pullRequest?: PullRequest
    __typename: 'UpdatePullRequestPayload'
}


/** Autogenerated return type of UpdatePullRequestReviewComment */
export interface UpdatePullRequestReviewCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated comment. */
    pullRequestReviewComment?: PullRequestReviewComment
    __typename: 'UpdatePullRequestReviewCommentPayload'
}


/** Autogenerated return type of UpdatePullRequestReview */
export interface UpdatePullRequestReviewPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated pull request review. */
    pullRequestReview?: PullRequestReview
    __typename: 'UpdatePullRequestReviewPayload'
}


/** Autogenerated return type of UpdateRef */
export interface UpdateRefPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated Ref. */
    ref?: Ref
    __typename: 'UpdateRefPayload'
}


/** Autogenerated return type of UpdateRefs */
export interface UpdateRefsPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    __typename: 'UpdateRefsPayload'
}


/** Autogenerated return type of UpdateRepository */
export interface UpdateRepositoryPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated repository. */
    repository?: Repository
    __typename: 'UpdateRepositoryPayload'
}


/** Autogenerated return type of UpdateSubscription */
export interface UpdateSubscriptionPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The input subscribable entity. */
    subscribable?: Subscribable
    __typename: 'UpdateSubscriptionPayload'
}


/** Autogenerated return type of UpdateTeamDiscussionComment */
export interface UpdateTeamDiscussionCommentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated comment. */
    teamDiscussionComment?: TeamDiscussionComment
    __typename: 'UpdateTeamDiscussionCommentPayload'
}


/** Autogenerated return type of UpdateTeamDiscussion */
export interface UpdateTeamDiscussionPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The updated discussion. */
    teamDiscussion?: TeamDiscussion
    __typename: 'UpdateTeamDiscussionPayload'
}


/** Autogenerated return type of UpdateTeamReviewAssignment */
export interface UpdateTeamReviewAssignmentPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** The team that was modified */
    team?: Team
    __typename: 'UpdateTeamReviewAssignmentPayload'
}


/** Autogenerated return type of UpdateTopics */
export interface UpdateTopicsPayload {
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: Scalars['String']
    /** Names of the provided topics that are not valid. */
    invalidTopicNames?: Scalars['String'][]
    /** The updated repository. */
    repository?: Repository
    __typename: 'UpdateTopicsPayload'
}


/** A user is an individual's account on GitHub that owns repositories and can make new content. */
export interface User {
    /** Determine if this repository owner has any items that can be pinned to their profile. */
    anyPinnableItems: Scalars['Boolean']
    /** A URL pointing to the user's public avatar. */
    avatarUrl: Scalars['URI']
    /** The user's public profile bio. */
    bio?: Scalars['String']
    /** The user's public profile bio as HTML. */
    bioHTML: Scalars['HTML']
    /** A list of commit comments made by this user. */
    commitComments: CommitCommentConnection
    /** The user's public profile company. */
    company?: Scalars['String']
    /** The user's public profile company as HTML. */
    companyHTML: Scalars['HTML']
    /** The collection of contributions this user has made to different repositories. */
    contributionsCollection: ContributionsCollection
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the primary key from the database. */
    databaseId?: Scalars['Int']
    /** The user's publicly visible profile email. */
    email: Scalars['String']
    /** A list of users the given user is followed by. */
    followers: FollowerConnection
    /** A list of users the given user is following. */
    following: FollowingConnection
    /** Find gist by repo name. */
    gist?: Gist
    /** A list of gist comments made by this user. */
    gistComments: GistCommentConnection
    /** A list of the Gists the user has created. */
    gists: GistConnection
    /** The hovercard information for this user in a given context */
    hovercard: Hovercard
    id: Scalars['ID']
    /** Whether or not this user is a participant in the GitHub Security Bug Bounty. */
    isBountyHunter: Scalars['Boolean']
    /** Whether or not this user is a participant in the GitHub Campus Experts Program. */
    isCampusExpert: Scalars['Boolean']
    /** Whether or not this user is a GitHub Developer Program member. */
    isDeveloperProgramMember: Scalars['Boolean']
    /** Whether or not this user is a GitHub employee. */
    isEmployee: Scalars['Boolean']
    /** Whether or not the user has marked themselves as for hire. */
    isHireable: Scalars['Boolean']
    /** Whether or not this user is a site administrator. */
    isSiteAdmin: Scalars['Boolean']
    /** Whether or not this user is the viewing user. */
    isViewer: Scalars['Boolean']
    /** A list of issue comments made by this user. */
    issueComments: IssueCommentConnection
    /** A list of issues associated with this user. */
    issues: IssueConnection
    /**
     * Showcases a selection of repositories and gists that the profile owner has
     * either curated or that have been selected automatically based on popularity.
     */
    itemShowcase: ProfileItemShowcase
    /** The user's public profile location. */
    location?: Scalars['String']
    /** The username used to login. */
    login: Scalars['String']
    /** The user's public profile name. */
    name?: Scalars['String']
    /** Find an organization by its login that the user belongs to. */
    organization?: Organization
    /** Verified email addresses that match verified domains for a specified organization the user is a member of. */
    organizationVerifiedDomainEmails: Scalars['String'][]
    /** A list of organizations the user belongs to. */
    organizations: OrganizationConnection
    /** A list of packages under the owner. */
    packages: PackageConnection
    /** A list of repositories and gists this profile owner can pin to their profile. */
    pinnableItems: PinnableItemConnection
    /** A list of repositories and gists this profile owner has pinned to their profile */
    pinnedItems: PinnableItemConnection
    /** Returns how many more items this profile owner can pin to their profile. */
    pinnedItemsRemaining: Scalars['Int']
    /** Find project by number. */
    project?: Project
    /** A list of projects under the owner. */
    projects: ProjectConnection
    /** The HTTP path listing user's projects */
    projectsResourcePath: Scalars['URI']
    /** The HTTP URL listing user's projects */
    projectsUrl: Scalars['URI']
    /** A list of public keys associated with this user. */
    publicKeys: PublicKeyConnection
    /** A list of pull requests associated with this user. */
    pullRequests: PullRequestConnection
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageOwner` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages under the owner.
     */
    registryPackages: RegistryPackageConnection
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageSearch` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages for a particular search query.
     */
    registryPackagesForQuery: RegistryPackageConnection
    /** A list of repositories that the user owns. */
    repositories: RepositoryConnection
    /** A list of repositories that the user recently contributed to. */
    repositoriesContributedTo: RepositoryConnection
    /** Find Repository. */
    repository?: Repository
    /** The HTTP path for this user */
    resourcePath: Scalars['URI']
    /** Replies this user has saved */
    savedReplies?: SavedReplyConnection
    /** The GitHub Sponsors listing for this user. */
    sponsorsListing?: SponsorsListing
    /** This object's sponsorships as the maintainer. */
    sponsorshipsAsMaintainer: SponsorshipConnection
    /** This object's sponsorships as the sponsor. */
    sponsorshipsAsSponsor: SponsorshipConnection
    /** Repositories the user has starred. */
    starredRepositories: StarredRepositoryConnection
    /** The user's description of what they're currently doing. */
    status?: UserStatus
    /** Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created */
    topRepositories: RepositoryConnection
    /** The user's Twitter username. */
    twitterUsername?: Scalars['String']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The HTTP URL for this user */
    url: Scalars['URI']
    /** Can the viewer pin repositories and gists to the profile? */
    viewerCanChangePinnedItems: Scalars['Boolean']
    /** Can the current viewer create new projects on this owner. */
    viewerCanCreateProjects: Scalars['Boolean']
    /** Whether or not the viewer is able to follow the user. */
    viewerCanFollow: Scalars['Boolean']
    /** Whether or not this user is followed by the viewer. */
    viewerIsFollowing: Scalars['Boolean']
    /** A list of repositories the given user is watching. */
    watching: RepositoryConnection
    /** A URL pointing to the user's public website/blog. */
    websiteUrl?: Scalars['URI']
    __typename: 'User'
}


/** The possible durations that a user can be blocked for. */
export type UserBlockDuration = 'ONE_DAY' | 'ONE_MONTH' | 'ONE_WEEK' | 'PERMANENT' | 'THREE_DAYS'


/** Represents a 'user_blocked' event on a given user. */
export interface UserBlockedEvent {
    /** Identifies the actor who performed the event. */
    actor?: Actor
    /** Number of days that the user was blocked for. */
    blockDuration: UserBlockDuration
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    id: Scalars['ID']
    /** The user who was blocked. */
    subject?: User
    __typename: 'UserBlockedEvent'
}


/** The connection type for User. */
export interface UserConnection {
    /** A list of edges. */
    edges?: (UserEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (User | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'UserConnection'
}


/** An edit on user content */
export interface UserContentEdit {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** Identifies the date and time when the object was deleted. */
    deletedAt?: Scalars['DateTime']
    /** The actor who deleted this content */
    deletedBy?: Actor
    /** A summary of the changes for this edit */
    diff?: Scalars['String']
    /** When this content was edited */
    editedAt: Scalars['DateTime']
    /** The actor who edited this content */
    editor?: Actor
    id: Scalars['ID']
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'UserContentEdit'
}


/** A list of edits to content. */
export interface UserContentEditConnection {
    /** A list of edges. */
    edges?: (UserContentEditEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (UserContentEdit | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'UserContentEditConnection'
}


/** An edge in a connection. */
export interface UserContentEditEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: UserContentEdit
    __typename: 'UserContentEditEdge'
}


/** Represents a user. */
export interface UserEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: User
    __typename: 'UserEdge'
}


/** The user's description of what they're currently doing. */
export interface UserStatus {
    /** Identifies the date and time when the object was created. */
    createdAt: Scalars['DateTime']
    /** An emoji summarizing the user's status. */
    emoji?: Scalars['String']
    /** The status emoji as HTML. */
    emojiHTML?: Scalars['HTML']
    /** If set, the status will not be shown after this date. */
    expiresAt?: Scalars['DateTime']
    /** ID of the object. */
    id: Scalars['ID']
    /** Whether this status indicates the user is not fully available on GitHub. */
    indicatesLimitedAvailability: Scalars['Boolean']
    /** A brief message describing what the user is doing. */
    message?: Scalars['String']
    /** The organization whose members can see this status. If null, this status is publicly visible. */
    organization?: Organization
    /** Identifies the date and time when the object was last updated. */
    updatedAt: Scalars['DateTime']
    /** The user who has this status. */
    user: User
    __typename: 'UserStatus'
}


/** The connection type for UserStatus. */
export interface UserStatusConnection {
    /** A list of edges. */
    edges?: (UserStatusEdge | undefined)[]
    /** A list of nodes. */
    nodes?: (UserStatus | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** Identifies the total count of items in the connection. */
    totalCount: Scalars['Int']
    __typename: 'UserStatusConnection'
}


/** An edge in a connection. */
export interface UserStatusEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of the edge. */
    node?: UserStatus
    __typename: 'UserStatusEdge'
}


/** Properties by which user status connections can be ordered. */
export type UserStatusOrderField = 'UPDATED_AT'


/** A hovercard context with a message describing how the viewer is related. */
export interface ViewerHovercardContext {
    /** A string describing this context */
    message: Scalars['String']
    /** An octicon to accompany this context */
    octicon: Scalars['String']
    /** Identifies the user who is related to this context. */
    viewer: User
    __typename: 'ViewerHovercardContext'
}


/** Autogenerated input type of AcceptEnterpriseAdministratorInvitation */
export interface AcceptEnterpriseAdministratorInvitationInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The id of the invitation being accepted */
invitationId: Scalars['ID']}


/** Autogenerated return type of AcceptEnterpriseAdministratorInvitation */
export interface AcceptEnterpriseAdministratorInvitationPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The invitation that was accepted. */
    invitation?: EnterpriseAdministratorInvitationRequest
    /** A message confirming the result of accepting an administrator invitation. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AcceptTopicSuggestion */
export interface AcceptTopicSuggestionInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The name of the suggested topic. */
name: Scalars['String'],
/** The Node ID of the repository. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of AcceptTopicSuggestion */
export interface AcceptTopicSuggestionPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The accepted topic. */
    topic?: TopicRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an object which can take actions on GitHub. Typically a User or Bot. */
export interface ActorRequest{
    /** A URL pointing to the actor's public avatar. */
    avatarUrl?: [{
    /** The size of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** The username of the actor. */
    login?: boolean | number
    /** The HTTP path for this actor. */
    resourcePath?: boolean | number
    /** The HTTP URL for this actor. */
    url?: boolean | number
    on_Bot?: BotRequest
    on_EnterpriseUserAccount?: EnterpriseUserAccountRequest
    on_Mannequin?: MannequinRequest
    on_Organization?: OrganizationRequest
    on_User?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Location information for an actor */
export interface ActorLocationRequest{
    /** City */
    city?: boolean | number
    /** Country name */
    country?: boolean | number
    /** Country code */
    countryCode?: boolean | number
    /** Region name */
    region?: boolean | number
    /** Region or state code */
    regionCode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddAssigneesToAssignable */
export interface AddAssigneesToAssignableInput {
/** The id of the assignable object to add assignees to. */
assignableId: Scalars['ID'],
/** The id of users to add as assignees. */
assigneeIds: Scalars['ID'][],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null)}


/** Autogenerated return type of AddAssigneesToAssignable */
export interface AddAssigneesToAssignablePayloadRequest{
    /** The item that was assigned. */
    assignable?: AssignableRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddComment */
export interface AddCommentInput {
/** The contents of the comment. */
body: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the subject to modify. */
subjectId: Scalars['ID']}


/** Autogenerated return type of AddComment */
export interface AddCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The edge from the subject's comment connection. */
    commentEdge?: IssueCommentEdgeRequest
    /** The subject */
    subject?: NodeRequest
    /** The edge from the subject's timeline connection. */
    timelineEdge?: IssueTimelineItemEdgeRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddLabelsToLabelable */
export interface AddLabelsToLabelableInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ids of the labels to add. */
labelIds: Scalars['ID'][],
/** The id of the labelable object to add labels to. */
labelableId: Scalars['ID']}


/** Autogenerated return type of AddLabelsToLabelable */
export interface AddLabelsToLabelablePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The item that was labeled. */
    labelable?: LabelableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddProjectCard */
export interface AddProjectCardInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The content of the card. Must be a member of the ProjectCardItem union */
contentId?: (Scalars['ID'] | null),
/** The note on the card. */
note?: (Scalars['String'] | null),
/** The Node ID of the ProjectColumn. */
projectColumnId: Scalars['ID']}


/** Autogenerated return type of AddProjectCard */
export interface AddProjectCardPayloadRequest{
    /** The edge from the ProjectColumn's card connection. */
    cardEdge?: ProjectCardEdgeRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The ProjectColumn */
    projectColumn?: ProjectColumnRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddProjectColumn */
export interface AddProjectColumnInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The name of the column. */
name: Scalars['String'],
/** The Node ID of the project. */
projectId: Scalars['ID']}


/** Autogenerated return type of AddProjectColumn */
export interface AddProjectColumnPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The edge from the project's column connection. */
    columnEdge?: ProjectColumnEdgeRequest
    /** The project */
    project?: ProjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddPullRequestReviewComment */
export interface AddPullRequestReviewCommentInput {
/** The text of the comment. */
body: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The SHA of the commit to comment on. */
commitOID?: (Scalars['GitObjectID'] | null),
/** The comment id to reply to. */
inReplyTo?: (Scalars['ID'] | null),
/** The relative path of the file to comment on. */
path?: (Scalars['String'] | null),
/** The line index in the diff to comment on. */
position?: (Scalars['Int'] | null),
/** The node ID of the pull request reviewing */
pullRequestId?: (Scalars['ID'] | null),
/** The Node ID of the review to modify. */
pullRequestReviewId?: (Scalars['ID'] | null)}


/** Autogenerated return type of AddPullRequestReviewComment */
export interface AddPullRequestReviewCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The newly created comment. */
    comment?: PullRequestReviewCommentRequest
    /** The edge from the review's comment connection. */
    commentEdge?: PullRequestReviewCommentEdgeRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddPullRequestReview */
export interface AddPullRequestReviewInput {
/** The contents of the review body comment. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The review line comments. */
comments?: ((DraftPullRequestReviewComment | null)[] | null),
/** The commit OID the review pertains to. */
commitOID?: (Scalars['GitObjectID'] | null),
/** The event to perform on the pull request review. */
event?: (PullRequestReviewEvent | null),
/** The Node ID of the pull request to modify. */
pullRequestId: Scalars['ID'],
/** The review line comment threads. */
threads?: ((DraftPullRequestReviewThread | null)[] | null)}


/** Autogenerated return type of AddPullRequestReview */
export interface AddPullRequestReviewPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The newly created pull request review. */
    pullRequestReview?: PullRequestReviewRequest
    /** The edge from the pull request's review connection. */
    reviewEdge?: PullRequestReviewEdgeRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddPullRequestReviewThread */
export interface AddPullRequestReviewThreadInput {
/** Body of the thread's first comment. */
body: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The line of the blob to which the thread refers. The end of the line range for multi-line comments. */
line: Scalars['Int'],
/** Path to the file being commented on. */
path: Scalars['String'],
/** The Node ID of the review to modify. */
pullRequestReviewId: Scalars['ID'],
/** The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range. */
side?: (DiffSide | null),
/** The first line of the range to which the comment refers. */
startLine?: (Scalars['Int'] | null),
/** The side of the diff on which the start line resides. */
startSide?: (DiffSide | null)}


/** Autogenerated return type of AddPullRequestReviewThread */
export interface AddPullRequestReviewThreadPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The newly created thread. */
    thread?: PullRequestReviewThreadRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddReaction */
export interface AddReactionInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The name of the emoji to react with. */
content: ReactionContent,
/** The Node ID of the subject to modify. */
subjectId: Scalars['ID']}


/** Autogenerated return type of AddReaction */
export interface AddReactionPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The reaction object. */
    reaction?: ReactionRequest
    /** The reactable subject. */
    subject?: ReactableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddStar */
export interface AddStarInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Starrable ID to star. */
starrableId: Scalars['ID']}


/** Autogenerated return type of AddStar */
export interface AddStarPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The starrable. */
    starrable?: StarrableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'added_to_project' event on a given issue or pull request. */
export interface AddedToProjectEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** Project referenced by event. */
    project?: ProjectRequest
    /** Project card referenced by this project event. */
    projectCard?: ProjectCardRequest
    /** Column name referenced by this project event. */
    projectColumnName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A GitHub App. */
export interface AppRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The description of the app. */
    description?: boolean | number
    id?: boolean | number
    /** The hex color code, without the leading '#', for the logo background. */
    logoBackgroundColor?: boolean | number
    /** A URL pointing to the app's logo. */
    logoUrl?: [{
    /** The size of the resulting image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** The name of the app. */
    name?: boolean | number
    /** A slug based on the name of the app for use in URLs. */
    slug?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The URL to the app's homepage. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ArchiveRepository */
export interface ArchiveRepositoryInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the repository to mark as archived. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of ArchiveRepository */
export interface ArchiveRepositoryPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The repository that was marked as archived. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object that can have users assigned to it. */
export interface AssignableRequest{
    /** A list of Users assigned to this object. */
    assignees?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserConnectionRequest] | UserConnectionRequest
    on_Issue?: IssueRequest
    on_PullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an 'assigned' event on any assignable object. */
export interface AssignedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the assignable associated with the event. */
    assignable?: AssignableRequest
    /** Identifies the user or mannequin that was assigned. */
    assignee?: AssigneeRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /**
     * @deprecated Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC.
     * Identifies the user who was assigned.
     */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Types that can be assigned to issues. */
export interface AssigneeRequest{
    on_Bot?:BotRequest,
    on_Mannequin?:MannequinRequest,
    on_Organization?:OrganizationRequest,
    on_User?:UserRequest,
    on_Actor?: ActorRequest,
    on_Node?: NodeRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_MemberStatusable?: MemberStatusableRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProfileOwner?: ProfileOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryOwner?: RepositoryOwnerRequest,
    on_Sponsorable?: SponsorableRequest,
    __typename?: boolean | number
}


/** An entry in the audit log. */
export interface AuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    on_MembersCanDeleteReposClearAuditEntry?: MembersCanDeleteReposClearAuditEntryRequest
    on_MembersCanDeleteReposDisableAuditEntry?: MembersCanDeleteReposDisableAuditEntryRequest
    on_MembersCanDeleteReposEnableAuditEntry?: MembersCanDeleteReposEnableAuditEntryRequest
    on_OauthApplicationCreateAuditEntry?: OauthApplicationCreateAuditEntryRequest
    on_OrgAddBillingManagerAuditEntry?: OrgAddBillingManagerAuditEntryRequest
    on_OrgAddMemberAuditEntry?: OrgAddMemberAuditEntryRequest
    on_OrgBlockUserAuditEntry?: OrgBlockUserAuditEntryRequest
    on_OrgConfigDisableCollaboratorsOnlyAuditEntry?: OrgConfigDisableCollaboratorsOnlyAuditEntryRequest
    on_OrgConfigEnableCollaboratorsOnlyAuditEntry?: OrgConfigEnableCollaboratorsOnlyAuditEntryRequest
    on_OrgCreateAuditEntry?: OrgCreateAuditEntryRequest
    on_OrgDisableOauthAppRestrictionsAuditEntry?: OrgDisableOauthAppRestrictionsAuditEntryRequest
    on_OrgDisableSamlAuditEntry?: OrgDisableSamlAuditEntryRequest
    on_OrgDisableTwoFactorRequirementAuditEntry?: OrgDisableTwoFactorRequirementAuditEntryRequest
    on_OrgEnableOauthAppRestrictionsAuditEntry?: OrgEnableOauthAppRestrictionsAuditEntryRequest
    on_OrgEnableSamlAuditEntry?: OrgEnableSamlAuditEntryRequest
    on_OrgEnableTwoFactorRequirementAuditEntry?: OrgEnableTwoFactorRequirementAuditEntryRequest
    on_OrgInviteMemberAuditEntry?: OrgInviteMemberAuditEntryRequest
    on_OrgInviteToBusinessAuditEntry?: OrgInviteToBusinessAuditEntryRequest
    on_OrgOauthAppAccessApprovedAuditEntry?: OrgOauthAppAccessApprovedAuditEntryRequest
    on_OrgOauthAppAccessDeniedAuditEntry?: OrgOauthAppAccessDeniedAuditEntryRequest
    on_OrgOauthAppAccessRequestedAuditEntry?: OrgOauthAppAccessRequestedAuditEntryRequest
    on_OrgRemoveBillingManagerAuditEntry?: OrgRemoveBillingManagerAuditEntryRequest
    on_OrgRemoveMemberAuditEntry?: OrgRemoveMemberAuditEntryRequest
    on_OrgRemoveOutsideCollaboratorAuditEntry?: OrgRemoveOutsideCollaboratorAuditEntryRequest
    on_OrgRestoreMemberAuditEntry?: OrgRestoreMemberAuditEntryRequest
    on_OrgUnblockUserAuditEntry?: OrgUnblockUserAuditEntryRequest
    on_OrgUpdateDefaultRepositoryPermissionAuditEntry?: OrgUpdateDefaultRepositoryPermissionAuditEntryRequest
    on_OrgUpdateMemberAuditEntry?: OrgUpdateMemberAuditEntryRequest
    on_OrgUpdateMemberRepositoryCreationPermissionAuditEntry?: OrgUpdateMemberRepositoryCreationPermissionAuditEntryRequest
    on_OrgUpdateMemberRepositoryInvitationPermissionAuditEntry?: OrgUpdateMemberRepositoryInvitationPermissionAuditEntryRequest
    on_PrivateRepositoryForkingDisableAuditEntry?: PrivateRepositoryForkingDisableAuditEntryRequest
    on_PrivateRepositoryForkingEnableAuditEntry?: PrivateRepositoryForkingEnableAuditEntryRequest
    on_RepoAccessAuditEntry?: RepoAccessAuditEntryRequest
    on_RepoAddMemberAuditEntry?: RepoAddMemberAuditEntryRequest
    on_RepoAddTopicAuditEntry?: RepoAddTopicAuditEntryRequest
    on_RepoArchivedAuditEntry?: RepoArchivedAuditEntryRequest
    on_RepoChangeMergeSettingAuditEntry?: RepoChangeMergeSettingAuditEntryRequest
    on_RepoConfigDisableAnonymousGitAccessAuditEntry?: RepoConfigDisableAnonymousGitAccessAuditEntryRequest
    on_RepoConfigDisableCollaboratorsOnlyAuditEntry?: RepoConfigDisableCollaboratorsOnlyAuditEntryRequest
    on_RepoConfigDisableContributorsOnlyAuditEntry?: RepoConfigDisableContributorsOnlyAuditEntryRequest
    on_RepoConfigDisableSockpuppetDisallowedAuditEntry?: RepoConfigDisableSockpuppetDisallowedAuditEntryRequest
    on_RepoConfigEnableAnonymousGitAccessAuditEntry?: RepoConfigEnableAnonymousGitAccessAuditEntryRequest
    on_RepoConfigEnableCollaboratorsOnlyAuditEntry?: RepoConfigEnableCollaboratorsOnlyAuditEntryRequest
    on_RepoConfigEnableContributorsOnlyAuditEntry?: RepoConfigEnableContributorsOnlyAuditEntryRequest
    on_RepoConfigEnableSockpuppetDisallowedAuditEntry?: RepoConfigEnableSockpuppetDisallowedAuditEntryRequest
    on_RepoConfigLockAnonymousGitAccessAuditEntry?: RepoConfigLockAnonymousGitAccessAuditEntryRequest
    on_RepoConfigUnlockAnonymousGitAccessAuditEntry?: RepoConfigUnlockAnonymousGitAccessAuditEntryRequest
    on_RepoCreateAuditEntry?: RepoCreateAuditEntryRequest
    on_RepoDestroyAuditEntry?: RepoDestroyAuditEntryRequest
    on_RepoRemoveMemberAuditEntry?: RepoRemoveMemberAuditEntryRequest
    on_RepoRemoveTopicAuditEntry?: RepoRemoveTopicAuditEntryRequest
    on_RepositoryVisibilityChangeDisableAuditEntry?: RepositoryVisibilityChangeDisableAuditEntryRequest
    on_RepositoryVisibilityChangeEnableAuditEntry?: RepositoryVisibilityChangeEnableAuditEntryRequest
    on_TeamAddMemberAuditEntry?: TeamAddMemberAuditEntryRequest
    on_TeamAddRepositoryAuditEntry?: TeamAddRepositoryAuditEntryRequest
    on_TeamChangeParentTeamAuditEntry?: TeamChangeParentTeamAuditEntryRequest
    on_TeamRemoveMemberAuditEntry?: TeamRemoveMemberAuditEntryRequest
    on_TeamRemoveRepositoryAuditEntry?: TeamRemoveRepositoryAuditEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Types that can initiate an audit log event. */
export interface AuditEntryActorRequest{
    on_Bot?:BotRequest,
    on_Organization?:OrganizationRequest,
    on_User?:UserRequest,
    on_Actor?: ActorRequest,
    on_Node?: NodeRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_MemberStatusable?: MemberStatusableRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProfileOwner?: ProfileOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryOwner?: RepositoryOwnerRequest,
    on_Sponsorable?: SponsorableRequest,
    __typename?: boolean | number
}


/** Ordering options for Audit Log connections. */
export interface AuditLogOrder {
/** The ordering direction. */
direction?: (OrderDirection | null),
/** The field to order Audit Logs by. */
field?: (AuditLogOrderField | null)}


/** Represents a 'automatic_base_change_failed' event on a given pull request. */
export interface AutomaticBaseChangeFailedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** The new base for this PR */
    newBase?: boolean | number
    /** The old base for this PR */
    oldBase?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'automatic_base_change_succeeded' event on a given pull request. */
export interface AutomaticBaseChangeSucceededEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** The new base for this PR */
    newBase?: boolean | number
    /** The old base for this PR */
    oldBase?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'base_ref_changed' event on a given issue or pull request. */
export interface BaseRefChangedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'base_ref_force_pushed' event on a given pull request. */
export interface BaseRefForcePushedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the after commit SHA for the 'base_ref_force_pushed' event. */
    afterCommit?: CommitRequest
    /** Identifies the before commit SHA for the 'base_ref_force_pushed' event. */
    beforeCommit?: CommitRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    /** Identifies the fully qualified ref name for the 'base_ref_force_pushed' event. */
    ref?: RefRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Git blame. */
export interface BlameRequest{
    /** The list of ranges from a Git blame. */
    ranges?: BlameRangeRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a range of information from a Git blame. */
export interface BlameRangeRequest{
    /**
     * Identifies the recency of the change, from 1 (new) to 10 (old). This is
     * calculated as a 2-quantile and determines the length of distance between the
     * median age of all the changes in the file and the recency of the current
     * range's change.
     */
    age?: boolean | number
    /** Identifies the line author */
    commit?: CommitRequest
    /** The ending line for the range */
    endingLine?: boolean | number
    /** The starting line for the range */
    startingLine?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Git blob. */
export interface BlobRequest{
    /** An abbreviated version of the Git object ID */
    abbreviatedOid?: boolean | number
    /** Byte size of Blob object */
    byteSize?: boolean | number
    /** The HTTP path for this Git object */
    commitResourcePath?: boolean | number
    /** The HTTP URL for this Git object */
    commitUrl?: boolean | number
    id?: boolean | number
    /**
     * Indicates whether the Blob is binary or text
     * 
     * **Upcoming Change on 2019-07-01 UTC**
     * **Description:** Type for `isBinary` will change from `Boolean!` to `Boolean`.
     * **Reason:** The `isBinary` field may return `null` when it cannot determine if a Blob is binary.
     */
    isBinary?: boolean | number
    /** Indicates whether the contents is truncated */
    isTruncated?: boolean | number
    /** The Git object ID */
    oid?: boolean | number
    /** The Repository the Git object belongs to */
    repository?: RepositoryRequest
    /** UTF8 text data or null if the Blob is binary */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A special type of user which takes actions on behalf of GitHub Apps. */
export interface BotRequest{
    /** A URL pointing to the GitHub App's public avatar. */
    avatarUrl?: [{
    /** The size of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** The username of the actor. */
    login?: boolean | number
    /** The HTTP path for this bot */
    resourcePath?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this bot */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A branch protection rule. */
export interface BranchProtectionRuleRequest{
    /** A list of conflicts matching branches protection rule and other branch protection rules */
    branchProtectionRuleConflicts?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},BranchProtectionRuleConflictConnectionRequest] | BranchProtectionRuleConflictConnectionRequest
    /** The actor who created this branch protection rule. */
    creator?: ActorRequest
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** Will new commits pushed to matching branches dismiss pull request review approvals. */
    dismissesStaleReviews?: boolean | number
    id?: boolean | number
    /** Can admins overwrite branch protection. */
    isAdminEnforced?: boolean | number
    /** Repository refs that are protected by this rule */
    matchingRefs?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filters refs with query on name */
    query?: (Scalars['String'] | null)},RefConnectionRequest] | RefConnectionRequest
    /** Identifies the protection rule pattern. */
    pattern?: boolean | number
    /** A list push allowances for this branch protection rule. */
    pushAllowances?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},PushAllowanceConnectionRequest] | PushAllowanceConnectionRequest
    /** The repository associated with this branch protection rule. */
    repository?: RepositoryRequest
    /** Number of approving reviews required to update matching branches. */
    requiredApprovingReviewCount?: boolean | number
    /** List of required status check contexts that must pass for commits to be accepted to matching branches. */
    requiredStatusCheckContexts?: boolean | number
    /** Are approving reviews required to update matching branches. */
    requiresApprovingReviews?: boolean | number
    /** Are reviews from code owners required to update matching branches. */
    requiresCodeOwnerReviews?: boolean | number
    /** Are commits required to be signed. */
    requiresCommitSignatures?: boolean | number
    /** Are status checks required to update matching branches. */
    requiresStatusChecks?: boolean | number
    /** Are branches required to be up to date before merging. */
    requiresStrictStatusChecks?: boolean | number
    /** Is pushing to matching branches restricted. */
    restrictsPushes?: boolean | number
    /** Is dismissal of pull request reviews restricted. */
    restrictsReviewDismissals?: boolean | number
    /** A list review dismissal allowances for this branch protection rule. */
    reviewDismissalAllowances?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},ReviewDismissalAllowanceConnectionRequest] | ReviewDismissalAllowanceConnectionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A conflict between two branch protection rules. */
export interface BranchProtectionRuleConflictRequest{
    /** Identifies the branch protection rule. */
    branchProtectionRule?: BranchProtectionRuleRequest
    /** Identifies the conflicting branch protection rule. */
    conflictingBranchProtectionRule?: BranchProtectionRuleRequest
    /** Identifies the branch ref that has conflicting rules */
    ref?: RefRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for BranchProtectionRuleConflict. */
export interface BranchProtectionRuleConflictConnectionRequest{
    /** A list of edges. */
    edges?: BranchProtectionRuleConflictEdgeRequest
    /** A list of nodes. */
    nodes?: BranchProtectionRuleConflictRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface BranchProtectionRuleConflictEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: BranchProtectionRuleConflictRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for BranchProtectionRule. */
export interface BranchProtectionRuleConnectionRequest{
    /** A list of edges. */
    edges?: BranchProtectionRuleEdgeRequest
    /** A list of nodes. */
    nodes?: BranchProtectionRuleRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface BranchProtectionRuleEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: BranchProtectionRuleRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CancelEnterpriseAdminInvitation */
export interface CancelEnterpriseAdminInvitationInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the pending enterprise administrator invitation. */
invitationId: Scalars['ID']}


/** Autogenerated return type of CancelEnterpriseAdminInvitation */
export interface CancelEnterpriseAdminInvitationPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The invitation that was canceled. */
    invitation?: EnterpriseAdministratorInvitationRequest
    /** A message confirming the result of canceling an administrator invitation. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ChangeUserStatus */
export interface ChangeUserStatusInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The emoji to represent your status. Can either be a native Unicode emoji or an emoji name with colons, e.g., :grinning:. */
emoji?: (Scalars['String'] | null),
/** If set, the user status will not be shown after this date. */
expiresAt?: (Scalars['DateTime'] | null),
/** Whether this status should indicate you are not fully available on GitHub, e.g., you are away. */
limitedAvailability?: (Scalars['Boolean'] | null),
/** A short description of your current status. */
message?: (Scalars['String'] | null),
/**
 * The ID of the organization whose members will be allowed to see the status. If
 * omitted, the status will be publicly visible.
 */
organizationId?: (Scalars['ID'] | null)}


/** Autogenerated return type of ChangeUserStatus */
export interface ChangeUserStatusPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** Your updated status. */
    status?: UserStatusRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A single check annotation. */
export interface CheckAnnotationRequest{
    /** The annotation's severity level. */
    annotationLevel?: boolean | number
    /** The path to the file that this annotation was made on. */
    blobUrl?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The position of this annotation. */
    location?: CheckAnnotationSpanRequest
    /** The annotation's message. */
    message?: boolean | number
    /** The path that this annotation was made on. */
    path?: boolean | number
    /** Additional information about the annotation. */
    rawDetails?: boolean | number
    /** The annotation's title */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for CheckAnnotation. */
export interface CheckAnnotationConnectionRequest{
    /** A list of edges. */
    edges?: CheckAnnotationEdgeRequest
    /** A list of nodes. */
    nodes?: CheckAnnotationRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information from a check run analysis to specific lines of code. */
export interface CheckAnnotationData {
/** Represents an annotation's information level */
annotationLevel: CheckAnnotationLevel,
/** The location of the annotation */
location: CheckAnnotationRange,
/** A short description of the feedback for these lines of code. */
message: Scalars['String'],
/** The path of the file to add an annotation to. */
path: Scalars['String'],
/** Details about this annotation. */
rawDetails?: (Scalars['String'] | null),
/** The title that represents the annotation. */
title?: (Scalars['String'] | null)}


/** An edge in a connection. */
export interface CheckAnnotationEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: CheckAnnotationRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A character position in a check annotation. */
export interface CheckAnnotationPositionRequest{
    /** Column number (1 indexed). */
    column?: boolean | number
    /** Line number (1 indexed). */
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information from a check run analysis to specific lines of code. */
export interface CheckAnnotationRange {
/** The ending column of the range. */
endColumn?: (Scalars['Int'] | null),
/** The ending line of the range. */
endLine: Scalars['Int'],
/** The starting column of the range. */
startColumn?: (Scalars['Int'] | null),
/** The starting line of the range. */
startLine: Scalars['Int']}


/** An inclusive pair of positions for a check annotation. */
export interface CheckAnnotationSpanRequest{
    /** End position (inclusive). */
    end?: CheckAnnotationPositionRequest
    /** Start position (inclusive). */
    start?: CheckAnnotationPositionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A check run. */
export interface CheckRunRequest{
    /** The check run's annotations */
    annotations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},CheckAnnotationConnectionRequest] | CheckAnnotationConnectionRequest
    /** The check suite that this run is a part of. */
    checkSuite?: CheckSuiteRequest
    /** Identifies the date and time when the check run was completed. */
    completedAt?: boolean | number
    /** The conclusion of the check run. */
    conclusion?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The URL from which to find full details of the check run on the integrator's site. */
    detailsUrl?: boolean | number
    /** A reference for the check run on the integrator's system. */
    externalId?: boolean | number
    id?: boolean | number
    /** The name of the check for this check run. */
    name?: boolean | number
    /** The permalink to the check run summary. */
    permalink?: boolean | number
    /** The repository associated with this check run. */
    repository?: RepositoryRequest
    /** The HTTP path for this check run. */
    resourcePath?: boolean | number
    /** Identifies the date and time when the check run was started. */
    startedAt?: boolean | number
    /** The current status of the check run. */
    status?: boolean | number
    /** A string representing the check run's summary */
    summary?: boolean | number
    /** A string representing the check run's text */
    text?: boolean | number
    /** A string representing the check run */
    title?: boolean | number
    /** The HTTP URL for this check run. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Possible further actions the integrator can perform. */
export interface CheckRunAction {
/** A short explanation of what this action would do. */
description: Scalars['String'],
/** A reference for the action on the integrator's system. */
identifier: Scalars['String'],
/** The text to be displayed on a button in the web UI. */
label: Scalars['String']}


/** The connection type for CheckRun. */
export interface CheckRunConnectionRequest{
    /** A list of edges. */
    edges?: CheckRunEdgeRequest
    /** A list of nodes. */
    nodes?: CheckRunRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface CheckRunEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: CheckRunRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The filters that are available when fetching check runs. */
export interface CheckRunFilter {
/** Filters the check runs created by this application ID. */
appId?: (Scalars['Int'] | null),
/** Filters the check runs by this name. */
checkName?: (Scalars['String'] | null),
/** Filters the check runs by this type. */
checkType?: (CheckRunType | null),
/** Filters the check runs by this status. */
status?: (CheckStatusState | null)}


/** Descriptive details about the check run. */
export interface CheckRunOutput {
/** The annotations that are made as part of the check run. */
annotations?: (CheckAnnotationData[] | null),
/** Images attached to the check run output displayed in the GitHub pull request UI. */
images?: (CheckRunOutputImage[] | null),
/** The summary of the check run (supports Commonmark). */
summary: Scalars['String'],
/** The details of the check run (supports Commonmark). */
text?: (Scalars['String'] | null),
/** A title to provide for this check run. */
title: Scalars['String']}


/** Images attached to the check run output displayed in the GitHub pull request UI. */
export interface CheckRunOutputImage {
/** The alternative text for the image. */
alt: Scalars['String'],
/** A short image description. */
caption?: (Scalars['String'] | null),
/** The full URL of the image. */
imageUrl: Scalars['URI']}


/** A check suite. */
export interface CheckSuiteRequest{
    /** The GitHub App which created this check suite. */
    app?: AppRequest
    /** The name of the branch for this check suite. */
    branch?: RefRequest
    /** The check runs associated with a check suite. */
    checkRuns?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Filters the check runs by this type. */
    filterBy?: (CheckRunFilter | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},CheckRunConnectionRequest] | CheckRunConnectionRequest
    /** The commit for this check suite */
    commit?: CommitRequest
    /** The conclusion of this check suite. */
    conclusion?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** A list of open pull requests matching the check suite. */
    matchingPullRequests?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** The base ref name to filter the pull requests by. */
    baseRefName?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** The head ref name to filter the pull requests by. */
    headRefName?: (Scalars['String'] | null),
    /** A list of label names to filter the pull requests by. */
    labels?: (Scalars['String'][] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for pull requests returned from the connection. */
    orderBy?: (IssueOrder | null),
    /** A list of states to filter the pull requests by. */
    states?: (PullRequestState[] | null)},PullRequestConnectionRequest] | PullRequestConnectionRequest
    /** The push that triggered this check suite. */
    push?: PushRequest
    /** The repository associated with this check suite. */
    repository?: RepositoryRequest
    /** The HTTP path for this check suite */
    resourcePath?: boolean | number
    /** The status of this check suite. */
    status?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this check suite */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The auto-trigger preferences that are available for check suites. */
export interface CheckSuiteAutoTriggerPreference {
/** The node ID of the application that owns the check suite. */
appId: Scalars['ID'],
/** Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository. */
setting: Scalars['Boolean']}


/** The connection type for CheckSuite. */
export interface CheckSuiteConnectionRequest{
    /** A list of edges. */
    edges?: CheckSuiteEdgeRequest
    /** A list of nodes. */
    nodes?: CheckSuiteRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface CheckSuiteEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: CheckSuiteRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The filters that are available when fetching check suites. */
export interface CheckSuiteFilter {
/** Filters the check suites created by this application ID. */
appId?: (Scalars['Int'] | null),
/** Filters the check suites by this name. */
checkName?: (Scalars['String'] | null)}


/** Autogenerated input type of ClearLabelsFromLabelable */
export interface ClearLabelsFromLabelableInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The id of the labelable object to clear the labels from. */
labelableId: Scalars['ID']}


/** Autogenerated return type of ClearLabelsFromLabelable */
export interface ClearLabelsFromLabelablePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The item that was unlabeled. */
    labelable?: LabelableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CloneProject */
export interface CloneProjectInput {
/** The description of the project. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Whether or not to clone the source project's workflows. */
includeWorkflows: Scalars['Boolean'],
/** The name of the project. */
name: Scalars['String'],
/** The visibility of the project, defaults to false (private). */
public?: (Scalars['Boolean'] | null),
/** The source project to clone. */
sourceId: Scalars['ID'],
/** The owner ID to create the project under. */
targetOwnerId: Scalars['ID']}


/** Autogenerated return type of CloneProject */
export interface CloneProjectPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The id of the JobStatus for populating cloned fields. */
    jobStatusId?: boolean | number
    /** The new cloned project. */
    project?: ProjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CloneTemplateRepository */
export interface CloneTemplateRepositoryInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** A short description of the new repository. */
description?: (Scalars['String'] | null),
/**
 * Whether to copy all branches from the template to the new repository. Defaults
 * to copying only the default branch of the template.
 */
includeAllBranches?: (Scalars['Boolean'] | null),
/** The name of the new repository. */
name: Scalars['String'],
/** The ID of the owner for the new repository. */
ownerId: Scalars['ID'],
/** The Node ID of the template repository. */
repositoryId: Scalars['ID'],
/** Indicates the repository's visibility level. */
visibility: RepositoryVisibility}


/** Autogenerated return type of CloneTemplateRepository */
export interface CloneTemplateRepositoryPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new repository. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object that can be closed */
export interface ClosableRequest{
    /** `true` if the object is closed (definition of closed may depend on type) */
    closed?: boolean | number
    /** Identifies the date and time when the object was closed. */
    closedAt?: boolean | number
    on_Issue?: IssueRequest
    on_Milestone?: MilestoneRequest
    on_Project?: ProjectRequest
    on_PullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CloseIssue */
export interface CloseIssueInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** ID of the issue to be closed. */
issueId: Scalars['ID']}


/** Autogenerated return type of CloseIssue */
export interface CloseIssuePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The issue that was closed. */
    issue?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ClosePullRequest */
export interface ClosePullRequestInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** ID of the pull request to be closed. */
pullRequestId: Scalars['ID']}


/** Autogenerated return type of ClosePullRequest */
export interface ClosePullRequestPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The pull request that was closed. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'closed' event on any `Closable`. */
export interface ClosedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Object that was closed. */
    closable?: ClosableRequest
    /** Object which triggered the creation of this event. */
    closer?: CloserRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** The HTTP path for this closed event. */
    resourcePath?: boolean | number
    /** The HTTP URL for this closed event. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The object which triggered a `ClosedEvent`. */
export interface CloserRequest{
    on_Commit?:CommitRequest,
    on_PullRequest?:PullRequestRequest,
    on_GitObject?: GitObjectRequest,
    on_Node?: NodeRequest,
    on_Subscribable?: SubscribableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_Assignable?: AssignableRequest,
    on_Closable?: ClosableRequest,
    on_Comment?: CommentRequest,
    on_Labelable?: LabelableRequest,
    on_Lockable?: LockableRequest,
    on_Reactable?: ReactableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    __typename?: boolean | number
}


/** The Code of Conduct for a repository */
export interface CodeOfConductRequest{
    /** The body of the Code of Conduct */
    body?: boolean | number
    id?: boolean | number
    /** The key for the Code of Conduct */
    key?: boolean | number
    /** The formal name of the Code of Conduct */
    name?: boolean | number
    /** The HTTP path for this Code of Conduct */
    resourcePath?: boolean | number
    /** The HTTP URL for this Code of Conduct */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a comment. */
export interface CommentRequest{
    /** The actor who authored the comment. */
    author?: ActorRequest
    /** Author's association with the subject of the comment. */
    authorAssociation?: boolean | number
    /** The body as Markdown. */
    body?: boolean | number
    /** The body rendered to HTML. */
    bodyHTML?: boolean | number
    /** The body rendered to text. */
    bodyText?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Check if this comment was created via an email reply. */
    createdViaEmail?: boolean | number
    /** The actor who edited the comment. */
    editor?: ActorRequest
    id?: boolean | number
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit?: boolean | number
    /** The moment the editor made the last edit */
    lastEditedAt?: boolean | number
    /** Identifies when the comment was published at. */
    publishedAt?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** A list of edits to this content. */
    userContentEdits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserContentEditConnectionRequest] | UserContentEditConnectionRequest
    /** Did the viewer author this comment. */
    viewerDidAuthor?: boolean | number
    on_CommitComment?: CommitCommentRequest
    on_GistComment?: GistCommentRequest
    on_Issue?: IssueRequest
    on_IssueComment?: IssueCommentRequest
    on_PullRequest?: PullRequestRequest
    on_PullRequestReview?: PullRequestReviewRequest
    on_PullRequestReviewComment?: PullRequestReviewCommentRequest
    on_TeamDiscussion?: TeamDiscussionRequest
    on_TeamDiscussionComment?: TeamDiscussionCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'comment_deleted' event on a given issue or pull request. */
export interface CommentDeletedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Git commit. */
export interface CommitRequest{
    /** An abbreviated version of the Git object ID */
    abbreviatedOid?: boolean | number
    /** The number of additions in this commit. */
    additions?: boolean | number
    /** The pull requests associated with a commit */
    associatedPullRequests?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for pull requests. */
    orderBy?: (PullRequestOrder | null)},PullRequestConnectionRequest] | PullRequestConnectionRequest
    /** Authorship details of the commit. */
    author?: GitActorRequest
    /** Check if the committer and the author match. */
    authoredByCommitter?: boolean | number
    /** The datetime when this commit was authored. */
    authoredDate?: boolean | number
    /** Fetches `git blame` information. */
    blame?: [{
    /** The file whose Git blame information you want. */
    path: Scalars['String']},BlameRequest]
    /** The number of changed files in this commit. */
    changedFiles?: boolean | number
    /** The check suites associated with a commit. */
    checkSuites?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Filters the check suites by this type. */
    filterBy?: (CheckSuiteFilter | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},CheckSuiteConnectionRequest] | CheckSuiteConnectionRequest
    /** Comments made on the commit. */
    comments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},CommitCommentConnectionRequest] | CommitCommentConnectionRequest
    /** The HTTP path for this Git object */
    commitResourcePath?: boolean | number
    /** The HTTP URL for this Git object */
    commitUrl?: boolean | number
    /** The datetime when this commit was committed. */
    committedDate?: boolean | number
    /** Check if commited via GitHub web UI. */
    committedViaWeb?: boolean | number
    /** Committership details of the commit. */
    committer?: GitActorRequest
    /** The number of deletions in this commit. */
    deletions?: boolean | number
    /** The deployments associated with a commit. */
    deployments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Environments to list deployments for */
    environments?: (Scalars['String'][] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for deployments returned from the connection. */
    orderBy?: (DeploymentOrder | null)},DeploymentConnectionRequest] | DeploymentConnectionRequest
    /** The linear commit history starting from (and including) this commit, in the same order as `git log`. */
    history?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** If non-null, filters history to only show commits with matching authorship. */
    author?: (CommitAuthor | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** If non-null, filters history to only show commits touching files under this path. */
    path?: (Scalars['String'] | null),
    /** Allows specifying a beginning time or date for fetching commits. */
    since?: (Scalars['GitTimestamp'] | null),
    /** Allows specifying an ending time or date for fetching commits. */
    until?: (Scalars['GitTimestamp'] | null)},CommitHistoryConnectionRequest] | CommitHistoryConnectionRequest
    id?: boolean | number
    /** The Git commit message */
    message?: boolean | number
    /** The Git commit message body */
    messageBody?: boolean | number
    /** The commit message body rendered to HTML. */
    messageBodyHTML?: boolean | number
    /** The Git commit message headline */
    messageHeadline?: boolean | number
    /** The commit message headline rendered to HTML. */
    messageHeadlineHTML?: boolean | number
    /** The Git object ID */
    oid?: boolean | number
    /** The organization this commit was made on behalf of. */
    onBehalfOf?: OrganizationRequest
    /** The parents of a commit. */
    parents?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},CommitConnectionRequest] | CommitConnectionRequest
    /** The datetime when this commit was pushed. */
    pushedDate?: boolean | number
    /** The Repository this commit belongs to */
    repository?: RepositoryRequest
    /** The HTTP path for this commit */
    resourcePath?: boolean | number
    /** Commit signing information, if present. */
    signature?: GitSignatureRequest
    /** Status information for this commit */
    status?: StatusRequest
    /** Check and Status rollup information for this commit. */
    statusCheckRollup?: StatusCheckRollupRequest
    /** Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file. */
    submodules?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},SubmoduleConnectionRequest] | SubmoduleConnectionRequest
    /**
     * Returns a URL to download a tarball archive for a repository.
     * Note: For private repositories, these links are temporary and expire after five minutes.
     */
    tarballUrl?: boolean | number
    /** Commit's root Tree */
    tree?: TreeRequest
    /** The HTTP path for the tree of this commit */
    treeResourcePath?: boolean | number
    /** The HTTP URL for the tree of this commit */
    treeUrl?: boolean | number
    /** The HTTP URL for this commit */
    url?: boolean | number
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe?: boolean | number
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: boolean | number
    /**
     * Returns a URL to download a zipball archive for a repository.
     * Note: For private repositories, these links are temporary and expire after five minutes.
     */
    zipballUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Specifies an author for filtering Git commits. */
export interface CommitAuthor {
/** Email addresses to filter by. Commits authored by any of the specified email addresses will be returned. */
emails?: (Scalars['String'][] | null),
/**
 * ID of a User to filter by. If non-null, only commits authored by this user
 * will be returned. This field takes precedence over emails.
 */
id?: (Scalars['ID'] | null)}


/** Represents a comment on a given Commit. */
export interface CommitCommentRequest{
    /** The actor who authored the comment. */
    author?: ActorRequest
    /** Author's association with the subject of the comment. */
    authorAssociation?: boolean | number
    /** Identifies the comment body. */
    body?: boolean | number
    /** The body rendered to HTML. */
    bodyHTML?: boolean | number
    /** The body rendered to text. */
    bodyText?: boolean | number
    /** Identifies the commit associated with the comment, if the commit exists. */
    commit?: CommitRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Check if this comment was created via an email reply. */
    createdViaEmail?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The actor who edited the comment. */
    editor?: ActorRequest
    id?: boolean | number
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit?: boolean | number
    /** Returns whether or not a comment has been minimized. */
    isMinimized?: boolean | number
    /** The moment the editor made the last edit */
    lastEditedAt?: boolean | number
    /** Returns why the comment was minimized. */
    minimizedReason?: boolean | number
    /** Identifies the file path associated with the comment. */
    path?: boolean | number
    /** Identifies the line position associated with the comment. */
    position?: boolean | number
    /** Identifies when the comment was published at. */
    publishedAt?: boolean | number
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroupRequest
    /** A list of Reactions left on the Issue. */
    reactions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Allows filtering Reactions by emoji. */
    content?: (ReactionContent | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows specifying the order in which reactions are returned. */
    orderBy?: (ReactionOrder | null)},ReactionConnectionRequest] | ReactionConnectionRequest
    /** The repository associated with this node. */
    repository?: RepositoryRequest
    /** The HTTP path permalink for this commit comment. */
    resourcePath?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL permalink for this commit comment. */
    url?: boolean | number
    /** A list of edits to this content. */
    userContentEdits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserContentEditConnectionRequest] | UserContentEditConnectionRequest
    /** Check if the current viewer can delete this object. */
    viewerCanDelete?: boolean | number
    /** Check if the current viewer can minimize this object. */
    viewerCanMinimize?: boolean | number
    /** Can user react to this subject */
    viewerCanReact?: boolean | number
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons?: boolean | number
    /** Did the viewer author this comment. */
    viewerDidAuthor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for CommitComment. */
export interface CommitCommentConnectionRequest{
    /** A list of edges. */
    edges?: CommitCommentEdgeRequest
    /** A list of nodes. */
    nodes?: CommitCommentRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface CommitCommentEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: CommitCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A thread of comments on a commit. */
export interface CommitCommentThreadRequest{
    /** The comments that exist in this thread. */
    comments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},CommitCommentConnectionRequest] | CommitCommentConnectionRequest
    /** The commit the comments were made on. */
    commit?: CommitRequest
    id?: boolean | number
    /** The file the comments were made on. */
    path?: boolean | number
    /** The position in the diff for the commit that the comment was made on. */
    position?: boolean | number
    /** The repository associated with this node. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Commit. */
export interface CommitConnectionRequest{
    /** A list of edges. */
    edges?: CommitEdgeRequest
    /** A list of nodes. */
    nodes?: CommitRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for commit contribution connections. */
export interface CommitContributionOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field by which to order commit contributions. */
field: CommitContributionOrderField}


/** This aggregates commits made by a user within one repository. */
export interface CommitContributionsByRepositoryRequest{
    /** The commit contributions, each representing a day. */
    contributions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for commit contributions returned from the connection. */
    orderBy?: (CommitContributionOrder | null)},CreatedCommitContributionConnectionRequest] | CreatedCommitContributionConnectionRequest
    /** The repository in which the commits were made. */
    repository?: RepositoryRequest
    /** The HTTP path for the user's commits to the repository in this time range. */
    resourcePath?: boolean | number
    /** The HTTP URL for the user's commits to the repository in this time range. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface CommitEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: CommitRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Commit. */
export interface CommitHistoryConnectionRequest{
    /** A list of edges. */
    edges?: CommitEdgeRequest
    /** A list of nodes. */
    nodes?: CommitRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'connected' event on a given issue or pull request. */
export interface ConnectedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Reference originated in a different repository. */
    isCrossRepository?: boolean | number
    /** Issue or pull request that made the reference. */
    source?: ReferencedSubjectRequest
    /** Issue or pull request which was connected. */
    subject?: ReferencedSubjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A content attachment */
export interface ContentAttachmentRequest{
    /** The body text of the content attachment. This parameter supports markdown. */
    body?: boolean | number
    /** The content reference that the content attachment is attached to. */
    contentReference?: ContentReferenceRequest
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** The title of the content attachment. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A content reference */
export interface ContentReferenceRequest{
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** The reference of the content reference. */
    reference?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a contribution a user made on GitHub, such as opening an issue. */
export interface ContributionRequest{
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted?: boolean | number
    /** When this contribution was made. */
    occurredAt?: boolean | number
    /** The HTTP path for this contribution. */
    resourcePath?: boolean | number
    /** The HTTP URL for this contribution. */
    url?: boolean | number
    /** The user who made this contribution. */
    user?: UserRequest
    on_CreatedCommitContribution?: CreatedCommitContributionRequest
    on_CreatedIssueContribution?: CreatedIssueContributionRequest
    on_CreatedPullRequestContribution?: CreatedPullRequestContributionRequest
    on_CreatedPullRequestReviewContribution?: CreatedPullRequestReviewContributionRequest
    on_CreatedRepositoryContribution?: CreatedRepositoryContributionRequest
    on_JoinedGitHubContribution?: JoinedGitHubContributionRequest
    on_RestrictedContribution?: RestrictedContributionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A calendar of contributions made on GitHub by a user. */
export interface ContributionCalendarRequest{
    /** A list of hex color codes used in this calendar. The darker the color, the more contributions it represents. */
    colors?: boolean | number
    /** Determine if the color set was chosen because it's currently Halloween. */
    isHalloween?: boolean | number
    /** A list of the months of contributions in this calendar. */
    months?: ContributionCalendarMonthRequest
    /** The count of total contributions in the calendar. */
    totalContributions?: boolean | number
    /** A list of the weeks of contributions in this calendar. */
    weeks?: ContributionCalendarWeekRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a single day of contributions on GitHub by a user. */
export interface ContributionCalendarDayRequest{
    /** The hex color code that represents how many contributions were made on this day compared to others in the calendar. */
    color?: boolean | number
    /** How many contributions were made by the user on this day. */
    contributionCount?: boolean | number
    /** The day this square represents. */
    date?: boolean | number
    /** A number representing which day of the week this square represents, e.g., 1 is Monday. */
    weekday?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A month of contributions in a user's contribution graph. */
export interface ContributionCalendarMonthRequest{
    /** The date of the first day of this month. */
    firstDay?: boolean | number
    /** The name of the month. */
    name?: boolean | number
    /** How many weeks started in this month. */
    totalWeeks?: boolean | number
    /** The year the month occurred in. */
    year?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A week of contributions in a user's contribution graph. */
export interface ContributionCalendarWeekRequest{
    /** The days of contributions in this week. */
    contributionDays?: ContributionCalendarDayRequest
    /** The date of the earliest square in this week. */
    firstDay?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for contribution connections. */
export interface ContributionOrder {
/** The ordering direction. */
direction: OrderDirection}


/** A contributions collection aggregates contributions such as opened issues and commits created by a user. */
export interface ContributionsCollectionRequest{
    /** Commit contributions made by the user, grouped by repository. */
    commitContributionsByRepository?: [{
    /** How many repositories should be included. */
    maxRepositories?: (Scalars['Int'] | null)},CommitContributionsByRepositoryRequest] | CommitContributionsByRepositoryRequest
    /** A calendar of this user's contributions on GitHub. */
    contributionCalendar?: ContributionCalendarRequest
    /** The years the user has been making contributions with the most recent year first. */
    contributionYears?: boolean | number
    /** Determine if this collection's time span ends in the current month. */
    doesEndInCurrentMonth?: boolean | number
    /**
     * The date of the first restricted contribution the user made in this time
     * period. Can only be non-null when the user has enabled private contribution counts.
     */
    earliestRestrictedContributionDate?: boolean | number
    /** The ending date and time of this collection. */
    endedAt?: boolean | number
    /**
     * The first issue the user opened on GitHub. This will be null if that issue was
     * opened outside the collection's time range and ignoreTimeRange is false. If
     * the issue is not visible but the user has opted to show private contributions,
     * a RestrictedContribution will be returned.
     */
    firstIssueContribution?: CreatedIssueOrRestrictedContributionRequest
    /**
     * The first pull request the user opened on GitHub. This will be null if that
     * pull request was opened outside the collection's time range and
     * ignoreTimeRange is not true. If the pull request is not visible but the user
     * has opted to show private contributions, a RestrictedContribution will be returned.
     */
    firstPullRequestContribution?: CreatedPullRequestOrRestrictedContributionRequest
    /**
     * The first repository the user created on GitHub. This will be null if that
     * first repository was created outside the collection's time range and
     * ignoreTimeRange is false. If the repository is not visible, then a
     * RestrictedContribution is returned.
     */
    firstRepositoryContribution?: CreatedRepositoryOrRestrictedContributionRequest
    /** Does the user have any more activity in the timeline that occurred prior to the collection's time range? */
    hasActivityInThePast?: boolean | number
    /** Determine if there are any contributions in this collection. */
    hasAnyContributions?: boolean | number
    /**
     * Determine if the user made any contributions in this time frame whose details
     * are not visible because they were made in a private repository. Can only be
     * true if the user enabled private contribution counts.
     */
    hasAnyRestrictedContributions?: boolean | number
    /** Whether or not the collector's time span is all within the same day. */
    isSingleDay?: boolean | number
    /** A list of issues the user opened. */
    issueContributions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Should the user's first issue ever be excluded from the result. */
    excludeFirst?: (Scalars['Boolean'] | null),
    /** Should the user's most commented issue be excluded from the result. */
    excludePopular?: (Scalars['Boolean'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for contributions returned from the connection. */
    orderBy?: (ContributionOrder | null)},CreatedIssueContributionConnectionRequest] | CreatedIssueContributionConnectionRequest
    /** Issue contributions made by the user, grouped by repository. */
    issueContributionsByRepository?: [{
    /** Should the user's first issue ever be excluded from the result. */
    excludeFirst?: (Scalars['Boolean'] | null),
    /** Should the user's most commented issue be excluded from the result. */
    excludePopular?: (Scalars['Boolean'] | null),
    /** How many repositories should be included. */
    maxRepositories?: (Scalars['Int'] | null)},IssueContributionsByRepositoryRequest] | IssueContributionsByRepositoryRequest
    /**
     * When the user signed up for GitHub. This will be null if that sign up date
     * falls outside the collection's time range and ignoreTimeRange is false.
     */
    joinedGitHubContribution?: JoinedGitHubContributionRequest
    /**
     * The date of the most recent restricted contribution the user made in this time
     * period. Can only be non-null when the user has enabled private contribution counts.
     */
    latestRestrictedContributionDate?: boolean | number
    /**
     * When this collection's time range does not include any activity from the user, use this
     * to get a different collection from an earlier time range that does have activity.
     */
    mostRecentCollectionWithActivity?: ContributionsCollectionRequest
    /**
     * Returns a different contributions collection from an earlier time range than this one
     * that does not have any contributions.
     */
    mostRecentCollectionWithoutActivity?: ContributionsCollectionRequest
    /**
     * The issue the user opened on GitHub that received the most comments in the specified
     * time frame.
     */
    popularIssueContribution?: CreatedIssueContributionRequest
    /**
     * The pull request the user opened on GitHub that received the most comments in the
     * specified time frame.
     */
    popularPullRequestContribution?: CreatedPullRequestContributionRequest
    /** Pull request contributions made by the user. */
    pullRequestContributions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Should the user's first pull request ever be excluded from the result. */
    excludeFirst?: (Scalars['Boolean'] | null),
    /** Should the user's most commented pull request be excluded from the result. */
    excludePopular?: (Scalars['Boolean'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for contributions returned from the connection. */
    orderBy?: (ContributionOrder | null)},CreatedPullRequestContributionConnectionRequest] | CreatedPullRequestContributionConnectionRequest
    /** Pull request contributions made by the user, grouped by repository. */
    pullRequestContributionsByRepository?: [{
    /** Should the user's first pull request ever be excluded from the result. */
    excludeFirst?: (Scalars['Boolean'] | null),
    /** Should the user's most commented pull request be excluded from the result. */
    excludePopular?: (Scalars['Boolean'] | null),
    /** How many repositories should be included. */
    maxRepositories?: (Scalars['Int'] | null)},PullRequestContributionsByRepositoryRequest] | PullRequestContributionsByRepositoryRequest
    /** Pull request review contributions made by the user. */
    pullRequestReviewContributions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for contributions returned from the connection. */
    orderBy?: (ContributionOrder | null)},CreatedPullRequestReviewContributionConnectionRequest] | CreatedPullRequestReviewContributionConnectionRequest
    /** Pull request review contributions made by the user, grouped by repository. */
    pullRequestReviewContributionsByRepository?: [{
    /** How many repositories should be included. */
    maxRepositories?: (Scalars['Int'] | null)},PullRequestReviewContributionsByRepositoryRequest] | PullRequestReviewContributionsByRepositoryRequest
    /** A list of repositories owned by the user that the user created in this time range. */
    repositoryContributions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Should the user's first repository ever be excluded from the result. */
    excludeFirst?: (Scalars['Boolean'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for contributions returned from the connection. */
    orderBy?: (ContributionOrder | null)},CreatedRepositoryContributionConnectionRequest] | CreatedRepositoryContributionConnectionRequest
    /**
     * A count of contributions made by the user that the viewer cannot access. Only
     * non-zero when the user has chosen to share their private contribution counts.
     */
    restrictedContributionsCount?: boolean | number
    /** The beginning date and time of this collection. */
    startedAt?: boolean | number
    /** How many commits were made by the user in this time span. */
    totalCommitContributions?: boolean | number
    /** How many issues the user opened. */
    totalIssueContributions?: [{
    /** Should the user's first issue ever be excluded from this count. */
    excludeFirst?: (Scalars['Boolean'] | null),
    /** Should the user's most commented issue be excluded from this count. */
    excludePopular?: (Scalars['Boolean'] | null)}] | boolean | number
    /** How many pull requests the user opened. */
    totalPullRequestContributions?: [{
    /** Should the user's first pull request ever be excluded from this count. */
    excludeFirst?: (Scalars['Boolean'] | null),
    /** Should the user's most commented pull request be excluded from this count. */
    excludePopular?: (Scalars['Boolean'] | null)}] | boolean | number
    /** How many pull request reviews the user left. */
    totalPullRequestReviewContributions?: boolean | number
    /** How many different repositories the user committed to. */
    totalRepositoriesWithContributedCommits?: boolean | number
    /** How many different repositories the user opened issues in. */
    totalRepositoriesWithContributedIssues?: [{
    /** Should the user's first issue ever be excluded from this count. */
    excludeFirst?: (Scalars['Boolean'] | null),
    /** Should the user's most commented issue be excluded from this count. */
    excludePopular?: (Scalars['Boolean'] | null)}] | boolean | number
    /** How many different repositories the user left pull request reviews in. */
    totalRepositoriesWithContributedPullRequestReviews?: boolean | number
    /** How many different repositories the user opened pull requests in. */
    totalRepositoriesWithContributedPullRequests?: [{
    /** Should the user's first pull request ever be excluded from this count. */
    excludeFirst?: (Scalars['Boolean'] | null),
    /** Should the user's most commented pull request be excluded from this count. */
    excludePopular?: (Scalars['Boolean'] | null)}] | boolean | number
    /** How many repositories the user created. */
    totalRepositoryContributions?: [{
    /** Should the user's first repository ever be excluded from this count. */
    excludeFirst?: (Scalars['Boolean'] | null)}] | boolean | number
    /** The user who made the contributions in this collection. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ConvertProjectCardNoteToIssue */
export interface ConvertProjectCardNoteToIssueInput {
/** The body of the newly created issue. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ProjectCard ID to convert. */
projectCardId: Scalars['ID'],
/** The ID of the repository to create the issue in. */
repositoryId: Scalars['ID'],
/** The title of the newly created issue. Defaults to the card's note text. */
title?: (Scalars['String'] | null)}


/** Autogenerated return type of ConvertProjectCardNoteToIssue */
export interface ConvertProjectCardNoteToIssuePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated ProjectCard. */
    projectCard?: ProjectCardRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'convert_to_draft' event on a given pull request. */
export interface ConvertToDraftEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    /** The HTTP path for this convert to draft event. */
    resourcePath?: boolean | number
    /** The HTTP URL for this convert to draft event. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'converted_note_to_issue' event on a given issue or pull request. */
export interface ConvertedNoteToIssueEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** Project referenced by event. */
    project?: ProjectRequest
    /** Project card referenced by this project event. */
    projectCard?: ProjectCardRequest
    /** Column name referenced by this project event. */
    projectColumnName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateBranchProtectionRule */
export interface CreateBranchProtectionRuleInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Will new commits pushed to matching branches dismiss pull request review approvals. */
dismissesStaleReviews?: (Scalars['Boolean'] | null),
/** Can admins overwrite branch protection. */
isAdminEnforced?: (Scalars['Boolean'] | null),
/** The glob-like pattern used to determine matching branches. */
pattern: Scalars['String'],
/** A list of User, Team or App IDs allowed to push to matching branches. */
pushActorIds?: (Scalars['ID'][] | null),
/** The global relay id of the repository in which a new branch protection rule should be created in. */
repositoryId: Scalars['ID'],
/** Number of approving reviews required to update matching branches. */
requiredApprovingReviewCount?: (Scalars['Int'] | null),
/** List of required status check contexts that must pass for commits to be accepted to matching branches. */
requiredStatusCheckContexts?: (Scalars['String'][] | null),
/** Are approving reviews required to update matching branches. */
requiresApprovingReviews?: (Scalars['Boolean'] | null),
/** Are reviews from code owners required to update matching branches. */
requiresCodeOwnerReviews?: (Scalars['Boolean'] | null),
/** Are commits required to be signed. */
requiresCommitSignatures?: (Scalars['Boolean'] | null),
/** Are status checks required to update matching branches. */
requiresStatusChecks?: (Scalars['Boolean'] | null),
/** Are branches required to be up to date before merging. */
requiresStrictStatusChecks?: (Scalars['Boolean'] | null),
/** Is pushing to matching branches restricted. */
restrictsPushes?: (Scalars['Boolean'] | null),
/** Is dismissal of pull request reviews restricted. */
restrictsReviewDismissals?: (Scalars['Boolean'] | null),
/** A list of User or Team IDs allowed to dismiss reviews on pull requests targeting matching branches. */
reviewDismissalActorIds?: (Scalars['ID'][] | null)}


/** Autogenerated return type of CreateBranchProtectionRule */
export interface CreateBranchProtectionRulePayloadRequest{
    /** The newly created BranchProtectionRule. */
    branchProtectionRule?: BranchProtectionRuleRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateCheckRun */
export interface CreateCheckRunInput {
/** Possible further actions the integrator can perform, which a user may trigger. */
actions?: (CheckRunAction[] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The time that the check run finished. */
completedAt?: (Scalars['DateTime'] | null),
/** The final conclusion of the check. */
conclusion?: (CheckConclusionState | null),
/** The URL of the integrator's site that has the full details of the check. */
detailsUrl?: (Scalars['URI'] | null),
/** A reference for the run on the integrator's system. */
externalId?: (Scalars['String'] | null),
/** The SHA of the head commit. */
headSha: Scalars['GitObjectID'],
/** The name of the check. */
name: Scalars['String'],
/** Descriptive details about the run. */
output?: (CheckRunOutput | null),
/** The node ID of the repository. */
repositoryId: Scalars['ID'],
/** The time that the check run began. */
startedAt?: (Scalars['DateTime'] | null),
/** The current status. */
status?: (RequestableCheckStatusState | null)}


/** Autogenerated return type of CreateCheckRun */
export interface CreateCheckRunPayloadRequest{
    /** The newly created check run. */
    checkRun?: CheckRunRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateCheckSuite */
export interface CreateCheckSuiteInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The SHA of the head commit. */
headSha: Scalars['GitObjectID'],
/** The Node ID of the repository. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of CreateCheckSuite */
export interface CreateCheckSuitePayloadRequest{
    /** The newly created check suite. */
    checkSuite?: CheckSuiteRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateContentAttachment */
export interface CreateContentAttachmentInput {
/** The body of the content attachment, which may contain markdown. */
body: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The node ID of the content_reference. */
contentReferenceId: Scalars['ID'],
/** The title of the content attachment. */
title: Scalars['String']}


/** Autogenerated return type of CreateContentAttachment */
export interface CreateContentAttachmentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The newly created content attachment. */
    contentAttachment?: ContentAttachmentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateDeployment */
export interface CreateDeploymentInput {
/** Attempt to automatically merge the default branch into the requested ref, defaults to true. */
autoMerge?: (Scalars['Boolean'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Short description of the deployment. */
description?: (Scalars['String'] | null),
/** Name for the target deployment environment. */
environment?: (Scalars['String'] | null),
/** JSON payload with extra information about the deployment. */
payload?: (Scalars['String'] | null),
/** The node ID of the ref to be deployed. */
refId: Scalars['ID'],
/** The node ID of the repository. */
repositoryId: Scalars['ID'],
/**
 * The status contexts to verify against commit status checks. To bypass required
 * contexts, pass an empty array. Defaults to all unique contexts.
 */
requiredContexts?: (Scalars['String'][] | null),
/** Specifies a task to execute. */
task?: (Scalars['String'] | null)}


/** Autogenerated return type of CreateDeployment */
export interface CreateDeploymentPayloadRequest{
    /** True if the default branch has been auto-merged into the deployment ref. */
    autoMerged?: boolean | number
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new deployment. */
    deployment?: DeploymentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateDeploymentStatus */
export interface CreateDeploymentStatusInput {
/**
 * Adds a new inactive status to all non-transient, non-production environment
 * deployments with the same repository and environment name as the created
 * status's deployment.
 */
autoInactive?: (Scalars['Boolean'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The node ID of the deployment. */
deploymentId: Scalars['ID'],
/** A short description of the status. Maximum length of 140 characters. */
description?: (Scalars['String'] | null),
/** If provided, updates the environment of the deploy. Otherwise, does not modify the environment. */
environment?: (Scalars['String'] | null),
/** Sets the URL for accessing your environment. */
environmentUrl?: (Scalars['String'] | null),
/**
 * The log URL to associate with this status.       This URL should contain
 * output to keep the user updated while the task is running       or serve as
 * historical information for what happened in the deployment.
 */
logUrl?: (Scalars['String'] | null),
/** The state of the deployment. */
state: DeploymentStatusState}


/** Autogenerated return type of CreateDeploymentStatus */
export interface CreateDeploymentStatusPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new deployment status. */
    deploymentStatus?: DeploymentStatusRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateEnterpriseOrganization */
export interface CreateEnterpriseOrganizationInput {
/** The logins for the administrators of the new organization. */
adminLogins: Scalars['String'][],
/** The email used for sending billing receipts. */
billingEmail: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise owning the new organization. */
enterpriseId: Scalars['ID'],
/** The login of the new organization. */
login: Scalars['String'],
/** The profile name of the new organization. */
profileName: Scalars['String']}


/** Autogenerated return type of CreateEnterpriseOrganization */
export interface CreateEnterpriseOrganizationPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise that owns the created organization. */
    enterprise?: EnterpriseRequest
    /** The organization that was created. */
    organization?: OrganizationRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateIpAllowListEntry */
export interface CreateIpAllowListEntryInput {
/** An IP address or range of addresses in CIDR notation. */
allowListValue: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Whether the IP allow list entry is active when an IP allow list is enabled. */
isActive: Scalars['Boolean'],
/** An optional name for the IP allow list entry. */
name?: (Scalars['String'] | null),
/** The ID of the owner for which to create the new IP allow list entry. */
ownerId: Scalars['ID']}


/** Autogenerated return type of CreateIpAllowListEntry */
export interface CreateIpAllowListEntryPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The IP allow list entry that was created. */
    ipAllowListEntry?: IpAllowListEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateIssue */
export interface CreateIssueInput {
/** The Node ID for the user assignee for this issue. */
assigneeIds?: (Scalars['ID'][] | null),
/** The body for the issue description. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** An array of Node IDs of labels for this issue. */
labelIds?: (Scalars['ID'][] | null),
/** The Node ID of the milestone for this issue. */
milestoneId?: (Scalars['ID'] | null),
/** An array of Node IDs for projects associated with this issue. */
projectIds?: (Scalars['ID'][] | null),
/** The Node ID of the repository. */
repositoryId: Scalars['ID'],
/** The title for the issue. */
title: Scalars['String']}


/** Autogenerated return type of CreateIssue */
export interface CreateIssuePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new issue. */
    issue?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateLabel */
export interface CreateLabelInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** A 6 character hex code, without the leading #, identifying the color of the label. */
color: Scalars['String'],
/** A brief description of the label, such as its purpose. */
description?: (Scalars['String'] | null),
/** The name of the label. */
name: Scalars['String'],
/** The Node ID of the repository. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of CreateLabel */
export interface CreateLabelPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new label. */
    label?: LabelRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateProject */
export interface CreateProjectInput {
/** The description of project. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The name of project. */
name: Scalars['String'],
/** The owner ID to create the project under. */
ownerId: Scalars['ID'],
/** A list of repository IDs to create as linked repositories for the project */
repositoryIds?: (Scalars['ID'][] | null),
/** The name of the GitHub-provided template. */
template?: (ProjectTemplate | null)}


/** Autogenerated return type of CreateProject */
export interface CreateProjectPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new project. */
    project?: ProjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreatePullRequest */
export interface CreatePullRequestInput {
/**
 * The name of the branch you want your changes pulled into. This should be an existing branch
 * on the current repository. You cannot update the base branch on a pull request to point
 * to another repository.
 */
baseRefName: Scalars['String'],
/** The contents of the pull request. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Indicates whether this pull request should be a draft. */
draft?: (Scalars['Boolean'] | null),
/**
 * The name of the branch where your changes are implemented. For cross-repository pull requests
 * in the same network, namespace `head_ref_name` with a user like this: `username:branch`.
 */
headRefName: Scalars['String'],
/** Indicates whether maintainers can modify the pull request. */
maintainerCanModify?: (Scalars['Boolean'] | null),
/** The Node ID of the repository. */
repositoryId: Scalars['ID'],
/** The title of the pull request. */
title: Scalars['String']}


/** Autogenerated return type of CreatePullRequest */
export interface CreatePullRequestPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new pull request. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateRef */
export interface CreateRefInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The fully qualified name of the new Ref (ie: `refs/heads/my_new_branch`). */
name: Scalars['String'],
/** The GitObjectID that the new Ref shall target. Must point to a commit. */
oid: Scalars['GitObjectID'],
/** The Node ID of the Repository to create the Ref in. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of CreateRef */
export interface CreateRefPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The newly created ref. */
    ref?: RefRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateRepository */
export interface CreateRepositoryInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** A short description of the new repository. */
description?: (Scalars['String'] | null),
/** Indicates if the repository should have the issues feature enabled. */
hasIssuesEnabled?: (Scalars['Boolean'] | null),
/** Indicates if the repository should have the wiki feature enabled. */
hasWikiEnabled?: (Scalars['Boolean'] | null),
/** The URL for a web page about this repository. */
homepageUrl?: (Scalars['URI'] | null),
/** The name of the new repository. */
name: Scalars['String'],
/** The ID of the owner for the new repository. */
ownerId?: (Scalars['ID'] | null),
/**
 * When an organization is specified as the owner, this ID identifies the team
 * that should be granted access to the new repository.
 */
teamId?: (Scalars['ID'] | null),
/**
 * Whether this repository should be marked as a template such that anyone who
 * can access it can create new repositories with the same files and directory structure.
 */
template?: (Scalars['Boolean'] | null),
/** Indicates the repository's visibility level. */
visibility: RepositoryVisibility}


/** Autogenerated return type of CreateRepository */
export interface CreateRepositoryPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new repository. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateTeamDiscussionComment */
export interface CreateTeamDiscussionCommentInput {
/** The content of the comment. */
body: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the discussion to which the comment belongs. */
discussionId: Scalars['ID']}


/** Autogenerated return type of CreateTeamDiscussionComment */
export interface CreateTeamDiscussionCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new comment. */
    teamDiscussionComment?: TeamDiscussionCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateTeamDiscussion */
export interface CreateTeamDiscussionInput {
/** The content of the discussion. */
body: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/**
 * If true, restricts the visiblity of this discussion to team members and
 * organization admins. If false or not specified, allows any organization member
 * to view this discussion.
 */
private?: (Scalars['Boolean'] | null),
/** The ID of the team to which the discussion belongs. */
teamId: Scalars['ID'],
/** The title of the discussion. */
title: Scalars['String']}


/** Autogenerated return type of CreateTeamDiscussion */
export interface CreateTeamDiscussionPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new discussion. */
    teamDiscussion?: TeamDiscussionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the contribution a user made by committing to a repository. */
export interface CreatedCommitContributionRequest{
    /** How many commits were made on this day to this repository by the user. */
    commitCount?: boolean | number
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted?: boolean | number
    /** When this contribution was made. */
    occurredAt?: boolean | number
    /** The repository the user made a commit in. */
    repository?: RepositoryRequest
    /** The HTTP path for this contribution. */
    resourcePath?: boolean | number
    /** The HTTP URL for this contribution. */
    url?: boolean | number
    /** The user who made this contribution. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for CreatedCommitContribution. */
export interface CreatedCommitContributionConnectionRequest{
    /** A list of edges. */
    edges?: CreatedCommitContributionEdgeRequest
    /** A list of nodes. */
    nodes?: CreatedCommitContributionRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of commits across days and repositories in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface CreatedCommitContributionEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: CreatedCommitContributionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the contribution a user made on GitHub by opening an issue. */
export interface CreatedIssueContributionRequest{
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted?: boolean | number
    /** The issue that was opened. */
    issue?: IssueRequest
    /** When this contribution was made. */
    occurredAt?: boolean | number
    /** The HTTP path for this contribution. */
    resourcePath?: boolean | number
    /** The HTTP URL for this contribution. */
    url?: boolean | number
    /** The user who made this contribution. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for CreatedIssueContribution. */
export interface CreatedIssueContributionConnectionRequest{
    /** A list of edges. */
    edges?: CreatedIssueContributionEdgeRequest
    /** A list of nodes. */
    nodes?: CreatedIssueContributionRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface CreatedIssueContributionEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: CreatedIssueContributionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents either a issue the viewer can access or a restricted contribution. */
export interface CreatedIssueOrRestrictedContributionRequest{
    on_CreatedIssueContribution?:CreatedIssueContributionRequest,
    on_RestrictedContribution?:RestrictedContributionRequest,
    on_Contribution?: ContributionRequest,
    __typename?: boolean | number
}


/** Represents the contribution a user made on GitHub by opening a pull request. */
export interface CreatedPullRequestContributionRequest{
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted?: boolean | number
    /** When this contribution was made. */
    occurredAt?: boolean | number
    /** The pull request that was opened. */
    pullRequest?: PullRequestRequest
    /** The HTTP path for this contribution. */
    resourcePath?: boolean | number
    /** The HTTP URL for this contribution. */
    url?: boolean | number
    /** The user who made this contribution. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for CreatedPullRequestContribution. */
export interface CreatedPullRequestContributionConnectionRequest{
    /** A list of edges. */
    edges?: CreatedPullRequestContributionEdgeRequest
    /** A list of nodes. */
    nodes?: CreatedPullRequestContributionRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface CreatedPullRequestContributionEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: CreatedPullRequestContributionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents either a pull request the viewer can access or a restricted contribution. */
export interface CreatedPullRequestOrRestrictedContributionRequest{
    on_CreatedPullRequestContribution?:CreatedPullRequestContributionRequest,
    on_RestrictedContribution?:RestrictedContributionRequest,
    on_Contribution?: ContributionRequest,
    __typename?: boolean | number
}


/** Represents the contribution a user made by leaving a review on a pull request. */
export interface CreatedPullRequestReviewContributionRequest{
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted?: boolean | number
    /** When this contribution was made. */
    occurredAt?: boolean | number
    /** The pull request the user reviewed. */
    pullRequest?: PullRequestRequest
    /** The review the user left on the pull request. */
    pullRequestReview?: PullRequestReviewRequest
    /** The repository containing the pull request that the user reviewed. */
    repository?: RepositoryRequest
    /** The HTTP path for this contribution. */
    resourcePath?: boolean | number
    /** The HTTP URL for this contribution. */
    url?: boolean | number
    /** The user who made this contribution. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for CreatedPullRequestReviewContribution. */
export interface CreatedPullRequestReviewContributionConnectionRequest{
    /** A list of edges. */
    edges?: CreatedPullRequestReviewContributionEdgeRequest
    /** A list of nodes. */
    nodes?: CreatedPullRequestReviewContributionRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface CreatedPullRequestReviewContributionEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: CreatedPullRequestReviewContributionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the contribution a user made on GitHub by creating a repository. */
export interface CreatedRepositoryContributionRequest{
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted?: boolean | number
    /** When this contribution was made. */
    occurredAt?: boolean | number
    /** The repository that was created. */
    repository?: RepositoryRequest
    /** The HTTP path for this contribution. */
    resourcePath?: boolean | number
    /** The HTTP URL for this contribution. */
    url?: boolean | number
    /** The user who made this contribution. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for CreatedRepositoryContribution. */
export interface CreatedRepositoryContributionConnectionRequest{
    /** A list of edges. */
    edges?: CreatedRepositoryContributionEdgeRequest
    /** A list of nodes. */
    nodes?: CreatedRepositoryContributionRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface CreatedRepositoryContributionEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: CreatedRepositoryContributionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents either a repository the viewer can access or a restricted contribution. */
export interface CreatedRepositoryOrRestrictedContributionRequest{
    on_CreatedRepositoryContribution?:CreatedRepositoryContributionRequest,
    on_RestrictedContribution?:RestrictedContributionRequest,
    on_Contribution?: ContributionRequest,
    __typename?: boolean | number
}


/** Represents a mention made by one issue or pull request to another. */
export interface CrossReferencedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Reference originated in a different repository. */
    isCrossRepository?: boolean | number
    /** Identifies when the reference was made. */
    referencedAt?: boolean | number
    /** The HTTP path for this pull request. */
    resourcePath?: boolean | number
    /** Issue or pull request that made the reference. */
    source?: ReferencedSubjectRequest
    /** Issue or pull request to which the reference was made. */
    target?: ReferencedSubjectRequest
    /** The HTTP URL for this pull request. */
    url?: boolean | number
    /** Checks if the target will be closed when the source is merged. */
    willCloseTarget?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeclineTopicSuggestion */
export interface DeclineTopicSuggestionInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The name of the suggested topic. */
name: Scalars['String'],
/** The reason why the suggested topic is declined. */
reason: TopicSuggestionDeclineReason,
/** The Node ID of the repository. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of DeclineTopicSuggestion */
export interface DeclineTopicSuggestionPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The declined topic. */
    topic?: TopicRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Entities that can be deleted. */
export interface DeletableRequest{
    /** Check if the current viewer can delete this object. */
    viewerCanDelete?: boolean | number
    on_CommitComment?: CommitCommentRequest
    on_GistComment?: GistCommentRequest
    on_IssueComment?: IssueCommentRequest
    on_PullRequestReview?: PullRequestReviewRequest
    on_PullRequestReviewComment?: PullRequestReviewCommentRequest
    on_TeamDiscussion?: TeamDiscussionRequest
    on_TeamDiscussionComment?: TeamDiscussionCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteBranchProtectionRule */
export interface DeleteBranchProtectionRuleInput {
/** The global relay id of the branch protection rule to be deleted. */
branchProtectionRuleId: Scalars['ID'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null)}


/** Autogenerated return type of DeleteBranchProtectionRule */
export interface DeleteBranchProtectionRulePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteDeployment */
export interface DeleteDeploymentInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the deployment to be deleted. */
id: Scalars['ID']}


/** Autogenerated return type of DeleteDeployment */
export interface DeleteDeploymentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteIpAllowListEntry */
export interface DeleteIpAllowListEntryInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the IP allow list entry to delete. */
ipAllowListEntryId: Scalars['ID']}


/** Autogenerated return type of DeleteIpAllowListEntry */
export interface DeleteIpAllowListEntryPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The IP allow list entry that was deleted. */
    ipAllowListEntry?: IpAllowListEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteIssueComment */
export interface DeleteIssueCommentInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the comment to delete. */
id: Scalars['ID']}


/** Autogenerated return type of DeleteIssueComment */
export interface DeleteIssueCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteIssue */
export interface DeleteIssueInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the issue to delete. */
issueId: Scalars['ID']}


/** Autogenerated return type of DeleteIssue */
export interface DeleteIssuePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The repository the issue belonged to */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteLabel */
export interface DeleteLabelInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the label to be deleted. */
id: Scalars['ID']}


/** Autogenerated return type of DeleteLabel */
export interface DeleteLabelPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeletePackageVersion */
export interface DeletePackageVersionInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the package version to be deleted. */
packageVersionId: Scalars['ID']}


/** Autogenerated return type of DeletePackageVersion */
export interface DeletePackageVersionPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** Whether or not the operation succeeded. */
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteProjectCard */
export interface DeleteProjectCardInput {
/** The id of the card to delete. */
cardId: Scalars['ID'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null)}


/** Autogenerated return type of DeleteProjectCard */
export interface DeleteProjectCardPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The column the deleted card was in. */
    column?: ProjectColumnRequest
    /** The deleted card ID. */
    deletedCardId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteProjectColumn */
export interface DeleteProjectColumnInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The id of the column to delete. */
columnId: Scalars['ID']}


/** Autogenerated return type of DeleteProjectColumn */
export interface DeleteProjectColumnPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The deleted column ID. */
    deletedColumnId?: boolean | number
    /** The project the deleted column was in. */
    project?: ProjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteProject */
export interface DeleteProjectInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Project ID to update. */
projectId: Scalars['ID']}


/** Autogenerated return type of DeleteProject */
export interface DeleteProjectPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The repository or organization the project was removed from. */
    owner?: ProjectOwnerRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeletePullRequestReviewComment */
export interface DeletePullRequestReviewCommentInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the comment to delete. */
id: Scalars['ID']}


/** Autogenerated return type of DeletePullRequestReviewComment */
export interface DeletePullRequestReviewCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The pull request review the deleted comment belonged to. */
    pullRequestReview?: PullRequestReviewRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeletePullRequestReview */
export interface DeletePullRequestReviewInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the pull request review to delete. */
pullRequestReviewId: Scalars['ID']}


/** Autogenerated return type of DeletePullRequestReview */
export interface DeletePullRequestReviewPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The deleted pull request review. */
    pullRequestReview?: PullRequestReviewRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteRef */
export interface DeleteRefInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the Ref to be deleted. */
refId: Scalars['ID']}


/** Autogenerated return type of DeleteRef */
export interface DeleteRefPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteTeamDiscussionComment */
export interface DeleteTeamDiscussionCommentInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the comment to delete. */
id: Scalars['ID']}


/** Autogenerated return type of DeleteTeamDiscussionComment */
export interface DeleteTeamDiscussionCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DeleteTeamDiscussion */
export interface DeleteTeamDiscussionInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The discussion ID to delete. */
id: Scalars['ID']}


/** Autogenerated return type of DeleteTeamDiscussion */
export interface DeleteTeamDiscussionPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'demilestoned' event on a given issue or pull request. */
export interface DemilestonedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Identifies the milestone title associated with the 'demilestoned' event. */
    milestoneTitle?: boolean | number
    /** Object referenced by event. */
    subject?: MilestoneItemRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A dependency manifest entry */
export interface DependencyGraphDependencyRequest{
    /** Does the dependency itself have dependencies? */
    hasDependencies?: boolean | number
    /** The dependency package manager */
    packageManager?: boolean | number
    /** The required package name */
    packageName?: boolean | number
    /** The repository containing the package */
    repository?: RepositoryRequest
    /** The dependency version requirements */
    requirements?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for DependencyGraphDependency. */
export interface DependencyGraphDependencyConnectionRequest{
    /** A list of edges. */
    edges?: DependencyGraphDependencyEdgeRequest
    /** A list of nodes. */
    nodes?: DependencyGraphDependencyRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface DependencyGraphDependencyEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: DependencyGraphDependencyRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Dependency manifest for a repository */
export interface DependencyGraphManifestRequest{
    /** Path to view the manifest file blob */
    blobPath?: boolean | number
    /** A list of manifest dependencies */
    dependencies?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},DependencyGraphDependencyConnectionRequest] | DependencyGraphDependencyConnectionRequest
    /** The number of dependencies listed in the manifest */
    dependenciesCount?: boolean | number
    /** Is the manifest too big to parse? */
    exceedsMaxSize?: boolean | number
    /** Fully qualified manifest filename */
    filename?: boolean | number
    id?: boolean | number
    /** Were we able to parse the manifest? */
    parseable?: boolean | number
    /** The repository containing the manifest */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for DependencyGraphManifest. */
export interface DependencyGraphManifestConnectionRequest{
    /** A list of edges. */
    edges?: DependencyGraphManifestEdgeRequest
    /** A list of nodes. */
    nodes?: DependencyGraphManifestRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface DependencyGraphManifestEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: DependencyGraphManifestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A repository deploy key. */
export interface DeployKeyRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** The deploy key. */
    key?: boolean | number
    /** Whether or not the deploy key is read only. */
    readOnly?: boolean | number
    /** The deploy key title. */
    title?: boolean | number
    /** Whether or not the deploy key has been verified. */
    verified?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for DeployKey. */
export interface DeployKeyConnectionRequest{
    /** A list of edges. */
    edges?: DeployKeyEdgeRequest
    /** A list of nodes. */
    nodes?: DeployKeyRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface DeployKeyEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: DeployKeyRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'deployed' event on a given pull request. */
export interface DeployedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The deployment associated with the 'deployed' event. */
    deployment?: DeploymentRequest
    id?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    /** The ref associated with the 'deployed' event. */
    ref?: RefRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents triggered deployment instance. */
export interface DeploymentRequest{
    /** Identifies the commit sha of the deployment. */
    commit?: CommitRequest
    /** Identifies the oid of the deployment commit, even if the commit has been deleted. */
    commitOid?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the actor who triggered the deployment. */
    creator?: ActorRequest
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The deployment description. */
    description?: boolean | number
    /** The latest environment to which this deployment was made. */
    environment?: boolean | number
    id?: boolean | number
    /** The latest environment to which this deployment was made. */
    latestEnvironment?: boolean | number
    /** The latest status of this deployment. */
    latestStatus?: DeploymentStatusRequest
    /** The original environment to which this deployment was made. */
    originalEnvironment?: boolean | number
    /** Extra information that a deployment system might need. */
    payload?: boolean | number
    /** Identifies the Ref of the deployment, if the deployment was created by ref. */
    ref?: RefRequest
    /** Identifies the repository associated with the deployment. */
    repository?: RepositoryRequest
    /** The current state of the deployment. */
    state?: boolean | number
    /** A list of statuses associated with the deployment. */
    statuses?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},DeploymentStatusConnectionRequest] | DeploymentStatusConnectionRequest
    /** The deployment task. */
    task?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Deployment. */
export interface DeploymentConnectionRequest{
    /** A list of edges. */
    edges?: DeploymentEdgeRequest
    /** A list of nodes. */
    nodes?: DeploymentRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface DeploymentEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: DeploymentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'deployment_environment_changed' event on a given pull request. */
export interface DeploymentEnvironmentChangedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The deployment status that updated the deployment environment. */
    deploymentStatus?: DeploymentStatusRequest
    id?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for deployment connections */
export interface DeploymentOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order deployments by. */
field: DeploymentOrderField}


/** Describes the status of a given deployment attempt. */
export interface DeploymentStatusRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the actor who triggered the deployment. */
    creator?: ActorRequest
    /** Identifies the deployment associated with status. */
    deployment?: DeploymentRequest
    /** Identifies the description of the deployment. */
    description?: boolean | number
    /** Identifies the environment of the deployment at the time of this deployment status */
    environment?: boolean | number
    /** Identifies the environment URL of the deployment. */
    environmentUrl?: boolean | number
    id?: boolean | number
    /** Identifies the log URL of the deployment. */
    logUrl?: boolean | number
    /** Identifies the current state of the deployment. */
    state?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for DeploymentStatus. */
export interface DeploymentStatusConnectionRequest{
    /** A list of edges. */
    edges?: DeploymentStatusEdgeRequest
    /** A list of nodes. */
    nodes?: DeploymentStatusRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface DeploymentStatusEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: DeploymentStatusRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'disconnected' event on a given issue or pull request. */
export interface DisconnectedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Reference originated in a different repository. */
    isCrossRepository?: boolean | number
    /** Issue or pull request from which the issue was disconnected. */
    source?: ReferencedSubjectRequest
    /** Issue or pull request which was disconnected. */
    subject?: ReferencedSubjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of DismissPullRequestReview */
export interface DismissPullRequestReviewInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The contents of the pull request review dismissal message. */
message: Scalars['String'],
/** The Node ID of the pull request review to modify. */
pullRequestReviewId: Scalars['ID']}


/** Autogenerated return type of DismissPullRequestReview */
export interface DismissPullRequestReviewPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The dismissed pull request review. */
    pullRequestReview?: PullRequestReviewRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Specifies a review comment to be left with a Pull Request Review. */
export interface DraftPullRequestReviewComment {
/** Body of the comment to leave. */
body: Scalars['String'],
/** Path to the file being commented on. */
path: Scalars['String'],
/** Position in the file to leave a comment on. */
position: Scalars['Int']}


/** Specifies a review comment thread to be left with a Pull Request Review. */
export interface DraftPullRequestReviewThread {
/** Body of the comment to leave. */
body: Scalars['String'],
/** The line of the blob to which the thread refers. The end of the line range for multi-line comments. */
line: Scalars['Int'],
/** Path to the file being commented on. */
path: Scalars['String'],
/** The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range. */
side?: (DiffSide | null),
/** The first line of the range to which the comment refers. */
startLine?: (Scalars['Int'] | null),
/** The side of the diff on which the start line resides. */
startSide?: (DiffSide | null)}


/** An account to manage multiple organizations with consolidated policy and billing. */
export interface EnterpriseRequest{
    /** A URL pointing to the enterprise's public avatar. */
    avatarUrl?: [{
    /** The size of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** Enterprise billing information visible to enterprise billing managers. */
    billingInfo?: EnterpriseBillingInfoRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The description of the enterprise. */
    description?: boolean | number
    /** The description of the enterprise as HTML. */
    descriptionHTML?: boolean | number
    id?: boolean | number
    /** The location of the enterprise. */
    location?: boolean | number
    /** A list of users who are members of this enterprise. */
    members?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Only return members within the selected GitHub Enterprise deployment */
    deployment?: (EnterpriseUserDeployment | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for members returned from the connection. */
    orderBy?: (EnterpriseMemberOrder | null),
    /** Only return members within the organizations with these logins */
    organizationLogins?: (Scalars['String'][] | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null),
    /** The role of the user in the enterprise organization or server. */
    role?: (EnterpriseUserAccountMembershipRole | null)},EnterpriseMemberConnectionRequest] | EnterpriseMemberConnectionRequest
    /** The name of the enterprise. */
    name?: boolean | number
    /** A list of organizations that belong to this enterprise. */
    organizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations returned from the connection. */
    orderBy?: (OrganizationOrder | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null)},OrganizationConnectionRequest] | OrganizationConnectionRequest
    /** Enterprise information only visible to enterprise owners. */
    ownerInfo?: EnterpriseOwnerInfoRequest
    /** The HTTP path for this enterprise. */
    resourcePath?: boolean | number
    /** The URL-friendly identifier for the enterprise. */
    slug?: boolean | number
    /** The HTTP URL for this enterprise. */
    url?: boolean | number
    /** A list of user accounts on this enterprise. */
    userAccounts?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},EnterpriseUserAccountConnectionRequest] | EnterpriseUserAccountConnectionRequest
    /** Is the current viewer an admin of this enterprise? */
    viewerIsAdmin?: boolean | number
    /** The URL of the enterprise website. */
    websiteUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for User. */
export interface EnterpriseAdministratorConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseAdministratorEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A User who is an administrator of an enterprise. */
export interface EnterpriseAdministratorEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: UserRequest
    /** The role of the administrator. */
    role?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An invitation for a user to become an owner or billing manager of an enterprise. */
export interface EnterpriseAdministratorInvitationRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The email of the person who was invited to the enterprise. */
    email?: boolean | number
    /** The enterprise the invitation is for. */
    enterprise?: EnterpriseRequest
    id?: boolean | number
    /** The user who was invited to the enterprise. */
    invitee?: UserRequest
    /** The user who created the invitation. */
    inviter?: UserRequest
    /** The invitee's pending role in the enterprise (owner or billing_manager). */
    role?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for EnterpriseAdministratorInvitation. */
export interface EnterpriseAdministratorInvitationConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseAdministratorInvitationEdgeRequest
    /** A list of nodes. */
    nodes?: EnterpriseAdministratorInvitationRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface EnterpriseAdministratorInvitationEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: EnterpriseAdministratorInvitationRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for enterprise administrator invitation connections */
export interface EnterpriseAdministratorInvitationOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order enterprise administrator invitations by. */
field: EnterpriseAdministratorInvitationOrderField}


/** Metadata for an audit entry containing enterprise account information. */
export interface EnterpriseAuditEntryDataRequest{
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: boolean | number
    /** The slug of the enterprise. */
    enterpriseSlug?: boolean | number
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: boolean | number
    on_MembersCanDeleteReposClearAuditEntry?: MembersCanDeleteReposClearAuditEntryRequest
    on_MembersCanDeleteReposDisableAuditEntry?: MembersCanDeleteReposDisableAuditEntryRequest
    on_MembersCanDeleteReposEnableAuditEntry?: MembersCanDeleteReposEnableAuditEntryRequest
    on_OrgInviteToBusinessAuditEntry?: OrgInviteToBusinessAuditEntryRequest
    on_PrivateRepositoryForkingDisableAuditEntry?: PrivateRepositoryForkingDisableAuditEntryRequest
    on_PrivateRepositoryForkingEnableAuditEntry?: PrivateRepositoryForkingEnableAuditEntryRequest
    on_RepositoryVisibilityChangeDisableAuditEntry?: RepositoryVisibilityChangeDisableAuditEntryRequest
    on_RepositoryVisibilityChangeEnableAuditEntry?: RepositoryVisibilityChangeEnableAuditEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Enterprise billing information visible to enterprise billing managers and owners. */
export interface EnterpriseBillingInfoRequest{
    /** The number of licenseable users/emails across the enterprise. */
    allLicensableUsersCount?: boolean | number
    /** The number of data packs used by all organizations owned by the enterprise. */
    assetPacks?: boolean | number
    /**
     * @deprecated `availableSeats` will be replaced with `totalAvailableLicenses` to provide more clarity on the value being returned Use EnterpriseBillingInfo.totalAvailableLicenses instead. Removal on 2020-01-01 UTC.
     * The number of available seats across all owned organizations based on the unique number of billable users.
     */
    availableSeats?: boolean | number
    /** The bandwidth quota in GB for all organizations owned by the enterprise. */
    bandwidthQuota?: boolean | number
    /** The bandwidth usage in GB for all organizations owned by the enterprise. */
    bandwidthUsage?: boolean | number
    /** The bandwidth usage as a percentage of the bandwidth quota. */
    bandwidthUsagePercentage?: boolean | number
    /**
     * @deprecated `seats` will be replaced with `totalLicenses` to provide more clarity on the value being returned Use EnterpriseBillingInfo.totalLicenses instead. Removal on 2020-01-01 UTC.
     * The total seats across all organizations owned by the enterprise.
     */
    seats?: boolean | number
    /** The storage quota in GB for all organizations owned by the enterprise. */
    storageQuota?: boolean | number
    /** The storage usage in GB for all organizations owned by the enterprise. */
    storageUsage?: boolean | number
    /** The storage usage as a percentage of the storage quota. */
    storageUsagePercentage?: boolean | number
    /** The number of available licenses across all owned organizations based on the unique number of billable users. */
    totalAvailableLicenses?: boolean | number
    /** The total number of licenses allocated. */
    totalLicenses?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An identity provider configured to provision identities for an enterprise. */
export interface EnterpriseIdentityProviderRequest{
    /** The digest algorithm used to sign SAML requests for the identity provider. */
    digestMethod?: boolean | number
    /** The enterprise this identity provider belongs to. */
    enterprise?: EnterpriseRequest
    /** ExternalIdentities provisioned by this identity provider. */
    externalIdentities?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},ExternalIdentityConnectionRequest] | ExternalIdentityConnectionRequest
    id?: boolean | number
    /** The x509 certificate used by the identity provider to sign assertions and responses. */
    idpCertificate?: boolean | number
    /** The Issuer Entity ID for the SAML identity provider. */
    issuer?: boolean | number
    /** Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable. */
    recoveryCodes?: boolean | number
    /** The signature algorithm used to sign SAML requests for the identity provider. */
    signatureMethod?: boolean | number
    /** The URL endpoint for the identity provider's SAML SSO. */
    ssoUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object that is a member of an enterprise. */
export interface EnterpriseMemberRequest{
    on_EnterpriseUserAccount?:EnterpriseUserAccountRequest,
    on_User?:UserRequest,
    on_Actor?: ActorRequest,
    on_Node?: NodeRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProfileOwner?: ProfileOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryOwner?: RepositoryOwnerRequest,
    on_Sponsorable?: SponsorableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    __typename?: boolean | number
}


/** The connection type for EnterpriseMember. */
export interface EnterpriseMemberConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseMemberEdgeRequest
    /** A list of nodes. */
    nodes?: EnterpriseMemberRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A User who is a member of an enterprise through one or more organizations. */
export interface EnterpriseMemberEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** Whether the user does not have a license for the enterprise. */
    isUnlicensed?: boolean | number
    /** The item at the end of the edge. */
    node?: EnterpriseMemberRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for enterprise member connections. */
export interface EnterpriseMemberOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order enterprise members by. */
field: EnterpriseMemberOrderField}


/** The connection type for Organization. */
export interface EnterpriseOrganizationMembershipConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseOrganizationMembershipEdgeRequest
    /** A list of nodes. */
    nodes?: OrganizationRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An enterprise organization that a user is a member of. */
export interface EnterpriseOrganizationMembershipEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: OrganizationRequest
    /** The role of the user in the enterprise membership. */
    role?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for User. */
export interface EnterpriseOutsideCollaboratorConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseOutsideCollaboratorEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A User who is an outside collaborator of an enterprise through one or more organizations. */
export interface EnterpriseOutsideCollaboratorEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** Whether the outside collaborator does not have a license for the enterprise. */
    isUnlicensed?: boolean | number
    /** The item at the end of the edge. */
    node?: UserRequest
    /** The enterprise organization repositories this user is a member of. */
    repositories?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for repositories. */
    orderBy?: (RepositoryOrder | null)},EnterpriseRepositoryInfoConnectionRequest] | EnterpriseRepositoryInfoConnectionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Enterprise information only visible to enterprise owners. */
export interface EnterpriseOwnerInfoRequest{
    /** A list of enterprise organizations configured with the provided action execution capabilities setting value. */
    actionExecutionCapabilitySettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null)},OrganizationConnectionRequest] | OrganizationConnectionRequest
    /** A list of all of the administrators for this enterprise. */
    admins?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for administrators returned from the connection. */
    orderBy?: (EnterpriseMemberOrder | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null),
    /** The role to filter by. */
    role?: (EnterpriseAdministratorRole | null)},EnterpriseAdministratorConnectionRequest] | EnterpriseAdministratorConnectionRequest
    /** A list of users in the enterprise who currently have two-factor authentication disabled. */
    affiliatedUsersWithTwoFactorDisabled?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserConnectionRequest] | UserConnectionRequest
    /** Whether or not affiliated users with two-factor authentication disabled exist in the enterprise. */
    affiliatedUsersWithTwoFactorDisabledExist?: boolean | number
    /** The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise. */
    allowPrivateRepositoryForkingSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided private repository forking setting value. */
    allowPrivateRepositoryForkingSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    /** The setting value for base repository permissions for organizations in this enterprise. */
    defaultRepositoryPermissionSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided default repository permission. */
    defaultRepositoryPermissionSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The permission to find organizations for. */
    value: DefaultRepositoryPermissionField},OrganizationConnectionRequest]
    /** Enterprise Server installations owned by the enterprise. */
    enterpriseServerInstallations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Whether or not to only return installations discovered via GitHub Connect. */
    connectedOnly?: (Scalars['Boolean'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for Enterprise Server installations returned. */
    orderBy?: (EnterpriseServerInstallationOrder | null)},EnterpriseServerInstallationConnectionRequest] | EnterpriseServerInstallationConnectionRequest
    /** The setting value for whether the enterprise has an IP allow list enabled. */
    ipAllowListEnabledSetting?: boolean | number
    /** The IP addresses that are allowed to access resources owned by the enterprise. */
    ipAllowListEntries?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for IP allow list entries returned. */
    orderBy?: (IpAllowListEntryOrder | null)},IpAllowListEntryConnectionRequest] | IpAllowListEntryConnectionRequest
    /** Whether or not the default repository permission is currently being updated. */
    isUpdatingDefaultRepositoryPermission?: boolean | number
    /** Whether the two-factor authentication requirement is currently being enforced. */
    isUpdatingTwoFactorRequirement?: boolean | number
    /**
     * The setting value for whether organization members with admin permissions on a
     * repository can change repository visibility.
     */
    membersCanChangeRepositoryVisibilitySetting?: boolean | number
    /** A list of enterprise organizations configured with the provided can change repository visibility setting value. */
    membersCanChangeRepositoryVisibilitySettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    /** The setting value for whether members of organizations in the enterprise can create internal repositories. */
    membersCanCreateInternalRepositoriesSetting?: boolean | number
    /** The setting value for whether members of organizations in the enterprise can create private repositories. */
    membersCanCreatePrivateRepositoriesSetting?: boolean | number
    /** The setting value for whether members of organizations in the enterprise can create public repositories. */
    membersCanCreatePublicRepositoriesSetting?: boolean | number
    /** The setting value for whether members of organizations in the enterprise can create repositories. */
    membersCanCreateRepositoriesSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided repository creation setting value. */
    membersCanCreateRepositoriesSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting to find organizations for. */
    value: OrganizationMembersCanCreateRepositoriesSettingValue},OrganizationConnectionRequest]
    /** The setting value for whether members with admin permissions for repositories can delete issues. */
    membersCanDeleteIssuesSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided members can delete issues setting value. */
    membersCanDeleteIssuesSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    /** The setting value for whether members with admin permissions for repositories can delete or transfer repositories. */
    membersCanDeleteRepositoriesSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided members can delete repositories setting value. */
    membersCanDeleteRepositoriesSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    /** The setting value for whether members of organizations in the enterprise can invite outside collaborators. */
    membersCanInviteCollaboratorsSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided members can invite collaborators setting value. */
    membersCanInviteCollaboratorsSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    /** Indicates whether members of this enterprise's organizations can purchase additional services for those organizations. */
    membersCanMakePurchasesSetting?: boolean | number
    /** The setting value for whether members with admin permissions for repositories can update protected branches. */
    membersCanUpdateProtectedBranchesSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided members can update protected branches setting value. */
    membersCanUpdateProtectedBranchesSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    /** The setting value for whether members can view dependency insights. */
    membersCanViewDependencyInsightsSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided members can view dependency insights setting value. */
    membersCanViewDependencyInsightsSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    /** The setting value for whether organization projects are enabled for organizations in this enterprise. */
    organizationProjectsSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided organization projects setting value. */
    organizationProjectsSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    /** A list of outside collaborators across the repositories in the enterprise. */
    outsideCollaborators?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** The login of one specific outside collaborator. */
    login?: (Scalars['String'] | null),
    /** Ordering options for outside collaborators returned from the connection. */
    orderBy?: (EnterpriseMemberOrder | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null),
    /** Only return outside collaborators on repositories with this visibility. */
    visibility?: (RepositoryVisibility | null)},EnterpriseOutsideCollaboratorConnectionRequest] | EnterpriseOutsideCollaboratorConnectionRequest
    /** A list of pending administrator invitations for the enterprise. */
    pendingAdminInvitations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for pending enterprise administrator invitations returned from the connection. */
    orderBy?: (EnterpriseAdministratorInvitationOrder | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null),
    /** The role to filter by. */
    role?: (EnterpriseAdministratorRole | null)},EnterpriseAdministratorInvitationConnectionRequest] | EnterpriseAdministratorInvitationConnectionRequest
    /** A list of pending collaborator invitations across the repositories in the enterprise. */
    pendingCollaboratorInvitations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for pending repository collaborator invitations returned from the connection. */
    orderBy?: (RepositoryInvitationOrder | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null)},RepositoryInvitationConnectionRequest] | RepositoryInvitationConnectionRequest
    /**
     * @deprecated Repository invitations can now be associated with an email, not only an invitee. Use the `pendingCollaboratorInvitations` field instead. Removal on 2020-10-01 UTC.
     * A list of pending collaborators across the repositories in the enterprise.
     */
    pendingCollaborators?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for pending repository collaborator invitations returned from the connection. */
    orderBy?: (RepositoryInvitationOrder | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null)},EnterprisePendingCollaboratorConnectionRequest] | EnterprisePendingCollaboratorConnectionRequest
    /** A list of pending member invitations for organizations in the enterprise. */
    pendingMemberInvitations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null)},EnterprisePendingMemberInvitationConnectionRequest] | EnterprisePendingMemberInvitationConnectionRequest
    /** The setting value for whether repository projects are enabled in this enterprise. */
    repositoryProjectsSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided repository projects setting value. */
    repositoryProjectsSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    /** The SAML Identity Provider for the enterprise. */
    samlIdentityProvider?: EnterpriseIdentityProviderRequest
    /** A list of enterprise organizations configured with the SAML single sign-on setting value. */
    samlIdentityProviderSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: IdentityProviderConfigurationState},OrganizationConnectionRequest]
    /** The setting value for whether team discussions are enabled for organizations in this enterprise. */
    teamDiscussionsSetting?: boolean | number
    /** A list of enterprise organizations configured with the provided team discussions setting value. */
    teamDiscussionsSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    /** The setting value for whether the enterprise requires two-factor authentication for its organizations and users. */
    twoFactorRequiredSetting?: boolean | number
    /** A list of enterprise organizations configured with the two-factor authentication setting value. */
    twoFactorRequiredSettingOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations with this setting. */
    orderBy?: (OrganizationOrder | null),
    /** The setting value to find organizations for. */
    value: Scalars['Boolean']},OrganizationConnectionRequest]
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for User. */
export interface EnterprisePendingCollaboratorConnectionRequest{
    /** A list of edges. */
    edges?: EnterprisePendingCollaboratorEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A user with an invitation to be a collaborator on a repository owned by an organization in an enterprise. */
export interface EnterprisePendingCollaboratorEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** Whether the invited collaborator does not have a license for the enterprise. */
    isUnlicensed?: boolean | number
    /** The item at the end of the edge. */
    node?: UserRequest
    /** The enterprise organization repositories this user is a member of. */
    repositories?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for repositories. */
    orderBy?: (RepositoryOrder | null)},EnterpriseRepositoryInfoConnectionRequest] | EnterpriseRepositoryInfoConnectionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for OrganizationInvitation. */
export interface EnterprisePendingMemberInvitationConnectionRequest{
    /** A list of edges. */
    edges?: EnterprisePendingMemberInvitationEdgeRequest
    /** A list of nodes. */
    nodes?: OrganizationInvitationRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    /** Identifies the total count of unique users in the connection. */
    totalUniqueUserCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An invitation to be a member in an enterprise organization. */
export interface EnterprisePendingMemberInvitationEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** Whether the invitation has a license for the enterprise. */
    isUnlicensed?: boolean | number
    /** The item at the end of the edge. */
    node?: OrganizationInvitationRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A subset of repository information queryable from an enterprise. */
export interface EnterpriseRepositoryInfoRequest{
    id?: boolean | number
    /** Identifies if the repository is private. */
    isPrivate?: boolean | number
    /** The repository's name. */
    name?: boolean | number
    /** The repository's name with owner. */
    nameWithOwner?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for EnterpriseRepositoryInfo. */
export interface EnterpriseRepositoryInfoConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseRepositoryInfoEdgeRequest
    /** A list of nodes. */
    nodes?: EnterpriseRepositoryInfoRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface EnterpriseRepositoryInfoEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: EnterpriseRepositoryInfoRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An Enterprise Server installation. */
export interface EnterpriseServerInstallationRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The customer name to which the Enterprise Server installation belongs. */
    customerName?: boolean | number
    /** The host name of the Enterprise Server installation. */
    hostName?: boolean | number
    id?: boolean | number
    /** Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect. */
    isConnected?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** User accounts on this Enterprise Server installation. */
    userAccounts?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for Enterprise Server user accounts returned from the connection. */
    orderBy?: (EnterpriseServerUserAccountOrder | null)},EnterpriseServerUserAccountConnectionRequest] | EnterpriseServerUserAccountConnectionRequest
    /** User accounts uploads for the Enterprise Server installation. */
    userAccountsUploads?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for Enterprise Server user accounts uploads returned from the connection. */
    orderBy?: (EnterpriseServerUserAccountsUploadOrder | null)},EnterpriseServerUserAccountsUploadConnectionRequest] | EnterpriseServerUserAccountsUploadConnectionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for EnterpriseServerInstallation. */
export interface EnterpriseServerInstallationConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseServerInstallationEdgeRequest
    /** A list of nodes. */
    nodes?: EnterpriseServerInstallationRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface EnterpriseServerInstallationEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: EnterpriseServerInstallationRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for Enterprise Server installation connections. */
export interface EnterpriseServerInstallationOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order Enterprise Server installations by. */
field: EnterpriseServerInstallationOrderField}


/** A user account on an Enterprise Server installation. */
export interface EnterpriseServerUserAccountRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** User emails belonging to this user account. */
    emails?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for Enterprise Server user account emails returned from the connection. */
    orderBy?: (EnterpriseServerUserAccountEmailOrder | null)},EnterpriseServerUserAccountEmailConnectionRequest] | EnterpriseServerUserAccountEmailConnectionRequest
    /** The Enterprise Server installation on which this user account exists. */
    enterpriseServerInstallation?: EnterpriseServerInstallationRequest
    id?: boolean | number
    /** Whether the user account is a site administrator on the Enterprise Server installation. */
    isSiteAdmin?: boolean | number
    /** The login of the user account on the Enterprise Server installation. */
    login?: boolean | number
    /** The profile name of the user account on the Enterprise Server installation. */
    profileName?: boolean | number
    /** The date and time when the user account was created on the Enterprise Server installation. */
    remoteCreatedAt?: boolean | number
    /** The ID of the user account on the Enterprise Server installation. */
    remoteUserId?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for EnterpriseServerUserAccount. */
export interface EnterpriseServerUserAccountConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseServerUserAccountEdgeRequest
    /** A list of nodes. */
    nodes?: EnterpriseServerUserAccountRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface EnterpriseServerUserAccountEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: EnterpriseServerUserAccountRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An email belonging to a user account on an Enterprise Server installation. */
export interface EnterpriseServerUserAccountEmailRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The email address. */
    email?: boolean | number
    id?: boolean | number
    /** Indicates whether this is the primary email of the associated user account. */
    isPrimary?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The user account to which the email belongs. */
    userAccount?: EnterpriseServerUserAccountRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for EnterpriseServerUserAccountEmail. */
export interface EnterpriseServerUserAccountEmailConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseServerUserAccountEmailEdgeRequest
    /** A list of nodes. */
    nodes?: EnterpriseServerUserAccountEmailRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface EnterpriseServerUserAccountEmailEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: EnterpriseServerUserAccountEmailRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for Enterprise Server user account email connections. */
export interface EnterpriseServerUserAccountEmailOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order emails by. */
field: EnterpriseServerUserAccountEmailOrderField}


/** Ordering options for Enterprise Server user account connections. */
export interface EnterpriseServerUserAccountOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order user accounts by. */
field: EnterpriseServerUserAccountOrderField}


/** A user accounts upload from an Enterprise Server installation. */
export interface EnterpriseServerUserAccountsUploadRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The enterprise to which this upload belongs. */
    enterprise?: EnterpriseRequest
    /** The Enterprise Server installation for which this upload was generated. */
    enterpriseServerInstallation?: EnterpriseServerInstallationRequest
    id?: boolean | number
    /** The name of the file uploaded. */
    name?: boolean | number
    /** The synchronization state of the upload */
    syncState?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for EnterpriseServerUserAccountsUpload. */
export interface EnterpriseServerUserAccountsUploadConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseServerUserAccountsUploadEdgeRequest
    /** A list of nodes. */
    nodes?: EnterpriseServerUserAccountsUploadRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface EnterpriseServerUserAccountsUploadEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: EnterpriseServerUserAccountsUploadRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for Enterprise Server user accounts upload connections. */
export interface EnterpriseServerUserAccountsUploadOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order user accounts uploads by. */
field: EnterpriseServerUserAccountsUploadOrderField}


/** An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations. */
export interface EnterpriseUserAccountRequest{
    /** A URL pointing to the enterprise user account's public avatar. */
    avatarUrl?: [{
    /** The size of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The enterprise in which this user account exists. */
    enterprise?: EnterpriseRequest
    id?: boolean | number
    /** An identifier for the enterprise user account, a login or email address */
    login?: boolean | number
    /** The name of the enterprise user account */
    name?: boolean | number
    /** A list of enterprise organizations this user is a member of. */
    organizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for organizations returned from the connection. */
    orderBy?: (OrganizationOrder | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null),
    /** The role of the user in the enterprise organization. */
    role?: (EnterpriseUserAccountMembershipRole | null)},EnterpriseOrganizationMembershipConnectionRequest] | EnterpriseOrganizationMembershipConnectionRequest
    /** The HTTP path for this user. */
    resourcePath?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this user. */
    url?: boolean | number
    /** The user within the enterprise. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for EnterpriseUserAccount. */
export interface EnterpriseUserAccountConnectionRequest{
    /** A list of edges. */
    edges?: EnterpriseUserAccountEdgeRequest
    /** A list of nodes. */
    nodes?: EnterpriseUserAccountRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface EnterpriseUserAccountEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: EnterpriseUserAccountRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An external identity provisioned by SAML SSO or SCIM. */
export interface ExternalIdentityRequest{
    /** The GUID for this identity */
    guid?: boolean | number
    id?: boolean | number
    /** Organization invitation for this SCIM-provisioned external identity */
    organizationInvitation?: OrganizationInvitationRequest
    /** SAML Identity attributes */
    samlIdentity?: ExternalIdentitySamlAttributesRequest
    /** SCIM Identity attributes */
    scimIdentity?: ExternalIdentityScimAttributesRequest
    /** User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for ExternalIdentity. */
export interface ExternalIdentityConnectionRequest{
    /** A list of edges. */
    edges?: ExternalIdentityEdgeRequest
    /** A list of nodes. */
    nodes?: ExternalIdentityRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface ExternalIdentityEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: ExternalIdentityRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** SAML attributes for the External Identity */
export interface ExternalIdentitySamlAttributesRequest{
    /** The NameID of the SAML identity */
    nameId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** SCIM attributes for the External Identity */
export interface ExternalIdentityScimAttributesRequest{
    /** The userName of the SCIM identity */
    username?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of FollowUser */
export interface FollowUserInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** ID of the user to follow. */
userId: Scalars['ID']}


/** Autogenerated return type of FollowUser */
export interface FollowUserPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The user that was followed. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for User. */
export interface FollowerConnectionRequest{
    /** A list of edges. */
    edges?: UserEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for User. */
export interface FollowingConnectionRequest{
    /** A list of edges. */
    edges?: UserEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A funding platform link for a repository. */
export interface FundingLinkRequest{
    /** The funding platform this link is for. */
    platform?: boolean | number
    /** The configured URL for this funding link. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A generic hovercard context with a message and icon */
export interface GenericHovercardContextRequest{
    /** A string describing this context */
    message?: boolean | number
    /** An octicon to accompany this context */
    octicon?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Gist. */
export interface GistRequest{
    /** A list of comments associated with the gist */
    comments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},GistCommentConnectionRequest] | GistCommentConnectionRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The gist description. */
    description?: boolean | number
    /** The files in this gist. */
    files?: [{
    /** The maximum number of files to return. */
    limit?: (Scalars['Int'] | null),
    /** The oid of the files to return */
    oid?: (Scalars['GitObjectID'] | null)},GistFileRequest] | GistFileRequest
    /** A list of forks associated with the gist */
    forks?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for gists returned from the connection */
    orderBy?: (GistOrder | null)},GistConnectionRequest] | GistConnectionRequest
    id?: boolean | number
    /** Identifies if the gist is a fork. */
    isFork?: boolean | number
    /** Whether the gist is public or not. */
    isPublic?: boolean | number
    /** The gist name. */
    name?: boolean | number
    /** The gist owner. */
    owner?: RepositoryOwnerRequest
    /** Identifies when the gist was last pushed to. */
    pushedAt?: boolean | number
    /** The HTML path to this resource. */
    resourcePath?: boolean | number
    /** A list of users who have starred this starrable. */
    stargazers?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for connection */
    orderBy?: (StarOrder | null)},StargazerConnectionRequest] | StargazerConnectionRequest
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this Gist. */
    url?: boolean | number
    /** Returns a boolean indicating whether the viewing user has starred this starrable. */
    viewerHasStarred?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a comment on an Gist. */
export interface GistCommentRequest{
    /** The actor who authored the comment. */
    author?: ActorRequest
    /** Author's association with the gist. */
    authorAssociation?: boolean | number
    /** Identifies the comment body. */
    body?: boolean | number
    /** The body rendered to HTML. */
    bodyHTML?: boolean | number
    /** The body rendered to text. */
    bodyText?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Check if this comment was created via an email reply. */
    createdViaEmail?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The actor who edited the comment. */
    editor?: ActorRequest
    /** The associated gist. */
    gist?: GistRequest
    id?: boolean | number
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit?: boolean | number
    /** Returns whether or not a comment has been minimized. */
    isMinimized?: boolean | number
    /** The moment the editor made the last edit */
    lastEditedAt?: boolean | number
    /** Returns why the comment was minimized. */
    minimizedReason?: boolean | number
    /** Identifies when the comment was published at. */
    publishedAt?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** A list of edits to this content. */
    userContentEdits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserContentEditConnectionRequest] | UserContentEditConnectionRequest
    /** Check if the current viewer can delete this object. */
    viewerCanDelete?: boolean | number
    /** Check if the current viewer can minimize this object. */
    viewerCanMinimize?: boolean | number
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons?: boolean | number
    /** Did the viewer author this comment. */
    viewerDidAuthor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for GistComment. */
export interface GistCommentConnectionRequest{
    /** A list of edges. */
    edges?: GistCommentEdgeRequest
    /** A list of nodes. */
    nodes?: GistCommentRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface GistCommentEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: GistCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Gist. */
export interface GistConnectionRequest{
    /** A list of edges. */
    edges?: GistEdgeRequest
    /** A list of nodes. */
    nodes?: GistRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface GistEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: GistRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A file in a gist. */
export interface GistFileRequest{
    /** The file name encoded to remove characters that are invalid in URL paths. */
    encodedName?: boolean | number
    /** The gist file encoding. */
    encoding?: boolean | number
    /** The file extension from the file name. */
    extension?: boolean | number
    /** Indicates if this file is an image. */
    isImage?: boolean | number
    /** Whether the file's contents were truncated. */
    isTruncated?: boolean | number
    /** The programming language this file is written in. */
    language?: LanguageRequest
    /** The gist file name. */
    name?: boolean | number
    /** The gist file size in bytes. */
    size?: boolean | number
    /** UTF8 text data or null if the file is binary */
    text?: [{
    /** Optionally truncate the returned file to this length. */
    truncate?: (Scalars['Int'] | null)}] | boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for gist connections */
export interface GistOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order repositories by. */
field: GistOrderField}


/** Represents an actor in a Git commit (ie. an author or committer). */
export interface GitActorRequest{
    /** A URL pointing to the author's public avatar. */
    avatarUrl?: [{
    /** The size of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** The timestamp of the Git action (authoring or committing). */
    date?: boolean | number
    /** The email in the Git commit. */
    email?: boolean | number
    /** The name in the Git commit. */
    name?: boolean | number
    /** The GitHub user corresponding to the email field. Null if no such user exists. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents information about the GitHub instance. */
export interface GitHubMetadataRequest{
    /** Returns a String that's a SHA of `github-services` */
    gitHubServicesSha?: boolean | number
    /** IP addresses that users connect to for git operations */
    gitIpAddresses?: boolean | number
    /** IP addresses that service hooks are sent from */
    hookIpAddresses?: boolean | number
    /** IP addresses that the importer connects from */
    importerIpAddresses?: boolean | number
    /** Whether or not users are verified */
    isPasswordAuthenticationVerifiable?: boolean | number
    /** IP addresses for GitHub Pages' A records */
    pagesIpAddresses?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Git object. */
export interface GitObjectRequest{
    /** An abbreviated version of the Git object ID */
    abbreviatedOid?: boolean | number
    /** The HTTP path for this Git object */
    commitResourcePath?: boolean | number
    /** The HTTP URL for this Git object */
    commitUrl?: boolean | number
    id?: boolean | number
    /** The Git object ID */
    oid?: boolean | number
    /** The Repository the Git object belongs to */
    repository?: RepositoryRequest
    on_Blob?: BlobRequest
    on_Commit?: CommitRequest
    on_Tag?: TagRequest
    on_Tree?: TreeRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a signature (GPG or S/MIME) on a Commit or Tag. */
export interface GitSignatureRequest{
    /** Email used to sign this object. */
    email?: boolean | number
    /** True if the signature is valid and verified by GitHub. */
    isValid?: boolean | number
    /** Payload for GPG signing object. Raw ODB object without the signature header. */
    payload?: boolean | number
    /** ASCII-armored signature header from object. */
    signature?: boolean | number
    /** GitHub user corresponding to the email signing this commit. */
    signer?: UserRequest
    /**
     * The state of this signature. `VALID` if signature is valid and verified by
     * GitHub, otherwise represents reason why signature is considered invalid.
     */
    state?: boolean | number
    /** True if the signature was made with GitHub's signing key. */
    wasSignedByGitHub?: boolean | number
    on_GpgSignature?: GpgSignatureRequest
    on_SmimeSignature?: SmimeSignatureRequest
    on_UnknownSignature?: UnknownSignatureRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a GPG signature on a Commit or Tag. */
export interface GpgSignatureRequest{
    /** Email used to sign this object. */
    email?: boolean | number
    /** True if the signature is valid and verified by GitHub. */
    isValid?: boolean | number
    /** Hex-encoded ID of the key that signed this object. */
    keyId?: boolean | number
    /** Payload for GPG signing object. Raw ODB object without the signature header. */
    payload?: boolean | number
    /** ASCII-armored signature header from object. */
    signature?: boolean | number
    /** GitHub user corresponding to the email signing this commit. */
    signer?: UserRequest
    /**
     * The state of this signature. `VALID` if signature is valid and verified by
     * GitHub, otherwise represents reason why signature is considered invalid.
     */
    state?: boolean | number
    /** True if the signature was made with GitHub's signing key. */
    wasSignedByGitHub?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'head_ref_deleted' event on a given pull request. */
export interface HeadRefDeletedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the Ref associated with the `head_ref_deleted` event. */
    headRef?: RefRequest
    /** Identifies the name of the Ref associated with the `head_ref_deleted` event. */
    headRefName?: boolean | number
    id?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'head_ref_force_pushed' event on a given pull request. */
export interface HeadRefForcePushedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the after commit SHA for the 'head_ref_force_pushed' event. */
    afterCommit?: CommitRequest
    /** Identifies the before commit SHA for the 'head_ref_force_pushed' event. */
    beforeCommit?: CommitRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    /** Identifies the fully qualified ref name for the 'head_ref_force_pushed' event. */
    ref?: RefRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'head_ref_restored' event on a given pull request. */
export interface HeadRefRestoredEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Detail needed to display a hovercard for a user */
export interface HovercardRequest{
    /** Each of the contexts for this hovercard */
    contexts?: HovercardContextRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An individual line of a hovercard */
export interface HovercardContextRequest{
    /** A string describing this context */
    message?: boolean | number
    /** An octicon to accompany this context */
    octicon?: boolean | number
    on_GenericHovercardContext?: GenericHovercardContextRequest
    on_OrganizationTeamsHovercardContext?: OrganizationTeamsHovercardContextRequest
    on_OrganizationsHovercardContext?: OrganizationsHovercardContextRequest
    on_ReviewStatusHovercardContext?: ReviewStatusHovercardContextRequest
    on_ViewerHovercardContext?: ViewerHovercardContextRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ImportProject */
export interface ImportProjectInput {
/** The description of Project. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** A list of columns containing issues and pull requests. */
columnImports: ProjectColumnImport[],
/** The name of Project. */
name: Scalars['String'],
/** The name of the Organization or User to create the Project under. */
ownerName: Scalars['String'],
/** Whether the Project is public or not. */
public?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of ImportProject */
export interface ImportProjectPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new Project! */
    project?: ProjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of InviteEnterpriseAdmin */
export interface InviteEnterpriseAdminInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The email of the person to invite as an administrator. */
email?: (Scalars['String'] | null),
/** The ID of the enterprise to which you want to invite an administrator. */
enterpriseId: Scalars['ID'],
/** The login of a user to invite as an administrator. */
invitee?: (Scalars['String'] | null),
/** The role of the administrator. */
role?: (EnterpriseAdministratorRole | null)}


/** Autogenerated return type of InviteEnterpriseAdmin */
export interface InviteEnterpriseAdminPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The created enterprise administrator invitation. */
    invitation?: EnterpriseAdministratorInvitationRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An IP address or range of addresses that is allowed to access an owner's resources. */
export interface IpAllowListEntryRequest{
    /** A single IP address or range of IP addresses in CIDR notation. */
    allowListValue?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Whether the entry is currently active. */
    isActive?: boolean | number
    /** The name of the IP allow list entry. */
    name?: boolean | number
    /** The owner of the IP allow list entry. */
    owner?: IpAllowListOwnerRequest
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for IpAllowListEntry. */
export interface IpAllowListEntryConnectionRequest{
    /** A list of edges. */
    edges?: IpAllowListEntryEdgeRequest
    /** A list of nodes. */
    nodes?: IpAllowListEntryRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface IpAllowListEntryEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: IpAllowListEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for IP allow list entry connections. */
export interface IpAllowListEntryOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order IP allow list entries by. */
field: IpAllowListEntryOrderField}


/** Types that can own an IP allow list. */
export interface IpAllowListOwnerRequest{
    on_Enterprise?:EnterpriseRequest,
    on_Organization?:OrganizationRequest,
    on_Node?: NodeRequest,
    on_Actor?: ActorRequest,
    on_MemberStatusable?: MemberStatusableRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProfileOwner?: ProfileOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryOwner?: RepositoryOwnerRequest,
    on_Sponsorable?: SponsorableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    __typename?: boolean | number
}


/** An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project. */
export interface IssueRequest{
    /** Reason that the conversation was locked. */
    activeLockReason?: boolean | number
    /** A list of Users assigned to this object. */
    assignees?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserConnectionRequest] | UserConnectionRequest
    /** The actor who authored the comment. */
    author?: ActorRequest
    /** Author's association with the subject of the comment. */
    authorAssociation?: boolean | number
    /** Identifies the body of the issue. */
    body?: boolean | number
    /** The body rendered to HTML. */
    bodyHTML?: boolean | number
    /** Identifies the body of the issue rendered to text. */
    bodyText?: boolean | number
    /** `true` if the object is closed (definition of closed may depend on type) */
    closed?: boolean | number
    /** Identifies the date and time when the object was closed. */
    closedAt?: boolean | number
    /** A list of comments associated with the Issue. */
    comments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},IssueCommentConnectionRequest] | IssueCommentConnectionRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Check if this comment was created via an email reply. */
    createdViaEmail?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The actor who edited the comment. */
    editor?: ActorRequest
    /** The hovercard information for this issue */
    hovercard?: [{
    /** Whether or not to include notification contexts */
    includeNotificationContexts?: (Scalars['Boolean'] | null)},HovercardRequest] | HovercardRequest
    id?: boolean | number
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit?: boolean | number
    /** A list of labels associated with the object. */
    labels?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for labels returned from the connection. */
    orderBy?: (LabelOrder | null)},LabelConnectionRequest] | LabelConnectionRequest
    /** The moment the editor made the last edit */
    lastEditedAt?: boolean | number
    /** `true` if the object is locked */
    locked?: boolean | number
    /** Identifies the milestone associated with the issue. */
    milestone?: MilestoneRequest
    /** Identifies the issue number. */
    number?: boolean | number
    /** A list of Users that are participating in the Issue conversation. */
    participants?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserConnectionRequest] | UserConnectionRequest
    /** List of project cards associated with this issue. */
    projectCards?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** A list of archived states to filter the cards by */
    archivedStates?: ((ProjectCardArchivedState | null)[] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},ProjectCardConnectionRequest] | ProjectCardConnectionRequest
    /** Identifies when the comment was published at. */
    publishedAt?: boolean | number
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroupRequest
    /** A list of Reactions left on the Issue. */
    reactions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Allows filtering Reactions by emoji. */
    content?: (ReactionContent | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows specifying the order in which reactions are returned. */
    orderBy?: (ReactionOrder | null)},ReactionConnectionRequest] | ReactionConnectionRequest
    /** The repository associated with this node. */
    repository?: RepositoryRequest
    /** The HTTP path for this issue */
    resourcePath?: boolean | number
    /** Identifies the state of the issue. */
    state?: boolean | number
    /**
     * @deprecated `timeline` will be removed Use Issue.timelineItems instead. Removal on 2020-10-01 UTC.
     * A list of events, comments, commits, etc. associated with the issue.
     */
    timeline?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows filtering timeline events by a `since` timestamp. */
    since?: (Scalars['DateTime'] | null)},IssueTimelineConnectionRequest] | IssueTimelineConnectionRequest
    /** A list of events, comments, commits, etc. associated with the issue. */
    timelineItems?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Filter timeline items by type. */
    itemTypes?: (IssueTimelineItemsItemType[] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter timeline items by a `since` timestamp. */
    since?: (Scalars['DateTime'] | null),
    /** Skips the first _n_ elements in the list. */
    skip?: (Scalars['Int'] | null)},IssueTimelineItemsConnectionRequest] | IssueTimelineItemsConnectionRequest
    /** Identifies the issue title. */
    title?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this issue */
    url?: boolean | number
    /** A list of edits to this content. */
    userContentEdits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserContentEditConnectionRequest] | UserContentEditConnectionRequest
    /** Can user react to this subject */
    viewerCanReact?: boolean | number
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe?: boolean | number
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons?: boolean | number
    /** Did the viewer author this comment. */
    viewerDidAuthor?: boolean | number
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a comment on an Issue. */
export interface IssueCommentRequest{
    /** The actor who authored the comment. */
    author?: ActorRequest
    /** Author's association with the subject of the comment. */
    authorAssociation?: boolean | number
    /** The body as Markdown. */
    body?: boolean | number
    /** The body rendered to HTML. */
    bodyHTML?: boolean | number
    /** The body rendered to text. */
    bodyText?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Check if this comment was created via an email reply. */
    createdViaEmail?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The actor who edited the comment. */
    editor?: ActorRequest
    id?: boolean | number
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit?: boolean | number
    /** Returns whether or not a comment has been minimized. */
    isMinimized?: boolean | number
    /** Identifies the issue associated with the comment. */
    issue?: IssueRequest
    /** The moment the editor made the last edit */
    lastEditedAt?: boolean | number
    /** Returns why the comment was minimized. */
    minimizedReason?: boolean | number
    /** Identifies when the comment was published at. */
    publishedAt?: boolean | number
    /**
     * Returns the pull request associated with the comment, if this comment was made on a
     * pull request.
     */
    pullRequest?: PullRequestRequest
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroupRequest
    /** A list of Reactions left on the Issue. */
    reactions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Allows filtering Reactions by emoji. */
    content?: (ReactionContent | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows specifying the order in which reactions are returned. */
    orderBy?: (ReactionOrder | null)},ReactionConnectionRequest] | ReactionConnectionRequest
    /** The repository associated with this node. */
    repository?: RepositoryRequest
    /** The HTTP path for this issue comment */
    resourcePath?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this issue comment */
    url?: boolean | number
    /** A list of edits to this content. */
    userContentEdits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserContentEditConnectionRequest] | UserContentEditConnectionRequest
    /** Check if the current viewer can delete this object. */
    viewerCanDelete?: boolean | number
    /** Check if the current viewer can minimize this object. */
    viewerCanMinimize?: boolean | number
    /** Can user react to this subject */
    viewerCanReact?: boolean | number
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons?: boolean | number
    /** Did the viewer author this comment. */
    viewerDidAuthor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for IssueComment. */
export interface IssueCommentConnectionRequest{
    /** A list of edges. */
    edges?: IssueCommentEdgeRequest
    /** A list of nodes. */
    nodes?: IssueCommentRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface IssueCommentEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: IssueCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Issue. */
export interface IssueConnectionRequest{
    /** A list of edges. */
    edges?: IssueEdgeRequest
    /** A list of nodes. */
    nodes?: IssueRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** This aggregates issues opened by a user within one repository. */
export interface IssueContributionsByRepositoryRequest{
    /** The issue contributions. */
    contributions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for contributions returned from the connection. */
    orderBy?: (ContributionOrder | null)},CreatedIssueContributionConnectionRequest] | CreatedIssueContributionConnectionRequest
    /** The repository in which the issues were opened. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface IssueEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which to filter lists of issues. */
export interface IssueFilters {
/**
 * List issues assigned to given name. Pass in `null` for issues with no assigned
 * user, and `*` for issues assigned to any user.
 */
assignee?: (Scalars['String'] | null),
/** List issues created by given name. */
createdBy?: (Scalars['String'] | null),
/** List issues where the list of label names exist on the issue. */
labels?: (Scalars['String'][] | null),
/** List issues where the given name is mentioned in the issue. */
mentioned?: (Scalars['String'] | null),
/**
 * List issues by given milestone argument. If an string representation of an
 * integer is passed, it should refer to a milestone by its number field. Pass in
 * `null` for issues with no milestone, and `*` for issues that are assigned to any milestone.
 */
milestone?: (Scalars['String'] | null),
/** List issues that have been updated at or after the given date. */
since?: (Scalars['DateTime'] | null),
/** List issues filtered by the list of states given. */
states?: (IssueState[] | null),
/** List issues subscribed to by viewer. */
viewerSubscribed?: (Scalars['Boolean'] | null)}


/** Used for return value of Repository.issueOrPullRequest. */
export interface IssueOrPullRequestRequest{
    on_Issue?:IssueRequest,
    on_PullRequest?:PullRequestRequest,
    on_Assignable?: AssignableRequest,
    on_Closable?: ClosableRequest,
    on_Comment?: CommentRequest,
    on_Labelable?: LabelableRequest,
    on_Lockable?: LockableRequest,
    on_Node?: NodeRequest,
    on_Reactable?: ReactableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Subscribable?: SubscribableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    __typename?: boolean | number
}


/** Ways in which lists of issues can be ordered upon return. */
export interface IssueOrder {
/** The direction in which to order issues by the specified field. */
direction: OrderDirection,
/** The field in which to order issues by. */
field: IssueOrderField}


/** The connection type for IssueTimelineItem. */
export interface IssueTimelineConnectionRequest{
    /** A list of edges. */
    edges?: IssueTimelineItemEdgeRequest
    /** A list of nodes. */
    nodes?: IssueTimelineItemRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An item in an issue timeline */
export interface IssueTimelineItemRequest{
    on_AssignedEvent?:AssignedEventRequest,
    on_ClosedEvent?:ClosedEventRequest,
    on_Commit?:CommitRequest,
    on_CrossReferencedEvent?:CrossReferencedEventRequest,
    on_DemilestonedEvent?:DemilestonedEventRequest,
    on_IssueComment?:IssueCommentRequest,
    on_LabeledEvent?:LabeledEventRequest,
    on_LockedEvent?:LockedEventRequest,
    on_MilestonedEvent?:MilestonedEventRequest,
    on_ReferencedEvent?:ReferencedEventRequest,
    on_RenamedTitleEvent?:RenamedTitleEventRequest,
    on_ReopenedEvent?:ReopenedEventRequest,
    on_SubscribedEvent?:SubscribedEventRequest,
    on_TransferredEvent?:TransferredEventRequest,
    on_UnassignedEvent?:UnassignedEventRequest,
    on_UnlabeledEvent?:UnlabeledEventRequest,
    on_UnlockedEvent?:UnlockedEventRequest,
    on_UnsubscribedEvent?:UnsubscribedEventRequest,
    on_UserBlockedEvent?:UserBlockedEventRequest,
    on_Node?: NodeRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_GitObject?: GitObjectRequest,
    on_Subscribable?: SubscribableRequest,
    on_Comment?: CommentRequest,
    on_Deletable?: DeletableRequest,
    on_Minimizable?: MinimizableRequest,
    on_Reactable?: ReactableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    __typename?: boolean | number
}


/** An edge in a connection. */
export interface IssueTimelineItemEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: IssueTimelineItemRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An item in an issue timeline */
export interface IssueTimelineItemsRequest{
    on_AddedToProjectEvent?:AddedToProjectEventRequest,
    on_AssignedEvent?:AssignedEventRequest,
    on_ClosedEvent?:ClosedEventRequest,
    on_CommentDeletedEvent?:CommentDeletedEventRequest,
    on_ConnectedEvent?:ConnectedEventRequest,
    on_ConvertedNoteToIssueEvent?:ConvertedNoteToIssueEventRequest,
    on_CrossReferencedEvent?:CrossReferencedEventRequest,
    on_DemilestonedEvent?:DemilestonedEventRequest,
    on_DisconnectedEvent?:DisconnectedEventRequest,
    on_IssueComment?:IssueCommentRequest,
    on_LabeledEvent?:LabeledEventRequest,
    on_LockedEvent?:LockedEventRequest,
    on_MarkedAsDuplicateEvent?:MarkedAsDuplicateEventRequest,
    on_MentionedEvent?:MentionedEventRequest,
    on_MilestonedEvent?:MilestonedEventRequest,
    on_MovedColumnsInProjectEvent?:MovedColumnsInProjectEventRequest,
    on_PinnedEvent?:PinnedEventRequest,
    on_ReferencedEvent?:ReferencedEventRequest,
    on_RemovedFromProjectEvent?:RemovedFromProjectEventRequest,
    on_RenamedTitleEvent?:RenamedTitleEventRequest,
    on_ReopenedEvent?:ReopenedEventRequest,
    on_SubscribedEvent?:SubscribedEventRequest,
    on_TransferredEvent?:TransferredEventRequest,
    on_UnassignedEvent?:UnassignedEventRequest,
    on_UnlabeledEvent?:UnlabeledEventRequest,
    on_UnlockedEvent?:UnlockedEventRequest,
    on_UnmarkedAsDuplicateEvent?:UnmarkedAsDuplicateEventRequest,
    on_UnpinnedEvent?:UnpinnedEventRequest,
    on_UnsubscribedEvent?:UnsubscribedEventRequest,
    on_UserBlockedEvent?:UserBlockedEventRequest,
    on_Node?: NodeRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_Comment?: CommentRequest,
    on_Deletable?: DeletableRequest,
    on_Minimizable?: MinimizableRequest,
    on_Reactable?: ReactableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    __typename?: boolean | number
}


/** The connection type for IssueTimelineItems. */
export interface IssueTimelineItemsConnectionRequest{
    /** A list of edges. */
    edges?: IssueTimelineItemsEdgeRequest
    /** Identifies the count of items after applying `before` and `after` filters. */
    filteredCount?: boolean | number
    /** A list of nodes. */
    nodes?: IssueTimelineItemsRequest
    /** Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing. */
    pageCount?: boolean | number
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    /** Identifies the date and time when the timeline was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface IssueTimelineItemsEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: IssueTimelineItemsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a user signing up for a GitHub account. */
export interface JoinedGitHubContributionRequest{
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted?: boolean | number
    /** When this contribution was made. */
    occurredAt?: boolean | number
    /** The HTTP path for this contribution. */
    resourcePath?: boolean | number
    /** The HTTP URL for this contribution. */
    url?: boolean | number
    /** The user who made this contribution. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A label for categorizing Issues or Milestones with a given Repository. */
export interface LabelRequest{
    /** Identifies the label color. */
    color?: boolean | number
    /** Identifies the date and time when the label was created. */
    createdAt?: boolean | number
    /** A brief description of this label. */
    description?: boolean | number
    id?: boolean | number
    /** Indicates whether or not this is a default label. */
    isDefault?: boolean | number
    /** A list of issues associated with this label. */
    issues?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Filtering options for issues returned from the connection. */
    filterBy?: (IssueFilters | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** A list of label names to filter the pull requests by. */
    labels?: (Scalars['String'][] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for issues returned from the connection. */
    orderBy?: (IssueOrder | null),
    /** A list of states to filter the issues by. */
    states?: (IssueState[] | null)},IssueConnectionRequest] | IssueConnectionRequest
    /** Identifies the label name. */
    name?: boolean | number
    /** A list of pull requests associated with this label. */
    pullRequests?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** The base ref name to filter the pull requests by. */
    baseRefName?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** The head ref name to filter the pull requests by. */
    headRefName?: (Scalars['String'] | null),
    /** A list of label names to filter the pull requests by. */
    labels?: (Scalars['String'][] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for pull requests returned from the connection. */
    orderBy?: (IssueOrder | null),
    /** A list of states to filter the pull requests by. */
    states?: (PullRequestState[] | null)},PullRequestConnectionRequest] | PullRequestConnectionRequest
    /** The repository associated with this label. */
    repository?: RepositoryRequest
    /** The HTTP path for this label. */
    resourcePath?: boolean | number
    /** Identifies the date and time when the label was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this label. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Label. */
export interface LabelConnectionRequest{
    /** A list of edges. */
    edges?: LabelEdgeRequest
    /** A list of nodes. */
    nodes?: LabelRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface LabelEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: LabelRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which lists of labels can be ordered upon return. */
export interface LabelOrder {
/** The direction in which to order labels by the specified field. */
direction: OrderDirection,
/** The field in which to order labels by. */
field: LabelOrderField}


/** An object that can have labels assigned to it. */
export interface LabelableRequest{
    /** A list of labels associated with the object. */
    labels?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for labels returned from the connection. */
    orderBy?: (LabelOrder | null)},LabelConnectionRequest] | LabelConnectionRequest
    on_Issue?: IssueRequest
    on_PullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'labeled' event on a given issue or pull request. */
export interface LabeledEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Identifies the label associated with the 'labeled' event. */
    label?: LabelRequest
    /** Identifies the `Labelable` associated with the event. */
    labelable?: LabelableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a given language found in repositories. */
export interface LanguageRequest{
    /** The color defined for the current language. */
    color?: boolean | number
    id?: boolean | number
    /** The name of the current language. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A list of languages associated with the parent. */
export interface LanguageConnectionRequest{
    /** A list of edges. */
    edges?: LanguageEdgeRequest
    /** A list of nodes. */
    nodes?: LanguageRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    /** The total size in bytes of files written in that language. */
    totalSize?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the language of a repository. */
export interface LanguageEdgeRequest{
    cursor?: boolean | number
    node?: LanguageRequest
    /** The number of bytes of code written in the language. */
    size?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for language connections. */
export interface LanguageOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order languages by. */
field: LanguageOrderField}


/** A repository's open source license */
export interface LicenseRequest{
    /** The full text of the license */
    body?: boolean | number
    /** The conditions set by the license */
    conditions?: LicenseRuleRequest
    /** A human-readable description of the license */
    description?: boolean | number
    /** Whether the license should be featured */
    featured?: boolean | number
    /** Whether the license should be displayed in license pickers */
    hidden?: boolean | number
    id?: boolean | number
    /** Instructions on how to implement the license */
    implementation?: boolean | number
    /** The lowercased SPDX ID of the license */
    key?: boolean | number
    /** The limitations set by the license */
    limitations?: LicenseRuleRequest
    /** The license full name specified by <https://spdx.org/licenses> */
    name?: boolean | number
    /** Customary short name if applicable (e.g, GPLv3) */
    nickname?: boolean | number
    /** The permissions set by the license */
    permissions?: LicenseRuleRequest
    /** Whether the license is a pseudo-license placeholder (e.g., other, no-license) */
    pseudoLicense?: boolean | number
    /** Short identifier specified by <https://spdx.org/licenses> */
    spdxId?: boolean | number
    /** URL to the license on <https://choosealicense.com> */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Describes a License's conditions, permissions, and limitations */
export interface LicenseRuleRequest{
    /** A description of the rule */
    description?: boolean | number
    /** The machine-readable rule key */
    key?: boolean | number
    /** The human-readable rule label */
    label?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of LinkRepositoryToProject */
export interface LinkRepositoryToProjectInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the Project to link to a Repository */
projectId: Scalars['ID'],
/** The ID of the Repository to link to a Project. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of LinkRepositoryToProject */
export interface LinkRepositoryToProjectPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The linked Project. */
    project?: ProjectRequest
    /** The linked Repository. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of LockLockable */
export interface LockLockableInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** A reason for why the issue or pull request will be locked. */
lockReason?: (LockReason | null),
/** ID of the issue or pull request to be locked. */
lockableId: Scalars['ID']}


/** Autogenerated return type of LockLockable */
export interface LockLockablePayloadRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The item that was locked. */
    lockedRecord?: LockableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object that can be locked. */
export interface LockableRequest{
    /** Reason that the conversation was locked. */
    activeLockReason?: boolean | number
    /** `true` if the object is locked */
    locked?: boolean | number
    on_Issue?: IssueRequest
    on_PullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'locked' event on a given issue or pull request. */
export interface LockedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Reason that the conversation was locked (optional). */
    lockReason?: boolean | number
    /** Object that was locked. */
    lockable?: LockableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A placeholder user for attribution of imported data on GitHub. */
export interface MannequinRequest{
    /** A URL pointing to the GitHub App's public avatar. */
    avatarUrl?: [{
    /** The size of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The mannequin's email on the source instance. */
    email?: boolean | number
    id?: boolean | number
    /** The username of the actor. */
    login?: boolean | number
    /** The HTML path to this resource. */
    resourcePath?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The URL to this resource. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of MarkPullRequestReadyForReview */
export interface MarkPullRequestReadyForReviewInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** ID of the pull request to be marked as ready for review. */
pullRequestId: Scalars['ID']}


/** Autogenerated return type of MarkPullRequestReadyForReview */
export interface MarkPullRequestReadyForReviewPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The pull request that is ready for review. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'marked_as_duplicate' event on a given issue or pull request. */
export interface MarkedAsDuplicateEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A public description of a Marketplace category. */
export interface MarketplaceCategoryRequest{
    /** The category's description. */
    description?: boolean | number
    /** The technical description of how apps listed in this category work with GitHub. */
    howItWorks?: boolean | number
    id?: boolean | number
    /** The category's name. */
    name?: boolean | number
    /** How many Marketplace listings have this as their primary category. */
    primaryListingCount?: boolean | number
    /** The HTTP path for this Marketplace category. */
    resourcePath?: boolean | number
    /** How many Marketplace listings have this as their secondary category. */
    secondaryListingCount?: boolean | number
    /** The short name of the category used in its URL. */
    slug?: boolean | number
    /** The HTTP URL for this Marketplace category. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A listing in the GitHub integration marketplace. */
export interface MarketplaceListingRequest{
    /** The GitHub App this listing represents. */
    app?: AppRequest
    /** URL to the listing owner's company site. */
    companyUrl?: boolean | number
    /** The HTTP path for configuring access to the listing's integration or OAuth app */
    configurationResourcePath?: boolean | number
    /** The HTTP URL for configuring access to the listing's integration or OAuth app */
    configurationUrl?: boolean | number
    /** URL to the listing's documentation. */
    documentationUrl?: boolean | number
    /** The listing's detailed description. */
    extendedDescription?: boolean | number
    /** The listing's detailed description rendered to HTML. */
    extendedDescriptionHTML?: boolean | number
    /** The listing's introductory description. */
    fullDescription?: boolean | number
    /** The listing's introductory description rendered to HTML. */
    fullDescriptionHTML?: boolean | number
    /** Does this listing have any plans with a free trial? */
    hasPublishedFreeTrialPlans?: boolean | number
    /** Does this listing have a terms of service link? */
    hasTermsOfService?: boolean | number
    /** A technical description of how this app works with GitHub. */
    howItWorks?: boolean | number
    /** The listing's technical description rendered to HTML. */
    howItWorksHTML?: boolean | number
    id?: boolean | number
    /** URL to install the product to the viewer's account or organization. */
    installationUrl?: boolean | number
    /** Whether this listing's app has been installed for the current viewer */
    installedForViewer?: boolean | number
    /** Whether this listing has been removed from the Marketplace. */
    isArchived?: boolean | number
    /**
     * Whether this listing is still an editable draft that has not been submitted
     * for review and is not publicly visible in the Marketplace.
     */
    isDraft?: boolean | number
    /** Whether the product this listing represents is available as part of a paid plan. */
    isPaid?: boolean | number
    /** Whether this listing has been approved for display in the Marketplace. */
    isPublic?: boolean | number
    /** Whether this listing has been rejected by GitHub for display in the Marketplace. */
    isRejected?: boolean | number
    /** Whether this listing has been approved for unverified display in the Marketplace. */
    isUnverified?: boolean | number
    /** Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace. */
    isUnverifiedPending?: boolean | number
    /** Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace. */
    isVerificationPendingFromDraft?: boolean | number
    /** Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace. */
    isVerificationPendingFromUnverified?: boolean | number
    /** Whether this listing has been approved for verified display in the Marketplace. */
    isVerified?: boolean | number
    /** The hex color code, without the leading '#', for the logo background. */
    logoBackgroundColor?: boolean | number
    /** URL for the listing's logo image. */
    logoUrl?: [{
    /** The size in pixels of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** The listing's full name. */
    name?: boolean | number
    /** The listing's very short description without a trailing period or ampersands. */
    normalizedShortDescription?: boolean | number
    /** URL to the listing's detailed pricing. */
    pricingUrl?: boolean | number
    /** The category that best describes the listing. */
    primaryCategory?: MarketplaceCategoryRequest
    /** URL to the listing's privacy policy, may return an empty string for listings that do not require a privacy policy URL. */
    privacyPolicyUrl?: boolean | number
    /** The HTTP path for the Marketplace listing. */
    resourcePath?: boolean | number
    /** The URLs for the listing's screenshots. */
    screenshotUrls?: boolean | number
    /** An alternate category that describes the listing. */
    secondaryCategory?: MarketplaceCategoryRequest
    /** The listing's very short description. */
    shortDescription?: boolean | number
    /** The short name of the listing used in its URL. */
    slug?: boolean | number
    /** URL to the listing's status page. */
    statusUrl?: boolean | number
    /** An email address for support for this listing's app. */
    supportEmail?: boolean | number
    /**
     * Either a URL or an email address for support for this listing's app, may
     * return an empty string for listings that do not require a support URL.
     */
    supportUrl?: boolean | number
    /** URL to the listing's terms of service. */
    termsOfServiceUrl?: boolean | number
    /** The HTTP URL for the Marketplace listing. */
    url?: boolean | number
    /** Can the current viewer add plans for this Marketplace listing. */
    viewerCanAddPlans?: boolean | number
    /** Can the current viewer approve this Marketplace listing. */
    viewerCanApprove?: boolean | number
    /** Can the current viewer delist this Marketplace listing. */
    viewerCanDelist?: boolean | number
    /** Can the current viewer edit this Marketplace listing. */
    viewerCanEdit?: boolean | number
    /**
     * Can the current viewer edit the primary and secondary category of this
     * Marketplace listing.
     */
    viewerCanEditCategories?: boolean | number
    /** Can the current viewer edit the plans for this Marketplace listing. */
    viewerCanEditPlans?: boolean | number
    /**
     * Can the current viewer return this Marketplace listing to draft state
     * so it becomes editable again.
     */
    viewerCanRedraft?: boolean | number
    /**
     * Can the current viewer reject this Marketplace listing by returning it to
     * an editable draft state or rejecting it entirely.
     */
    viewerCanReject?: boolean | number
    /**
     * Can the current viewer request this listing be reviewed for display in
     * the Marketplace as verified.
     */
    viewerCanRequestApproval?: boolean | number
    /** Indicates whether the current user has an active subscription to this Marketplace listing. */
    viewerHasPurchased?: boolean | number
    /**
     * Indicates if the current user has purchased a subscription to this Marketplace listing
     * for all of the organizations the user owns.
     */
    viewerHasPurchasedForAllOrganizations?: boolean | number
    /** Does the current viewer role allow them to administer this Marketplace listing. */
    viewerIsListingAdmin?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Look up Marketplace Listings */
export interface MarketplaceListingConnectionRequest{
    /** A list of edges. */
    edges?: MarketplaceListingEdgeRequest
    /** A list of nodes. */
    nodes?: MarketplaceListingRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface MarketplaceListingEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: MarketplaceListingRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Entities that have members who can set status messages. */
export interface MemberStatusableRequest{
    /** Get the status messages members of this entity have set that are either public or visible only to the organization. */
    memberStatuses?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for user statuses returned from the connection. */
    orderBy?: (UserStatusOrder | null)},UserStatusConnectionRequest] | UserStatusConnectionRequest
    on_Organization?: OrganizationRequest
    on_Team?: TeamRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a members_can_delete_repos.clear event. */
export interface MembersCanDeleteReposClearAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: boolean | number
    /** The slug of the enterprise. */
    enterpriseSlug?: boolean | number
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a members_can_delete_repos.disable event. */
export interface MembersCanDeleteReposDisableAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: boolean | number
    /** The slug of the enterprise. */
    enterpriseSlug?: boolean | number
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a members_can_delete_repos.enable event. */
export interface MembersCanDeleteReposEnableAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: boolean | number
    /** The slug of the enterprise. */
    enterpriseSlug?: boolean | number
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'mentioned' event on a given issue or pull request. */
export interface MentionedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of MergeBranch */
export interface MergeBranchInput {
/** The name of the base branch that the provided head will be merged into. */
base: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Message to use for the merge commit. If omitted, a default will be used. */
commitMessage?: (Scalars['String'] | null),
/** The head to merge into the base branch. This can be a branch name or a commit GitObjectID. */
head: Scalars['String'],
/** The Node ID of the Repository containing the base branch that will be modified. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of MergeBranch */
export interface MergeBranchPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The resulting merge Commit. */
    mergeCommit?: CommitRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of MergePullRequest */
export interface MergePullRequestInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Commit body to use for the merge commit; if omitted, a default message will be used */
commitBody?: (Scalars['String'] | null),
/** Commit headline to use for the merge commit; if omitted, a default message will be used. */
commitHeadline?: (Scalars['String'] | null),
/** OID that the pull request head ref must match to allow merge; if omitted, no check is performed. */
expectedHeadOid?: (Scalars['GitObjectID'] | null),
/** The merge method to use. If omitted, defaults to 'MERGE' */
mergeMethod?: (PullRequestMergeMethod | null),
/** ID of the pull request to be merged. */
pullRequestId: Scalars['ID']}


/** Autogenerated return type of MergePullRequest */
export interface MergePullRequestPayloadRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The pull request that was merged. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'merged' event on a given pull request. */
export interface MergedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the commit associated with the `merge` event. */
    commit?: CommitRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Identifies the Ref associated with the `merge` event. */
    mergeRef?: RefRequest
    /** Identifies the name of the Ref associated with the `merge` event. */
    mergeRefName?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    /** The HTTP path for this merged event. */
    resourcePath?: boolean | number
    /** The HTTP URL for this merged event. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Milestone object on a given repository. */
export interface MilestoneRequest{
    /** `true` if the object is closed (definition of closed may depend on type) */
    closed?: boolean | number
    /** Identifies the date and time when the object was closed. */
    closedAt?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the actor who created the milestone. */
    creator?: ActorRequest
    /** Identifies the description of the milestone. */
    description?: boolean | number
    /** Identifies the due date of the milestone. */
    dueOn?: boolean | number
    id?: boolean | number
    /** Just for debugging on review-lab */
    issuePrioritiesDebug?: boolean | number
    /** A list of issues associated with the milestone. */
    issues?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Filtering options for issues returned from the connection. */
    filterBy?: (IssueFilters | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** A list of label names to filter the pull requests by. */
    labels?: (Scalars['String'][] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for issues returned from the connection. */
    orderBy?: (IssueOrder | null),
    /** A list of states to filter the issues by. */
    states?: (IssueState[] | null)},IssueConnectionRequest] | IssueConnectionRequest
    /** Identifies the number of the milestone. */
    number?: boolean | number
    /** A list of pull requests associated with the milestone. */
    pullRequests?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** The base ref name to filter the pull requests by. */
    baseRefName?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** The head ref name to filter the pull requests by. */
    headRefName?: (Scalars['String'] | null),
    /** A list of label names to filter the pull requests by. */
    labels?: (Scalars['String'][] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for pull requests returned from the connection. */
    orderBy?: (IssueOrder | null),
    /** A list of states to filter the pull requests by. */
    states?: (PullRequestState[] | null)},PullRequestConnectionRequest] | PullRequestConnectionRequest
    /** The repository associated with this milestone. */
    repository?: RepositoryRequest
    /** The HTTP path for this milestone */
    resourcePath?: boolean | number
    /** Identifies the state of the milestone. */
    state?: boolean | number
    /** Identifies the title of the milestone. */
    title?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this milestone */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Milestone. */
export interface MilestoneConnectionRequest{
    /** A list of edges. */
    edges?: MilestoneEdgeRequest
    /** A list of nodes. */
    nodes?: MilestoneRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface MilestoneEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: MilestoneRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Types that can be inside a Milestone. */
export interface MilestoneItemRequest{
    on_Issue?:IssueRequest,
    on_PullRequest?:PullRequestRequest,
    on_Assignable?: AssignableRequest,
    on_Closable?: ClosableRequest,
    on_Comment?: CommentRequest,
    on_Labelable?: LabelableRequest,
    on_Lockable?: LockableRequest,
    on_Node?: NodeRequest,
    on_Reactable?: ReactableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Subscribable?: SubscribableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    __typename?: boolean | number
}


/** Ordering options for milestone connections. */
export interface MilestoneOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order milestones by. */
field: MilestoneOrderField}


/** Represents a 'milestoned' event on a given issue or pull request. */
export interface MilestonedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Identifies the milestone title associated with the 'milestoned' event. */
    milestoneTitle?: boolean | number
    /** Object referenced by event. */
    subject?: MilestoneItemRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Entities that can be minimized. */
export interface MinimizableRequest{
    /** Returns whether or not a comment has been minimized. */
    isMinimized?: boolean | number
    /** Returns why the comment was minimized. */
    minimizedReason?: boolean | number
    /** Check if the current viewer can minimize this object. */
    viewerCanMinimize?: boolean | number
    on_CommitComment?: CommitCommentRequest
    on_GistComment?: GistCommentRequest
    on_IssueComment?: IssueCommentRequest
    on_PullRequestReviewComment?: PullRequestReviewCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of MinimizeComment */
export interface MinimizeCommentInput {
/** The classification of comment */
classifier: ReportedContentClassifiers,
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the subject to modify. */
subjectId: Scalars['ID']}


/** Autogenerated return type of MinimizeComment */
export interface MinimizeCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The comment that was minimized. */
    minimizedComment?: MinimizableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of MoveProjectCard */
export interface MoveProjectCardInput {
/** Place the new card after the card with this id. Pass null to place it at the top. */
afterCardId?: (Scalars['ID'] | null),
/** The id of the card to move. */
cardId: Scalars['ID'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The id of the column to move it into. */
columnId: Scalars['ID']}


/** Autogenerated return type of MoveProjectCard */
export interface MoveProjectCardPayloadRequest{
    /** The new edge of the moved card. */
    cardEdge?: ProjectCardEdgeRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of MoveProjectColumn */
export interface MoveProjectColumnInput {
/** Place the new column after the column with this id. Pass null to place it at the front. */
afterColumnId?: (Scalars['ID'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The id of the column to move. */
columnId: Scalars['ID']}


/** Autogenerated return type of MoveProjectColumn */
export interface MoveProjectColumnPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The new edge of the moved column. */
    columnEdge?: ProjectColumnEdgeRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'moved_columns_in_project' event on a given issue or pull request. */
export interface MovedColumnsInProjectEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** Column name the issue or pull request was moved from. */
    previousProjectColumnName?: boolean | number
    /** Project referenced by event. */
    project?: ProjectRequest
    /** Project card referenced by this project event. */
    projectCard?: ProjectCardRequest
    /** Column name the issue or pull request was moved to. */
    projectColumnName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The root query for implementing GraphQL mutations. */
export interface MutationRequest{
    /** Accepts a pending invitation for a user to become an administrator of an enterprise. */
    acceptEnterpriseAdministratorInvitation?: [{input: AcceptEnterpriseAdministratorInvitationInput},AcceptEnterpriseAdministratorInvitationPayloadRequest]
    /** Applies a suggested topic to the repository. */
    acceptTopicSuggestion?: [{input: AcceptTopicSuggestionInput},AcceptTopicSuggestionPayloadRequest]
    /** Adds assignees to an assignable object. */
    addAssigneesToAssignable?: [{input: AddAssigneesToAssignableInput},AddAssigneesToAssignablePayloadRequest]
    /** Adds a comment to an Issue or Pull Request. */
    addComment?: [{input: AddCommentInput},AddCommentPayloadRequest]
    /** Adds labels to a labelable object. */
    addLabelsToLabelable?: [{input: AddLabelsToLabelableInput},AddLabelsToLabelablePayloadRequest]
    /** Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both. */
    addProjectCard?: [{input: AddProjectCardInput},AddProjectCardPayloadRequest]
    /** Adds a column to a Project. */
    addProjectColumn?: [{input: AddProjectColumnInput},AddProjectColumnPayloadRequest]
    /** Adds a review to a Pull Request. */
    addPullRequestReview?: [{input: AddPullRequestReviewInput},AddPullRequestReviewPayloadRequest]
    /** Adds a comment to a review. */
    addPullRequestReviewComment?: [{input: AddPullRequestReviewCommentInput},AddPullRequestReviewCommentPayloadRequest]
    /** Adds a new thread to a pending Pull Request Review. */
    addPullRequestReviewThread?: [{input: AddPullRequestReviewThreadInput},AddPullRequestReviewThreadPayloadRequest]
    /** Adds a reaction to a subject. */
    addReaction?: [{input: AddReactionInput},AddReactionPayloadRequest]
    /** Adds a star to a Starrable. */
    addStar?: [{input: AddStarInput},AddStarPayloadRequest]
    /** Marks a repository as archived. */
    archiveRepository?: [{input: ArchiveRepositoryInput},ArchiveRepositoryPayloadRequest]
    /** Cancels a pending invitation for an administrator to join an enterprise. */
    cancelEnterpriseAdminInvitation?: [{input: CancelEnterpriseAdminInvitationInput},CancelEnterpriseAdminInvitationPayloadRequest]
    /** Update your status on GitHub. */
    changeUserStatus?: [{input: ChangeUserStatusInput},ChangeUserStatusPayloadRequest]
    /** Clears all labels from a labelable object. */
    clearLabelsFromLabelable?: [{input: ClearLabelsFromLabelableInput},ClearLabelsFromLabelablePayloadRequest]
    /** Creates a new project by cloning configuration from an existing project. */
    cloneProject?: [{input: CloneProjectInput},CloneProjectPayloadRequest]
    /** Create a new repository with the same files and directory structure as a template repository. */
    cloneTemplateRepository?: [{input: CloneTemplateRepositoryInput},CloneTemplateRepositoryPayloadRequest]
    /** Close an issue. */
    closeIssue?: [{input: CloseIssueInput},CloseIssuePayloadRequest]
    /** Close a pull request. */
    closePullRequest?: [{input: ClosePullRequestInput},ClosePullRequestPayloadRequest]
    /** Convert a project note card to one associated with a newly created issue. */
    convertProjectCardNoteToIssue?: [{input: ConvertProjectCardNoteToIssueInput},ConvertProjectCardNoteToIssuePayloadRequest]
    /** Create a new branch protection rule */
    createBranchProtectionRule?: [{input: CreateBranchProtectionRuleInput},CreateBranchProtectionRulePayloadRequest]
    /** Create a check run. */
    createCheckRun?: [{input: CreateCheckRunInput},CreateCheckRunPayloadRequest]
    /** Create a check suite */
    createCheckSuite?: [{input: CreateCheckSuiteInput},CreateCheckSuitePayloadRequest]
    /** Create a content attachment. */
    createContentAttachment?: [{input: CreateContentAttachmentInput},CreateContentAttachmentPayloadRequest]
    /** Creates a new deployment event. */
    createDeployment?: [{input: CreateDeploymentInput},CreateDeploymentPayloadRequest]
    /** Create a deployment status. */
    createDeploymentStatus?: [{input: CreateDeploymentStatusInput},CreateDeploymentStatusPayloadRequest]
    /** Creates an organization as part of an enterprise account. */
    createEnterpriseOrganization?: [{input: CreateEnterpriseOrganizationInput},CreateEnterpriseOrganizationPayloadRequest]
    /** Creates a new IP allow list entry. */
    createIpAllowListEntry?: [{input: CreateIpAllowListEntryInput},CreateIpAllowListEntryPayloadRequest]
    /** Creates a new issue. */
    createIssue?: [{input: CreateIssueInput},CreateIssuePayloadRequest]
    /** Creates a new label. */
    createLabel?: [{input: CreateLabelInput},CreateLabelPayloadRequest]
    /** Creates a new project. */
    createProject?: [{input: CreateProjectInput},CreateProjectPayloadRequest]
    /** Create a new pull request */
    createPullRequest?: [{input: CreatePullRequestInput},CreatePullRequestPayloadRequest]
    /** Create a new Git Ref. */
    createRef?: [{input: CreateRefInput},CreateRefPayloadRequest]
    /** Create a new repository. */
    createRepository?: [{input: CreateRepositoryInput},CreateRepositoryPayloadRequest]
    /** Creates a new team discussion. */
    createTeamDiscussion?: [{input: CreateTeamDiscussionInput},CreateTeamDiscussionPayloadRequest]
    /** Creates a new team discussion comment. */
    createTeamDiscussionComment?: [{input: CreateTeamDiscussionCommentInput},CreateTeamDiscussionCommentPayloadRequest]
    /** Rejects a suggested topic for the repository. */
    declineTopicSuggestion?: [{input: DeclineTopicSuggestionInput},DeclineTopicSuggestionPayloadRequest]
    /** Delete a branch protection rule */
    deleteBranchProtectionRule?: [{input: DeleteBranchProtectionRuleInput},DeleteBranchProtectionRulePayloadRequest]
    /** Deletes a deployment. */
    deleteDeployment?: [{input: DeleteDeploymentInput},DeleteDeploymentPayloadRequest]
    /** Deletes an IP allow list entry. */
    deleteIpAllowListEntry?: [{input: DeleteIpAllowListEntryInput},DeleteIpAllowListEntryPayloadRequest]
    /** Deletes an Issue object. */
    deleteIssue?: [{input: DeleteIssueInput},DeleteIssuePayloadRequest]
    /** Deletes an IssueComment object. */
    deleteIssueComment?: [{input: DeleteIssueCommentInput},DeleteIssueCommentPayloadRequest]
    /** Deletes a label. */
    deleteLabel?: [{input: DeleteLabelInput},DeleteLabelPayloadRequest]
    /** Delete a package version. */
    deletePackageVersion?: [{input: DeletePackageVersionInput},DeletePackageVersionPayloadRequest]
    /** Deletes a project. */
    deleteProject?: [{input: DeleteProjectInput},DeleteProjectPayloadRequest]
    /** Deletes a project card. */
    deleteProjectCard?: [{input: DeleteProjectCardInput},DeleteProjectCardPayloadRequest]
    /** Deletes a project column. */
    deleteProjectColumn?: [{input: DeleteProjectColumnInput},DeleteProjectColumnPayloadRequest]
    /** Deletes a pull request review. */
    deletePullRequestReview?: [{input: DeletePullRequestReviewInput},DeletePullRequestReviewPayloadRequest]
    /** Deletes a pull request review comment. */
    deletePullRequestReviewComment?: [{input: DeletePullRequestReviewCommentInput},DeletePullRequestReviewCommentPayloadRequest]
    /** Delete a Git Ref. */
    deleteRef?: [{input: DeleteRefInput},DeleteRefPayloadRequest]
    /** Deletes a team discussion. */
    deleteTeamDiscussion?: [{input: DeleteTeamDiscussionInput},DeleteTeamDiscussionPayloadRequest]
    /** Deletes a team discussion comment. */
    deleteTeamDiscussionComment?: [{input: DeleteTeamDiscussionCommentInput},DeleteTeamDiscussionCommentPayloadRequest]
    /** Dismisses an approved or rejected pull request review. */
    dismissPullRequestReview?: [{input: DismissPullRequestReviewInput},DismissPullRequestReviewPayloadRequest]
    /** Follow a user. */
    followUser?: [{input: FollowUserInput},FollowUserPayloadRequest]
    /** Creates a new project by importing columns and a list of issues/PRs. */
    importProject?: [{input: ImportProjectInput},ImportProjectPayloadRequest]
    /** Invite someone to become an administrator of the enterprise. */
    inviteEnterpriseAdmin?: [{input: InviteEnterpriseAdminInput},InviteEnterpriseAdminPayloadRequest]
    /** Creates a repository link for a project. */
    linkRepositoryToProject?: [{input: LinkRepositoryToProjectInput},LinkRepositoryToProjectPayloadRequest]
    /** Lock a lockable object */
    lockLockable?: [{input: LockLockableInput},LockLockablePayloadRequest]
    /** Marks a pull request ready for review. */
    markPullRequestReadyForReview?: [{input: MarkPullRequestReadyForReviewInput},MarkPullRequestReadyForReviewPayloadRequest]
    /** Merge a head into a branch. */
    mergeBranch?: [{input: MergeBranchInput},MergeBranchPayloadRequest]
    /** Merge a pull request. */
    mergePullRequest?: [{input: MergePullRequestInput},MergePullRequestPayloadRequest]
    /** Minimizes a comment on an Issue, Commit, Pull Request, or Gist */
    minimizeComment?: [{input: MinimizeCommentInput},MinimizeCommentPayloadRequest]
    /** Moves a project card to another place. */
    moveProjectCard?: [{input: MoveProjectCardInput},MoveProjectCardPayloadRequest]
    /** Moves a project column to another place. */
    moveProjectColumn?: [{input: MoveProjectColumnInput},MoveProjectColumnPayloadRequest]
    /** Pin an issue to a repository */
    pinIssue?: [{input: PinIssueInput},PinIssuePayloadRequest]
    /** Regenerates the identity provider recovery codes for an enterprise */
    regenerateEnterpriseIdentityProviderRecoveryCodes?: [{input: RegenerateEnterpriseIdentityProviderRecoveryCodesInput},RegenerateEnterpriseIdentityProviderRecoveryCodesPayloadRequest]
    /** Removes assignees from an assignable object. */
    removeAssigneesFromAssignable?: [{input: RemoveAssigneesFromAssignableInput},RemoveAssigneesFromAssignablePayloadRequest]
    /** Removes an administrator from the enterprise. */
    removeEnterpriseAdmin?: [{input: RemoveEnterpriseAdminInput},RemoveEnterpriseAdminPayloadRequest]
    /** Removes the identity provider from an enterprise */
    removeEnterpriseIdentityProvider?: [{input: RemoveEnterpriseIdentityProviderInput},RemoveEnterpriseIdentityProviderPayloadRequest]
    /** Removes an organization from the enterprise */
    removeEnterpriseOrganization?: [{input: RemoveEnterpriseOrganizationInput},RemoveEnterpriseOrganizationPayloadRequest]
    /** Removes labels from a Labelable object. */
    removeLabelsFromLabelable?: [{input: RemoveLabelsFromLabelableInput},RemoveLabelsFromLabelablePayloadRequest]
    /** Removes outside collaborator from all repositories in an organization. */
    removeOutsideCollaborator?: [{input: RemoveOutsideCollaboratorInput},RemoveOutsideCollaboratorPayloadRequest]
    /** Removes a reaction from a subject. */
    removeReaction?: [{input: RemoveReactionInput},RemoveReactionPayloadRequest]
    /** Removes a star from a Starrable. */
    removeStar?: [{input: RemoveStarInput},RemoveStarPayloadRequest]
    /** Reopen a issue. */
    reopenIssue?: [{input: ReopenIssueInput},ReopenIssuePayloadRequest]
    /** Reopen a pull request. */
    reopenPullRequest?: [{input: ReopenPullRequestInput},ReopenPullRequestPayloadRequest]
    /** Set review requests on a pull request. */
    requestReviews?: [{input: RequestReviewsInput},RequestReviewsPayloadRequest]
    /** Rerequests an existing check suite. */
    rerequestCheckSuite?: [{input: RerequestCheckSuiteInput},RerequestCheckSuitePayloadRequest]
    /** Marks a review thread as resolved. */
    resolveReviewThread?: [{input: ResolveReviewThreadInput},ResolveReviewThreadPayloadRequest]
    /** Creates or updates the identity provider for an enterprise. */
    setEnterpriseIdentityProvider?: [{input: SetEnterpriseIdentityProviderInput},SetEnterpriseIdentityProviderPayloadRequest]
    /** Submits a pending pull request review. */
    submitPullRequestReview?: [{input: SubmitPullRequestReviewInput},SubmitPullRequestReviewPayloadRequest]
    /** Transfer an issue to a different repository */
    transferIssue?: [{input: TransferIssueInput},TransferIssuePayloadRequest]
    /** Unarchives a repository. */
    unarchiveRepository?: [{input: UnarchiveRepositoryInput},UnarchiveRepositoryPayloadRequest]
    /** Unfollow a user. */
    unfollowUser?: [{input: UnfollowUserInput},UnfollowUserPayloadRequest]
    /** Deletes a repository link from a project. */
    unlinkRepositoryFromProject?: [{input: UnlinkRepositoryFromProjectInput},UnlinkRepositoryFromProjectPayloadRequest]
    /** Unlock a lockable object */
    unlockLockable?: [{input: UnlockLockableInput},UnlockLockablePayloadRequest]
    /** Unmark an issue as a duplicate of another issue. */
    unmarkIssueAsDuplicate?: [{input: UnmarkIssueAsDuplicateInput},UnmarkIssueAsDuplicatePayloadRequest]
    /** Unminimizes a comment on an Issue, Commit, Pull Request, or Gist */
    unminimizeComment?: [{input: UnminimizeCommentInput},UnminimizeCommentPayloadRequest]
    /** Unpin a pinned issue from a repository */
    unpinIssue?: [{input: UnpinIssueInput},UnpinIssuePayloadRequest]
    /** Marks a review thread as unresolved. */
    unresolveReviewThread?: [{input: UnresolveReviewThreadInput},UnresolveReviewThreadPayloadRequest]
    /** Create a new branch protection rule */
    updateBranchProtectionRule?: [{input: UpdateBranchProtectionRuleInput},UpdateBranchProtectionRulePayloadRequest]
    /** Update a check run */
    updateCheckRun?: [{input: UpdateCheckRunInput},UpdateCheckRunPayloadRequest]
    /** Modifies the settings of an existing check suite */
    updateCheckSuitePreferences?: [{input: UpdateCheckSuitePreferencesInput},UpdateCheckSuitePreferencesPayloadRequest]
    /** Sets the action execution capability setting for an enterprise. */
    updateEnterpriseActionExecutionCapabilitySetting?: [{input: UpdateEnterpriseActionExecutionCapabilitySettingInput},UpdateEnterpriseActionExecutionCapabilitySettingPayloadRequest]
    /** Updates the role of an enterprise administrator. */
    updateEnterpriseAdministratorRole?: [{input: UpdateEnterpriseAdministratorRoleInput},UpdateEnterpriseAdministratorRolePayloadRequest]
    /** Sets whether private repository forks are enabled for an enterprise. */
    updateEnterpriseAllowPrivateRepositoryForkingSetting?: [{input: UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput},UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayloadRequest]
    /** Sets the default repository permission for organizations in an enterprise. */
    updateEnterpriseDefaultRepositoryPermissionSetting?: [{input: UpdateEnterpriseDefaultRepositoryPermissionSettingInput},UpdateEnterpriseDefaultRepositoryPermissionSettingPayloadRequest]
    /** Sets whether organization members with admin permissions on a repository can change repository visibility. */
    updateEnterpriseMembersCanChangeRepositoryVisibilitySetting?: [{input: UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput},UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayloadRequest]
    /** Sets the members can create repositories setting for an enterprise. */
    updateEnterpriseMembersCanCreateRepositoriesSetting?: [{input: UpdateEnterpriseMembersCanCreateRepositoriesSettingInput},UpdateEnterpriseMembersCanCreateRepositoriesSettingPayloadRequest]
    /** Sets the members can delete issues setting for an enterprise. */
    updateEnterpriseMembersCanDeleteIssuesSetting?: [{input: UpdateEnterpriseMembersCanDeleteIssuesSettingInput},UpdateEnterpriseMembersCanDeleteIssuesSettingPayloadRequest]
    /** Sets the members can delete repositories setting for an enterprise. */
    updateEnterpriseMembersCanDeleteRepositoriesSetting?: [{input: UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput},UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayloadRequest]
    /** Sets whether members can invite collaborators are enabled for an enterprise. */
    updateEnterpriseMembersCanInviteCollaboratorsSetting?: [{input: UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput},UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayloadRequest]
    /** Sets whether or not an organization admin can make purchases. */
    updateEnterpriseMembersCanMakePurchasesSetting?: [{input: UpdateEnterpriseMembersCanMakePurchasesSettingInput},UpdateEnterpriseMembersCanMakePurchasesSettingPayloadRequest]
    /** Sets the members can update protected branches setting for an enterprise. */
    updateEnterpriseMembersCanUpdateProtectedBranchesSetting?: [{input: UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput},UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayloadRequest]
    /** Sets the members can view dependency insights for an enterprise. */
    updateEnterpriseMembersCanViewDependencyInsightsSetting?: [{input: UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput},UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayloadRequest]
    /** Sets whether organization projects are enabled for an enterprise. */
    updateEnterpriseOrganizationProjectsSetting?: [{input: UpdateEnterpriseOrganizationProjectsSettingInput},UpdateEnterpriseOrganizationProjectsSettingPayloadRequest]
    /** Updates an enterprise's profile. */
    updateEnterpriseProfile?: [{input: UpdateEnterpriseProfileInput},UpdateEnterpriseProfilePayloadRequest]
    /** Sets whether repository projects are enabled for a enterprise. */
    updateEnterpriseRepositoryProjectsSetting?: [{input: UpdateEnterpriseRepositoryProjectsSettingInput},UpdateEnterpriseRepositoryProjectsSettingPayloadRequest]
    /** Sets whether team discussions are enabled for an enterprise. */
    updateEnterpriseTeamDiscussionsSetting?: [{input: UpdateEnterpriseTeamDiscussionsSettingInput},UpdateEnterpriseTeamDiscussionsSettingPayloadRequest]
    /** Sets whether two factor authentication is required for all users in an enterprise. */
    updateEnterpriseTwoFactorAuthenticationRequiredSetting?: [{input: UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput},UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayloadRequest]
    /** Sets whether an IP allow list is enabled on an owner. */
    updateIpAllowListEnabledSetting?: [{input: UpdateIpAllowListEnabledSettingInput},UpdateIpAllowListEnabledSettingPayloadRequest]
    /** Updates an IP allow list entry. */
    updateIpAllowListEntry?: [{input: UpdateIpAllowListEntryInput},UpdateIpAllowListEntryPayloadRequest]
    /** Updates an Issue. */
    updateIssue?: [{input: UpdateIssueInput},UpdateIssuePayloadRequest]
    /** Updates an IssueComment object. */
    updateIssueComment?: [{input: UpdateIssueCommentInput},UpdateIssueCommentPayloadRequest]
    /** Updates an existing label. */
    updateLabel?: [{input: UpdateLabelInput},UpdateLabelPayloadRequest]
    /** Updates an existing project. */
    updateProject?: [{input: UpdateProjectInput},UpdateProjectPayloadRequest]
    /** Updates an existing project card. */
    updateProjectCard?: [{input: UpdateProjectCardInput},UpdateProjectCardPayloadRequest]
    /** Updates an existing project column. */
    updateProjectColumn?: [{input: UpdateProjectColumnInput},UpdateProjectColumnPayloadRequest]
    /** Update a pull request */
    updatePullRequest?: [{input: UpdatePullRequestInput},UpdatePullRequestPayloadRequest]
    /** Updates the body of a pull request review. */
    updatePullRequestReview?: [{input: UpdatePullRequestReviewInput},UpdatePullRequestReviewPayloadRequest]
    /** Updates a pull request review comment. */
    updatePullRequestReviewComment?: [{input: UpdatePullRequestReviewCommentInput},UpdatePullRequestReviewCommentPayloadRequest]
    /** Update a Git Ref. */
    updateRef?: [{input: UpdateRefInput},UpdateRefPayloadRequest]
    /**
     * Creates, updates and/or deletes multiple refs in a repository.
     * 
     * This mutation takes a list of `RefUpdate`s and performs these updates
     * on the repository. All updates are performed atomically, meaning that
     * if one of them is rejected, no other ref will be modified.
     * 
     * `RefUpdate.beforeOid` specifies that the given reference needs to point
     * to the given value before performing any updates. A value of
     * `0000000000000000000000000000000000000000` can be used to verify that
     * the references should not exist.
     * 
     * `RefUpdate.afterOid` specifies the value that the given reference
     * will point to after performing all updates. A value of
     * `0000000000000000000000000000000000000000` can be used to delete a
     * reference.
     * 
     * If `RefUpdate.force` is set to `true`, a non-fast-forward updates
     * for the given reference will be allowed.
     */
    updateRefs?: [{input: UpdateRefsInput},UpdateRefsPayloadRequest]
    /** Update information about a repository. */
    updateRepository?: [{input: UpdateRepositoryInput},UpdateRepositoryPayloadRequest]
    /** Updates the state for subscribable subjects. */
    updateSubscription?: [{input: UpdateSubscriptionInput},UpdateSubscriptionPayloadRequest]
    /** Updates a team discussion. */
    updateTeamDiscussion?: [{input: UpdateTeamDiscussionInput},UpdateTeamDiscussionPayloadRequest]
    /** Updates a discussion comment. */
    updateTeamDiscussionComment?: [{input: UpdateTeamDiscussionCommentInput},UpdateTeamDiscussionCommentPayloadRequest]
    /** Updates team review assignment. */
    updateTeamReviewAssignment?: [{input: UpdateTeamReviewAssignmentInput},UpdateTeamReviewAssignmentPayloadRequest]
    /** Replaces the repository's topics with the given topics. */
    updateTopics?: [{input: UpdateTopicsInput},UpdateTopicsPayloadRequest]
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object with an ID. */
export interface NodeRequest{
    /** ID of the object. */
    id?: boolean | number
    on_AddedToProjectEvent?: AddedToProjectEventRequest
    on_App?: AppRequest
    on_AssignedEvent?: AssignedEventRequest
    on_AutomaticBaseChangeFailedEvent?: AutomaticBaseChangeFailedEventRequest
    on_AutomaticBaseChangeSucceededEvent?: AutomaticBaseChangeSucceededEventRequest
    on_BaseRefChangedEvent?: BaseRefChangedEventRequest
    on_BaseRefForcePushedEvent?: BaseRefForcePushedEventRequest
    on_Blob?: BlobRequest
    on_Bot?: BotRequest
    on_BranchProtectionRule?: BranchProtectionRuleRequest
    on_CheckRun?: CheckRunRequest
    on_CheckSuite?: CheckSuiteRequest
    on_ClosedEvent?: ClosedEventRequest
    on_CodeOfConduct?: CodeOfConductRequest
    on_CommentDeletedEvent?: CommentDeletedEventRequest
    on_Commit?: CommitRequest
    on_CommitComment?: CommitCommentRequest
    on_CommitCommentThread?: CommitCommentThreadRequest
    on_ConnectedEvent?: ConnectedEventRequest
    on_ConvertToDraftEvent?: ConvertToDraftEventRequest
    on_ConvertedNoteToIssueEvent?: ConvertedNoteToIssueEventRequest
    on_CrossReferencedEvent?: CrossReferencedEventRequest
    on_DemilestonedEvent?: DemilestonedEventRequest
    on_DependencyGraphManifest?: DependencyGraphManifestRequest
    on_DeployKey?: DeployKeyRequest
    on_DeployedEvent?: DeployedEventRequest
    on_Deployment?: DeploymentRequest
    on_DeploymentEnvironmentChangedEvent?: DeploymentEnvironmentChangedEventRequest
    on_DeploymentStatus?: DeploymentStatusRequest
    on_DisconnectedEvent?: DisconnectedEventRequest
    on_Enterprise?: EnterpriseRequest
    on_EnterpriseAdministratorInvitation?: EnterpriseAdministratorInvitationRequest
    on_EnterpriseIdentityProvider?: EnterpriseIdentityProviderRequest
    on_EnterpriseRepositoryInfo?: EnterpriseRepositoryInfoRequest
    on_EnterpriseServerInstallation?: EnterpriseServerInstallationRequest
    on_EnterpriseServerUserAccount?: EnterpriseServerUserAccountRequest
    on_EnterpriseServerUserAccountEmail?: EnterpriseServerUserAccountEmailRequest
    on_EnterpriseServerUserAccountsUpload?: EnterpriseServerUserAccountsUploadRequest
    on_EnterpriseUserAccount?: EnterpriseUserAccountRequest
    on_ExternalIdentity?: ExternalIdentityRequest
    on_Gist?: GistRequest
    on_GistComment?: GistCommentRequest
    on_HeadRefDeletedEvent?: HeadRefDeletedEventRequest
    on_HeadRefForcePushedEvent?: HeadRefForcePushedEventRequest
    on_HeadRefRestoredEvent?: HeadRefRestoredEventRequest
    on_IpAllowListEntry?: IpAllowListEntryRequest
    on_Issue?: IssueRequest
    on_IssueComment?: IssueCommentRequest
    on_Label?: LabelRequest
    on_LabeledEvent?: LabeledEventRequest
    on_Language?: LanguageRequest
    on_License?: LicenseRequest
    on_LockedEvent?: LockedEventRequest
    on_Mannequin?: MannequinRequest
    on_MarkedAsDuplicateEvent?: MarkedAsDuplicateEventRequest
    on_MarketplaceCategory?: MarketplaceCategoryRequest
    on_MarketplaceListing?: MarketplaceListingRequest
    on_MembersCanDeleteReposClearAuditEntry?: MembersCanDeleteReposClearAuditEntryRequest
    on_MembersCanDeleteReposDisableAuditEntry?: MembersCanDeleteReposDisableAuditEntryRequest
    on_MembersCanDeleteReposEnableAuditEntry?: MembersCanDeleteReposEnableAuditEntryRequest
    on_MentionedEvent?: MentionedEventRequest
    on_MergedEvent?: MergedEventRequest
    on_Milestone?: MilestoneRequest
    on_MilestonedEvent?: MilestonedEventRequest
    on_MovedColumnsInProjectEvent?: MovedColumnsInProjectEventRequest
    on_OauthApplicationCreateAuditEntry?: OauthApplicationCreateAuditEntryRequest
    on_OrgAddBillingManagerAuditEntry?: OrgAddBillingManagerAuditEntryRequest
    on_OrgAddMemberAuditEntry?: OrgAddMemberAuditEntryRequest
    on_OrgBlockUserAuditEntry?: OrgBlockUserAuditEntryRequest
    on_OrgConfigDisableCollaboratorsOnlyAuditEntry?: OrgConfigDisableCollaboratorsOnlyAuditEntryRequest
    on_OrgConfigEnableCollaboratorsOnlyAuditEntry?: OrgConfigEnableCollaboratorsOnlyAuditEntryRequest
    on_OrgCreateAuditEntry?: OrgCreateAuditEntryRequest
    on_OrgDisableOauthAppRestrictionsAuditEntry?: OrgDisableOauthAppRestrictionsAuditEntryRequest
    on_OrgDisableSamlAuditEntry?: OrgDisableSamlAuditEntryRequest
    on_OrgDisableTwoFactorRequirementAuditEntry?: OrgDisableTwoFactorRequirementAuditEntryRequest
    on_OrgEnableOauthAppRestrictionsAuditEntry?: OrgEnableOauthAppRestrictionsAuditEntryRequest
    on_OrgEnableSamlAuditEntry?: OrgEnableSamlAuditEntryRequest
    on_OrgEnableTwoFactorRequirementAuditEntry?: OrgEnableTwoFactorRequirementAuditEntryRequest
    on_OrgInviteMemberAuditEntry?: OrgInviteMemberAuditEntryRequest
    on_OrgInviteToBusinessAuditEntry?: OrgInviteToBusinessAuditEntryRequest
    on_OrgOauthAppAccessApprovedAuditEntry?: OrgOauthAppAccessApprovedAuditEntryRequest
    on_OrgOauthAppAccessDeniedAuditEntry?: OrgOauthAppAccessDeniedAuditEntryRequest
    on_OrgOauthAppAccessRequestedAuditEntry?: OrgOauthAppAccessRequestedAuditEntryRequest
    on_OrgRemoveBillingManagerAuditEntry?: OrgRemoveBillingManagerAuditEntryRequest
    on_OrgRemoveMemberAuditEntry?: OrgRemoveMemberAuditEntryRequest
    on_OrgRemoveOutsideCollaboratorAuditEntry?: OrgRemoveOutsideCollaboratorAuditEntryRequest
    on_OrgRestoreMemberAuditEntry?: OrgRestoreMemberAuditEntryRequest
    on_OrgUnblockUserAuditEntry?: OrgUnblockUserAuditEntryRequest
    on_OrgUpdateDefaultRepositoryPermissionAuditEntry?: OrgUpdateDefaultRepositoryPermissionAuditEntryRequest
    on_OrgUpdateMemberAuditEntry?: OrgUpdateMemberAuditEntryRequest
    on_OrgUpdateMemberRepositoryCreationPermissionAuditEntry?: OrgUpdateMemberRepositoryCreationPermissionAuditEntryRequest
    on_OrgUpdateMemberRepositoryInvitationPermissionAuditEntry?: OrgUpdateMemberRepositoryInvitationPermissionAuditEntryRequest
    on_Organization?: OrganizationRequest
    on_OrganizationIdentityProvider?: OrganizationIdentityProviderRequest
    on_OrganizationInvitation?: OrganizationInvitationRequest
    on_Package?: PackageRequest
    on_PackageFile?: PackageFileRequest
    on_PackageTag?: PackageTagRequest
    on_PackageVersion?: PackageVersionRequest
    on_PinnedEvent?: PinnedEventRequest
    on_PinnedIssue?: PinnedIssueRequest
    on_PrivateRepositoryForkingDisableAuditEntry?: PrivateRepositoryForkingDisableAuditEntryRequest
    on_PrivateRepositoryForkingEnableAuditEntry?: PrivateRepositoryForkingEnableAuditEntryRequest
    on_Project?: ProjectRequest
    on_ProjectCard?: ProjectCardRequest
    on_ProjectColumn?: ProjectColumnRequest
    on_PublicKey?: PublicKeyRequest
    on_PullRequest?: PullRequestRequest
    on_PullRequestCommit?: PullRequestCommitRequest
    on_PullRequestCommitCommentThread?: PullRequestCommitCommentThreadRequest
    on_PullRequestReview?: PullRequestReviewRequest
    on_PullRequestReviewComment?: PullRequestReviewCommentRequest
    on_PullRequestReviewThread?: PullRequestReviewThreadRequest
    on_Push?: PushRequest
    on_PushAllowance?: PushAllowanceRequest
    on_Reaction?: ReactionRequest
    on_ReadyForReviewEvent?: ReadyForReviewEventRequest
    on_Ref?: RefRequest
    on_ReferencedEvent?: ReferencedEventRequest
    on_RegistryPackage?: RegistryPackageRequest
    on_RegistryPackageDependency?: RegistryPackageDependencyRequest
    on_RegistryPackageFile?: RegistryPackageFileRequest
    on_RegistryPackageTag?: RegistryPackageTagRequest
    on_RegistryPackageVersion?: RegistryPackageVersionRequest
    on_Release?: ReleaseRequest
    on_ReleaseAsset?: ReleaseAssetRequest
    on_RemovedFromProjectEvent?: RemovedFromProjectEventRequest
    on_RenamedTitleEvent?: RenamedTitleEventRequest
    on_ReopenedEvent?: ReopenedEventRequest
    on_RepoAccessAuditEntry?: RepoAccessAuditEntryRequest
    on_RepoAddMemberAuditEntry?: RepoAddMemberAuditEntryRequest
    on_RepoAddTopicAuditEntry?: RepoAddTopicAuditEntryRequest
    on_RepoArchivedAuditEntry?: RepoArchivedAuditEntryRequest
    on_RepoChangeMergeSettingAuditEntry?: RepoChangeMergeSettingAuditEntryRequest
    on_RepoConfigDisableAnonymousGitAccessAuditEntry?: RepoConfigDisableAnonymousGitAccessAuditEntryRequest
    on_RepoConfigDisableCollaboratorsOnlyAuditEntry?: RepoConfigDisableCollaboratorsOnlyAuditEntryRequest
    on_RepoConfigDisableContributorsOnlyAuditEntry?: RepoConfigDisableContributorsOnlyAuditEntryRequest
    on_RepoConfigDisableSockpuppetDisallowedAuditEntry?: RepoConfigDisableSockpuppetDisallowedAuditEntryRequest
    on_RepoConfigEnableAnonymousGitAccessAuditEntry?: RepoConfigEnableAnonymousGitAccessAuditEntryRequest
    on_RepoConfigEnableCollaboratorsOnlyAuditEntry?: RepoConfigEnableCollaboratorsOnlyAuditEntryRequest
    on_RepoConfigEnableContributorsOnlyAuditEntry?: RepoConfigEnableContributorsOnlyAuditEntryRequest
    on_RepoConfigEnableSockpuppetDisallowedAuditEntry?: RepoConfigEnableSockpuppetDisallowedAuditEntryRequest
    on_RepoConfigLockAnonymousGitAccessAuditEntry?: RepoConfigLockAnonymousGitAccessAuditEntryRequest
    on_RepoConfigUnlockAnonymousGitAccessAuditEntry?: RepoConfigUnlockAnonymousGitAccessAuditEntryRequest
    on_RepoCreateAuditEntry?: RepoCreateAuditEntryRequest
    on_RepoDestroyAuditEntry?: RepoDestroyAuditEntryRequest
    on_RepoRemoveMemberAuditEntry?: RepoRemoveMemberAuditEntryRequest
    on_RepoRemoveTopicAuditEntry?: RepoRemoveTopicAuditEntryRequest
    on_Repository?: RepositoryRequest
    on_RepositoryInvitation?: RepositoryInvitationRequest
    on_RepositoryTopic?: RepositoryTopicRequest
    on_RepositoryVisibilityChangeDisableAuditEntry?: RepositoryVisibilityChangeDisableAuditEntryRequest
    on_RepositoryVisibilityChangeEnableAuditEntry?: RepositoryVisibilityChangeEnableAuditEntryRequest
    on_RepositoryVulnerabilityAlert?: RepositoryVulnerabilityAlertRequest
    on_ReviewDismissalAllowance?: ReviewDismissalAllowanceRequest
    on_ReviewDismissedEvent?: ReviewDismissedEventRequest
    on_ReviewRequest?: ReviewRequestRequest
    on_ReviewRequestRemovedEvent?: ReviewRequestRemovedEventRequest
    on_ReviewRequestedEvent?: ReviewRequestedEventRequest
    on_SavedReply?: SavedReplyRequest
    on_SecurityAdvisory?: SecurityAdvisoryRequest
    on_SponsorsListing?: SponsorsListingRequest
    on_SponsorsTier?: SponsorsTierRequest
    on_Sponsorship?: SponsorshipRequest
    on_Status?: StatusRequest
    on_StatusCheckRollup?: StatusCheckRollupRequest
    on_StatusContext?: StatusContextRequest
    on_SubscribedEvent?: SubscribedEventRequest
    on_Tag?: TagRequest
    on_Team?: TeamRequest
    on_TeamAddMemberAuditEntry?: TeamAddMemberAuditEntryRequest
    on_TeamAddRepositoryAuditEntry?: TeamAddRepositoryAuditEntryRequest
    on_TeamChangeParentTeamAuditEntry?: TeamChangeParentTeamAuditEntryRequest
    on_TeamDiscussion?: TeamDiscussionRequest
    on_TeamDiscussionComment?: TeamDiscussionCommentRequest
    on_TeamRemoveMemberAuditEntry?: TeamRemoveMemberAuditEntryRequest
    on_TeamRemoveRepositoryAuditEntry?: TeamRemoveRepositoryAuditEntryRequest
    on_Topic?: TopicRequest
    on_TransferredEvent?: TransferredEventRequest
    on_Tree?: TreeRequest
    on_UnassignedEvent?: UnassignedEventRequest
    on_UnlabeledEvent?: UnlabeledEventRequest
    on_UnlockedEvent?: UnlockedEventRequest
    on_UnmarkedAsDuplicateEvent?: UnmarkedAsDuplicateEventRequest
    on_UnpinnedEvent?: UnpinnedEventRequest
    on_UnsubscribedEvent?: UnsubscribedEventRequest
    on_User?: UserRequest
    on_UserBlockedEvent?: UserBlockedEventRequest
    on_UserContentEdit?: UserContentEditRequest
    on_UserStatus?: UserStatusRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata for an audit entry with action oauth_application.* */
export interface OauthApplicationAuditEntryDataRequest{
    /** The name of the OAuth Application. */
    oauthApplicationName?: boolean | number
    /** The HTTP path for the OAuth Application */
    oauthApplicationResourcePath?: boolean | number
    /** The HTTP URL for the OAuth Application */
    oauthApplicationUrl?: boolean | number
    on_OauthApplicationCreateAuditEntry?: OauthApplicationCreateAuditEntryRequest
    on_OrgOauthAppAccessApprovedAuditEntry?: OrgOauthAppAccessApprovedAuditEntryRequest
    on_OrgOauthAppAccessDeniedAuditEntry?: OrgOauthAppAccessDeniedAuditEntryRequest
    on_OrgOauthAppAccessRequestedAuditEntry?: OrgOauthAppAccessRequestedAuditEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a oauth_application.create event. */
export interface OauthApplicationCreateAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The application URL of the OAuth Application. */
    applicationUrl?: boolean | number
    /** The callback URL of the OAuth Application. */
    callbackUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The name of the OAuth Application. */
    oauthApplicationName?: boolean | number
    /** The HTTP path for the OAuth Application */
    oauthApplicationResourcePath?: boolean | number
    /** The HTTP URL for the OAuth Application */
    oauthApplicationUrl?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The rate limit of the OAuth Application. */
    rateLimit?: boolean | number
    /** The state of the OAuth Application. */
    state?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.add_billing_manager */
export interface OrgAddBillingManagerAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The email address used to invite a billing manager for the organization. */
    invitationEmail?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.add_member */
export interface OrgAddMemberAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The permission level of the member added to the organization. */
    permission?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.block_user */
export interface OrgBlockUserAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The blocked user. */
    blockedUser?: UserRequest
    /** The username of the blocked user. */
    blockedUserName?: boolean | number
    /** The HTTP path for the blocked user. */
    blockedUserResourcePath?: boolean | number
    /** The HTTP URL for the blocked user. */
    blockedUserUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.config.disable_collaborators_only event. */
export interface OrgConfigDisableCollaboratorsOnlyAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.config.enable_collaborators_only event. */
export interface OrgConfigEnableCollaboratorsOnlyAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.create event. */
export interface OrgCreateAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The billing plan for the Organization. */
    billingPlan?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.disable_oauth_app_restrictions event. */
export interface OrgDisableOauthAppRestrictionsAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.disable_saml event. */
export interface OrgDisableSamlAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The SAML provider's digest algorithm URL. */
    digestMethodUrl?: boolean | number
    id?: boolean | number
    /** The SAML provider's issuer URL. */
    issuerUrl?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The SAML provider's signature algorithm URL. */
    signatureMethodUrl?: boolean | number
    /** The SAML provider's single sign-on URL. */
    singleSignOnUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.disable_two_factor_requirement event. */
export interface OrgDisableTwoFactorRequirementAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.enable_oauth_app_restrictions event. */
export interface OrgEnableOauthAppRestrictionsAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.enable_saml event. */
export interface OrgEnableSamlAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The SAML provider's digest algorithm URL. */
    digestMethodUrl?: boolean | number
    id?: boolean | number
    /** The SAML provider's issuer URL. */
    issuerUrl?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The SAML provider's signature algorithm URL. */
    signatureMethodUrl?: boolean | number
    /** The SAML provider's single sign-on URL. */
    singleSignOnUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.enable_two_factor_requirement event. */
export interface OrgEnableTwoFactorRequirementAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.invite_member event. */
export interface OrgInviteMemberAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The email address of the organization invitation. */
    email?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The organization invitation. */
    organizationInvitation?: OrganizationInvitationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.invite_to_business event. */
export interface OrgInviteToBusinessAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: boolean | number
    /** The slug of the enterprise. */
    enterpriseSlug?: boolean | number
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.oauth_app_access_approved event. */
export interface OrgOauthAppAccessApprovedAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The name of the OAuth Application. */
    oauthApplicationName?: boolean | number
    /** The HTTP path for the OAuth Application */
    oauthApplicationResourcePath?: boolean | number
    /** The HTTP URL for the OAuth Application */
    oauthApplicationUrl?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.oauth_app_access_denied event. */
export interface OrgOauthAppAccessDeniedAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The name of the OAuth Application. */
    oauthApplicationName?: boolean | number
    /** The HTTP path for the OAuth Application */
    oauthApplicationResourcePath?: boolean | number
    /** The HTTP URL for the OAuth Application */
    oauthApplicationUrl?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.oauth_app_access_requested event. */
export interface OrgOauthAppAccessRequestedAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The name of the OAuth Application. */
    oauthApplicationName?: boolean | number
    /** The HTTP path for the OAuth Application */
    oauthApplicationResourcePath?: boolean | number
    /** The HTTP URL for the OAuth Application */
    oauthApplicationUrl?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.remove_billing_manager event. */
export interface OrgRemoveBillingManagerAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The reason for the billing manager being removed. */
    reason?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.remove_member event. */
export interface OrgRemoveMemberAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The types of membership the member has with the organization. */
    membershipTypes?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The reason for the member being removed. */
    reason?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.remove_outside_collaborator event. */
export interface OrgRemoveOutsideCollaboratorAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The types of membership the outside collaborator has with the organization. */
    membershipTypes?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The reason for the outside collaborator being removed from the Organization. */
    reason?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.restore_member event. */
export interface OrgRestoreMemberAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The number of custom email routings for the restored member. */
    restoredCustomEmailRoutingsCount?: boolean | number
    /** The number of issue assignemnts for the restored member. */
    restoredIssueAssignmentsCount?: boolean | number
    /** Restored organization membership objects. */
    restoredMemberships?: OrgRestoreMemberAuditEntryMembershipRequest
    /** The number of restored memberships. */
    restoredMembershipsCount?: boolean | number
    /** The number of repositories of the restored member. */
    restoredRepositoriesCount?: boolean | number
    /** The number of starred repositories for the restored member. */
    restoredRepositoryStarsCount?: boolean | number
    /** The number of watched repositories for the restored member. */
    restoredRepositoryWatchesCount?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Types of memberships that can be restored for an Organization member. */
export interface OrgRestoreMemberAuditEntryMembershipRequest{
    on_OrgRestoreMemberMembershipOrganizationAuditEntryData?:OrgRestoreMemberMembershipOrganizationAuditEntryDataRequest,
    on_OrgRestoreMemberMembershipRepositoryAuditEntryData?:OrgRestoreMemberMembershipRepositoryAuditEntryDataRequest,
    on_OrgRestoreMemberMembershipTeamAuditEntryData?:OrgRestoreMemberMembershipTeamAuditEntryDataRequest,
    on_OrganizationAuditEntryData?: OrganizationAuditEntryDataRequest,
    on_RepositoryAuditEntryData?: RepositoryAuditEntryDataRequest,
    on_TeamAuditEntryData?: TeamAuditEntryDataRequest,
    __typename?: boolean | number
}


/** Metadata for an organization membership for org.restore_member actions */
export interface OrgRestoreMemberMembershipOrganizationAuditEntryDataRequest{
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata for a repository membership for org.restore_member actions */
export interface OrgRestoreMemberMembershipRepositoryAuditEntryDataRequest{
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata for a team membership for org.restore_member actions */
export interface OrgRestoreMemberMembershipTeamAuditEntryDataRequest{
    /** The team associated with the action */
    team?: TeamRequest
    /** The name of the team */
    teamName?: boolean | number
    /** The HTTP path for this team */
    teamResourcePath?: boolean | number
    /** The HTTP URL for this team */
    teamUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.unblock_user */
export interface OrgUnblockUserAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The user being unblocked by the organization. */
    blockedUser?: UserRequest
    /** The username of the blocked user. */
    blockedUserName?: boolean | number
    /** The HTTP path for the blocked user. */
    blockedUserResourcePath?: boolean | number
    /** The HTTP URL for the blocked user. */
    blockedUserUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.update_default_repository_permission */
export interface OrgUpdateDefaultRepositoryPermissionAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The new default repository permission level for the organization. */
    permission?: boolean | number
    /** The former default repository permission level for the organization. */
    permissionWas?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.update_member event. */
export interface OrgUpdateMemberAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The new member permission level for the organization. */
    permission?: boolean | number
    /** The former member permission level for the organization. */
    permissionWas?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.update_member_repository_creation_permission event. */
export interface OrgUpdateMemberRepositoryCreationPermissionAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** Can members create repositories in the organization. */
    canCreateRepositories?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    /** The permission for visibility level of repositories for this organization. */
    visibility?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a org.update_member_repository_invitation_permission event. */
export interface OrgUpdateMemberRepositoryInvitationPermissionAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** Can outside collaborators be invited to repositories in the organization. */
    canInviteOutsideCollaboratorsToRepositories?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An account on GitHub, with one or more owners, that has repositories, members and teams. */
export interface OrganizationRequest{
    /** Determine if this repository owner has any items that can be pinned to their profile. */
    anyPinnableItems?: [{
    /** Filter to only a particular kind of pinnable item. */
    type?: (PinnableItemType | null)}] | boolean | number
    /** Audit log entries of the organization */
    auditLog?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for the returned audit log entries. */
    orderBy?: (AuditLogOrder | null),
    /** The query string to filter audit entries */
    query?: (Scalars['String'] | null)},OrganizationAuditEntryConnectionRequest] | OrganizationAuditEntryConnectionRequest
    /** A URL pointing to the organization's public avatar. */
    avatarUrl?: [{
    /** The size of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The organization's public profile description. */
    description?: boolean | number
    /** The organization's public profile description rendered to HTML. */
    descriptionHTML?: boolean | number
    /** The organization's public email. */
    email?: boolean | number
    id?: boolean | number
    /** The setting value for whether the organization has an IP allow list enabled. */
    ipAllowListEnabledSetting?: boolean | number
    /** The IP addresses that are allowed to access resources owned by the organization. */
    ipAllowListEntries?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for IP allow list entries returned. */
    orderBy?: (IpAllowListEntryOrder | null)},IpAllowListEntryConnectionRequest] | IpAllowListEntryConnectionRequest
    /** Whether the organization has verified its profile email and website. */
    isVerified?: boolean | number
    /**
     * Showcases a selection of repositories and gists that the profile owner has
     * either curated or that have been selected automatically based on popularity.
     */
    itemShowcase?: ProfileItemShowcaseRequest
    /** The organization's public profile location. */
    location?: boolean | number
    /** The organization's login name. */
    login?: boolean | number
    /** Get the status messages members of this entity have set that are either public or visible only to the organization. */
    memberStatuses?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for user statuses returned from the connection. */
    orderBy?: (UserStatusOrder | null)},UserStatusConnectionRequest] | UserStatusConnectionRequest
    /** A list of users who are members of this organization. */
    membersWithRole?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},OrganizationMemberConnectionRequest] | OrganizationMemberConnectionRequest
    /** The organization's public profile name. */
    name?: boolean | number
    /** The HTTP path creating a new team */
    newTeamResourcePath?: boolean | number
    /** The HTTP URL creating a new team */
    newTeamUrl?: boolean | number
    /** The billing email for the organization. */
    organizationBillingEmail?: boolean | number
    /** A list of packages under the owner. */
    packages?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Find packages by their names. */
    names?: ((Scalars['String'] | null)[] | null),
    /** Ordering of the returned packages. */
    orderBy?: (PackageOrder | null),
    /** Find packages in a repository by ID. */
    repositoryId?: (Scalars['ID'] | null)},PackageConnectionRequest] | PackageConnectionRequest
    /** A list of users who have been invited to join this organization. */
    pendingMembers?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserConnectionRequest] | UserConnectionRequest
    /** A list of repositories and gists this profile owner can pin to their profile. */
    pinnableItems?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter the types of pinnable items that are returned. */
    types?: (PinnableItemType[] | null)},PinnableItemConnectionRequest] | PinnableItemConnectionRequest
    /** A list of repositories and gists this profile owner has pinned to their profile */
    pinnedItems?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter the types of pinned items that are returned. */
    types?: (PinnableItemType[] | null)},PinnableItemConnectionRequest] | PinnableItemConnectionRequest
    /** Returns how many more items this profile owner can pin to their profile. */
    pinnedItemsRemaining?: boolean | number
    /** Find project by number. */
    project?: [{
    /** The project number to find. */
    number: Scalars['Int']},ProjectRequest]
    /** A list of projects under the owner. */
    projects?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for projects returned from the connection */
    orderBy?: (ProjectOrder | null),
    /** Query to search projects by, currently only searching by name. */
    search?: (Scalars['String'] | null),
    /** A list of states to filter the projects by. */
    states?: (ProjectState[] | null)},ProjectConnectionRequest] | ProjectConnectionRequest
    /** The HTTP path listing organization's projects */
    projectsResourcePath?: boolean | number
    /** The HTTP URL listing organization's projects */
    projectsUrl?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageOwner` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages under the owner.
     */
    registryPackages?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Find registry package by name. */
    name?: (Scalars['String'] | null),
    /** Find registry packages by their names. */
    names?: ((Scalars['String'] | null)[] | null),
    /** Filter registry package by type. */
    packageType?: (RegistryPackageType | null),
    /** Filter registry package by whether it is publicly visible */
    publicOnly?: (Scalars['Boolean'] | null),
    /** Filter registry package by type (string). */
    registryPackageType?: (Scalars['String'] | null),
    /** Find registry packages in a repository. */
    repositoryId?: (Scalars['ID'] | null)},RegistryPackageConnectionRequest] | RegistryPackageConnectionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageSearch` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages for a particular search query.
     */
    registryPackagesForQuery?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter registry package by type. */
    packageType?: (RegistryPackageType | null),
    /** Find registry package by search query. */
    query?: (Scalars['String'] | null)},RegistryPackageConnectionRequest] | RegistryPackageConnectionRequest
    /** A list of repositories that the user owns. */
    repositories?: [{
    /**
     * Array of viewer's affiliation options for repositories returned from the
     * connection. For example, OWNER will include only repositories that the
     * current viewer owns.
     */
    affiliations?: ((RepositoryAffiliation | null)[] | null),
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** If non-null, filters repositories according to whether they are forks of another repository */
    isFork?: (Scalars['Boolean'] | null),
    /** If non-null, filters repositories according to whether they have been locked */
    isLocked?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for repositories returned from the connection */
    orderBy?: (RepositoryOrder | null),
    /**
     * Array of owner's affiliation options for repositories returned from the
     * connection. For example, OWNER will include only repositories that the
     * organization or user being viewed owns.
     */
    ownerAffiliations?: ((RepositoryAffiliation | null)[] | null),
    /** If non-null, filters repositories according to privacy */
    privacy?: (RepositoryPrivacy | null)},RepositoryConnectionRequest] | RepositoryConnectionRequest
    /** Find Repository. */
    repository?: [{
    /** Name of Repository to find. */
    name: Scalars['String']},RepositoryRequest]
    /**
     * When true the organization requires all members, billing managers, and outside
     * collaborators to enable two-factor authentication.
     */
    requiresTwoFactorAuthentication?: boolean | number
    /** The HTTP path for this organization. */
    resourcePath?: boolean | number
    /** The Organization's SAML identity providers */
    samlIdentityProvider?: OrganizationIdentityProviderRequest
    /** The GitHub Sponsors listing for this user. */
    sponsorsListing?: SponsorsListingRequest
    /** This object's sponsorships as the maintainer. */
    sponsorshipsAsMaintainer?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Whether or not to include private sponsorships in the result set */
    includePrivate?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /**
     * Ordering options for sponsorships returned from this connection. If left
     * blank, the sponsorships will be ordered based on relevancy to the viewer.
     */
    orderBy?: (SponsorshipOrder | null)},SponsorshipConnectionRequest] | SponsorshipConnectionRequest
    /** This object's sponsorships as the sponsor. */
    sponsorshipsAsSponsor?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /**
     * Ordering options for sponsorships returned from this connection. If left
     * blank, the sponsorships will be ordered based on relevancy to the viewer.
     */
    orderBy?: (SponsorshipOrder | null)},SponsorshipConnectionRequest] | SponsorshipConnectionRequest
    /** Find an organization's team by its slug. */
    team?: [{
    /** The name or slug of the team to find. */
    slug: Scalars['String']},TeamRequest]
    /** A list of teams in this organization. */
    teams?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** If true, filters teams that are mapped to an LDAP Group (Enterprise only) */
    ldapMapped?: (Scalars['Boolean'] | null),
    /** Ordering options for teams returned from the connection */
    orderBy?: (TeamOrder | null),
    /** If non-null, filters teams according to privacy */
    privacy?: (TeamPrivacy | null),
    /** If non-null, filters teams with query on team name and team slug */
    query?: (Scalars['String'] | null),
    /** If non-null, filters teams according to whether the viewer is an admin or member on team */
    role?: (TeamRole | null),
    /** If true, restrict to only root teams */
    rootTeamsOnly?: (Scalars['Boolean'] | null),
    /** User logins to filter by */
    userLogins?: (Scalars['String'][] | null)},TeamConnectionRequest] | TeamConnectionRequest
    /** The HTTP path listing organization's teams */
    teamsResourcePath?: boolean | number
    /** The HTTP URL listing organization's teams */
    teamsUrl?: boolean | number
    /** The organization's Twitter username. */
    twitterUsername?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this organization. */
    url?: boolean | number
    /** Organization is adminable by the viewer. */
    viewerCanAdminister?: boolean | number
    /** Can the viewer pin repositories and gists to the profile? */
    viewerCanChangePinnedItems?: boolean | number
    /** Can the current viewer create new projects on this owner. */
    viewerCanCreateProjects?: boolean | number
    /** Viewer can create repositories on this organization */
    viewerCanCreateRepositories?: boolean | number
    /** Viewer can create teams on this organization. */
    viewerCanCreateTeams?: boolean | number
    /** Viewer is an active member of this organization. */
    viewerIsAMember?: boolean | number
    /** The organization's public profile URL. */
    websiteUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An audit entry in an organization audit log. */
export interface OrganizationAuditEntryRequest{
    on_MembersCanDeleteReposClearAuditEntry?:MembersCanDeleteReposClearAuditEntryRequest,
    on_MembersCanDeleteReposDisableAuditEntry?:MembersCanDeleteReposDisableAuditEntryRequest,
    on_MembersCanDeleteReposEnableAuditEntry?:MembersCanDeleteReposEnableAuditEntryRequest,
    on_OauthApplicationCreateAuditEntry?:OauthApplicationCreateAuditEntryRequest,
    on_OrgAddBillingManagerAuditEntry?:OrgAddBillingManagerAuditEntryRequest,
    on_OrgAddMemberAuditEntry?:OrgAddMemberAuditEntryRequest,
    on_OrgBlockUserAuditEntry?:OrgBlockUserAuditEntryRequest,
    on_OrgConfigDisableCollaboratorsOnlyAuditEntry?:OrgConfigDisableCollaboratorsOnlyAuditEntryRequest,
    on_OrgConfigEnableCollaboratorsOnlyAuditEntry?:OrgConfigEnableCollaboratorsOnlyAuditEntryRequest,
    on_OrgCreateAuditEntry?:OrgCreateAuditEntryRequest,
    on_OrgDisableOauthAppRestrictionsAuditEntry?:OrgDisableOauthAppRestrictionsAuditEntryRequest,
    on_OrgDisableSamlAuditEntry?:OrgDisableSamlAuditEntryRequest,
    on_OrgDisableTwoFactorRequirementAuditEntry?:OrgDisableTwoFactorRequirementAuditEntryRequest,
    on_OrgEnableOauthAppRestrictionsAuditEntry?:OrgEnableOauthAppRestrictionsAuditEntryRequest,
    on_OrgEnableSamlAuditEntry?:OrgEnableSamlAuditEntryRequest,
    on_OrgEnableTwoFactorRequirementAuditEntry?:OrgEnableTwoFactorRequirementAuditEntryRequest,
    on_OrgInviteMemberAuditEntry?:OrgInviteMemberAuditEntryRequest,
    on_OrgInviteToBusinessAuditEntry?:OrgInviteToBusinessAuditEntryRequest,
    on_OrgOauthAppAccessApprovedAuditEntry?:OrgOauthAppAccessApprovedAuditEntryRequest,
    on_OrgOauthAppAccessDeniedAuditEntry?:OrgOauthAppAccessDeniedAuditEntryRequest,
    on_OrgOauthAppAccessRequestedAuditEntry?:OrgOauthAppAccessRequestedAuditEntryRequest,
    on_OrgRemoveBillingManagerAuditEntry?:OrgRemoveBillingManagerAuditEntryRequest,
    on_OrgRemoveMemberAuditEntry?:OrgRemoveMemberAuditEntryRequest,
    on_OrgRemoveOutsideCollaboratorAuditEntry?:OrgRemoveOutsideCollaboratorAuditEntryRequest,
    on_OrgRestoreMemberAuditEntry?:OrgRestoreMemberAuditEntryRequest,
    on_OrgUnblockUserAuditEntry?:OrgUnblockUserAuditEntryRequest,
    on_OrgUpdateDefaultRepositoryPermissionAuditEntry?:OrgUpdateDefaultRepositoryPermissionAuditEntryRequest,
    on_OrgUpdateMemberAuditEntry?:OrgUpdateMemberAuditEntryRequest,
    on_OrgUpdateMemberRepositoryCreationPermissionAuditEntry?:OrgUpdateMemberRepositoryCreationPermissionAuditEntryRequest,
    on_OrgUpdateMemberRepositoryInvitationPermissionAuditEntry?:OrgUpdateMemberRepositoryInvitationPermissionAuditEntryRequest,
    on_PrivateRepositoryForkingDisableAuditEntry?:PrivateRepositoryForkingDisableAuditEntryRequest,
    on_PrivateRepositoryForkingEnableAuditEntry?:PrivateRepositoryForkingEnableAuditEntryRequest,
    on_RepoAccessAuditEntry?:RepoAccessAuditEntryRequest,
    on_RepoAddMemberAuditEntry?:RepoAddMemberAuditEntryRequest,
    on_RepoAddTopicAuditEntry?:RepoAddTopicAuditEntryRequest,
    on_RepoArchivedAuditEntry?:RepoArchivedAuditEntryRequest,
    on_RepoChangeMergeSettingAuditEntry?:RepoChangeMergeSettingAuditEntryRequest,
    on_RepoConfigDisableAnonymousGitAccessAuditEntry?:RepoConfigDisableAnonymousGitAccessAuditEntryRequest,
    on_RepoConfigDisableCollaboratorsOnlyAuditEntry?:RepoConfigDisableCollaboratorsOnlyAuditEntryRequest,
    on_RepoConfigDisableContributorsOnlyAuditEntry?:RepoConfigDisableContributorsOnlyAuditEntryRequest,
    on_RepoConfigDisableSockpuppetDisallowedAuditEntry?:RepoConfigDisableSockpuppetDisallowedAuditEntryRequest,
    on_RepoConfigEnableAnonymousGitAccessAuditEntry?:RepoConfigEnableAnonymousGitAccessAuditEntryRequest,
    on_RepoConfigEnableCollaboratorsOnlyAuditEntry?:RepoConfigEnableCollaboratorsOnlyAuditEntryRequest,
    on_RepoConfigEnableContributorsOnlyAuditEntry?:RepoConfigEnableContributorsOnlyAuditEntryRequest,
    on_RepoConfigEnableSockpuppetDisallowedAuditEntry?:RepoConfigEnableSockpuppetDisallowedAuditEntryRequest,
    on_RepoConfigLockAnonymousGitAccessAuditEntry?:RepoConfigLockAnonymousGitAccessAuditEntryRequest,
    on_RepoConfigUnlockAnonymousGitAccessAuditEntry?:RepoConfigUnlockAnonymousGitAccessAuditEntryRequest,
    on_RepoCreateAuditEntry?:RepoCreateAuditEntryRequest,
    on_RepoDestroyAuditEntry?:RepoDestroyAuditEntryRequest,
    on_RepoRemoveMemberAuditEntry?:RepoRemoveMemberAuditEntryRequest,
    on_RepoRemoveTopicAuditEntry?:RepoRemoveTopicAuditEntryRequest,
    on_RepositoryVisibilityChangeDisableAuditEntry?:RepositoryVisibilityChangeDisableAuditEntryRequest,
    on_RepositoryVisibilityChangeEnableAuditEntry?:RepositoryVisibilityChangeEnableAuditEntryRequest,
    on_TeamAddMemberAuditEntry?:TeamAddMemberAuditEntryRequest,
    on_TeamAddRepositoryAuditEntry?:TeamAddRepositoryAuditEntryRequest,
    on_TeamChangeParentTeamAuditEntry?:TeamChangeParentTeamAuditEntryRequest,
    on_TeamRemoveMemberAuditEntry?:TeamRemoveMemberAuditEntryRequest,
    on_TeamRemoveRepositoryAuditEntry?:TeamRemoveRepositoryAuditEntryRequest,
    on_AuditEntry?: AuditEntryRequest,
    on_EnterpriseAuditEntryData?: EnterpriseAuditEntryDataRequest,
    on_Node?: NodeRequest,
    on_OrganizationAuditEntryData?: OrganizationAuditEntryDataRequest,
    on_OauthApplicationAuditEntryData?: OauthApplicationAuditEntryDataRequest,
    on_RepositoryAuditEntryData?: RepositoryAuditEntryDataRequest,
    on_TopicAuditEntryData?: TopicAuditEntryDataRequest,
    on_TeamAuditEntryData?: TeamAuditEntryDataRequest,
    __typename?: boolean | number
}


/** The connection type for OrganizationAuditEntry. */
export interface OrganizationAuditEntryConnectionRequest{
    /** A list of edges. */
    edges?: OrganizationAuditEntryEdgeRequest
    /** A list of nodes. */
    nodes?: OrganizationAuditEntryRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata for an audit entry with action org.* */
export interface OrganizationAuditEntryDataRequest{
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    on_MembersCanDeleteReposClearAuditEntry?: MembersCanDeleteReposClearAuditEntryRequest
    on_MembersCanDeleteReposDisableAuditEntry?: MembersCanDeleteReposDisableAuditEntryRequest
    on_MembersCanDeleteReposEnableAuditEntry?: MembersCanDeleteReposEnableAuditEntryRequest
    on_OauthApplicationCreateAuditEntry?: OauthApplicationCreateAuditEntryRequest
    on_OrgAddBillingManagerAuditEntry?: OrgAddBillingManagerAuditEntryRequest
    on_OrgAddMemberAuditEntry?: OrgAddMemberAuditEntryRequest
    on_OrgBlockUserAuditEntry?: OrgBlockUserAuditEntryRequest
    on_OrgConfigDisableCollaboratorsOnlyAuditEntry?: OrgConfigDisableCollaboratorsOnlyAuditEntryRequest
    on_OrgConfigEnableCollaboratorsOnlyAuditEntry?: OrgConfigEnableCollaboratorsOnlyAuditEntryRequest
    on_OrgCreateAuditEntry?: OrgCreateAuditEntryRequest
    on_OrgDisableOauthAppRestrictionsAuditEntry?: OrgDisableOauthAppRestrictionsAuditEntryRequest
    on_OrgDisableSamlAuditEntry?: OrgDisableSamlAuditEntryRequest
    on_OrgDisableTwoFactorRequirementAuditEntry?: OrgDisableTwoFactorRequirementAuditEntryRequest
    on_OrgEnableOauthAppRestrictionsAuditEntry?: OrgEnableOauthAppRestrictionsAuditEntryRequest
    on_OrgEnableSamlAuditEntry?: OrgEnableSamlAuditEntryRequest
    on_OrgEnableTwoFactorRequirementAuditEntry?: OrgEnableTwoFactorRequirementAuditEntryRequest
    on_OrgInviteMemberAuditEntry?: OrgInviteMemberAuditEntryRequest
    on_OrgInviteToBusinessAuditEntry?: OrgInviteToBusinessAuditEntryRequest
    on_OrgOauthAppAccessApprovedAuditEntry?: OrgOauthAppAccessApprovedAuditEntryRequest
    on_OrgOauthAppAccessDeniedAuditEntry?: OrgOauthAppAccessDeniedAuditEntryRequest
    on_OrgOauthAppAccessRequestedAuditEntry?: OrgOauthAppAccessRequestedAuditEntryRequest
    on_OrgRemoveBillingManagerAuditEntry?: OrgRemoveBillingManagerAuditEntryRequest
    on_OrgRemoveMemberAuditEntry?: OrgRemoveMemberAuditEntryRequest
    on_OrgRemoveOutsideCollaboratorAuditEntry?: OrgRemoveOutsideCollaboratorAuditEntryRequest
    on_OrgRestoreMemberAuditEntry?: OrgRestoreMemberAuditEntryRequest
    on_OrgRestoreMemberMembershipOrganizationAuditEntryData?: OrgRestoreMemberMembershipOrganizationAuditEntryDataRequest
    on_OrgUnblockUserAuditEntry?: OrgUnblockUserAuditEntryRequest
    on_OrgUpdateDefaultRepositoryPermissionAuditEntry?: OrgUpdateDefaultRepositoryPermissionAuditEntryRequest
    on_OrgUpdateMemberAuditEntry?: OrgUpdateMemberAuditEntryRequest
    on_OrgUpdateMemberRepositoryCreationPermissionAuditEntry?: OrgUpdateMemberRepositoryCreationPermissionAuditEntryRequest
    on_OrgUpdateMemberRepositoryInvitationPermissionAuditEntry?: OrgUpdateMemberRepositoryInvitationPermissionAuditEntryRequest
    on_PrivateRepositoryForkingDisableAuditEntry?: PrivateRepositoryForkingDisableAuditEntryRequest
    on_PrivateRepositoryForkingEnableAuditEntry?: PrivateRepositoryForkingEnableAuditEntryRequest
    on_RepoAccessAuditEntry?: RepoAccessAuditEntryRequest
    on_RepoAddMemberAuditEntry?: RepoAddMemberAuditEntryRequest
    on_RepoAddTopicAuditEntry?: RepoAddTopicAuditEntryRequest
    on_RepoArchivedAuditEntry?: RepoArchivedAuditEntryRequest
    on_RepoChangeMergeSettingAuditEntry?: RepoChangeMergeSettingAuditEntryRequest
    on_RepoConfigDisableAnonymousGitAccessAuditEntry?: RepoConfigDisableAnonymousGitAccessAuditEntryRequest
    on_RepoConfigDisableCollaboratorsOnlyAuditEntry?: RepoConfigDisableCollaboratorsOnlyAuditEntryRequest
    on_RepoConfigDisableContributorsOnlyAuditEntry?: RepoConfigDisableContributorsOnlyAuditEntryRequest
    on_RepoConfigDisableSockpuppetDisallowedAuditEntry?: RepoConfigDisableSockpuppetDisallowedAuditEntryRequest
    on_RepoConfigEnableAnonymousGitAccessAuditEntry?: RepoConfigEnableAnonymousGitAccessAuditEntryRequest
    on_RepoConfigEnableCollaboratorsOnlyAuditEntry?: RepoConfigEnableCollaboratorsOnlyAuditEntryRequest
    on_RepoConfigEnableContributorsOnlyAuditEntry?: RepoConfigEnableContributorsOnlyAuditEntryRequest
    on_RepoConfigEnableSockpuppetDisallowedAuditEntry?: RepoConfigEnableSockpuppetDisallowedAuditEntryRequest
    on_RepoConfigLockAnonymousGitAccessAuditEntry?: RepoConfigLockAnonymousGitAccessAuditEntryRequest
    on_RepoConfigUnlockAnonymousGitAccessAuditEntry?: RepoConfigUnlockAnonymousGitAccessAuditEntryRequest
    on_RepoCreateAuditEntry?: RepoCreateAuditEntryRequest
    on_RepoDestroyAuditEntry?: RepoDestroyAuditEntryRequest
    on_RepoRemoveMemberAuditEntry?: RepoRemoveMemberAuditEntryRequest
    on_RepoRemoveTopicAuditEntry?: RepoRemoveTopicAuditEntryRequest
    on_RepositoryVisibilityChangeDisableAuditEntry?: RepositoryVisibilityChangeDisableAuditEntryRequest
    on_RepositoryVisibilityChangeEnableAuditEntry?: RepositoryVisibilityChangeEnableAuditEntryRequest
    on_TeamAddMemberAuditEntry?: TeamAddMemberAuditEntryRequest
    on_TeamAddRepositoryAuditEntry?: TeamAddRepositoryAuditEntryRequest
    on_TeamChangeParentTeamAuditEntry?: TeamChangeParentTeamAuditEntryRequest
    on_TeamRemoveMemberAuditEntry?: TeamRemoveMemberAuditEntryRequest
    on_TeamRemoveRepositoryAuditEntry?: TeamRemoveRepositoryAuditEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface OrganizationAuditEntryEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: OrganizationAuditEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Organization. */
export interface OrganizationConnectionRequest{
    /** A list of edges. */
    edges?: OrganizationEdgeRequest
    /** A list of nodes. */
    nodes?: OrganizationRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface OrganizationEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: OrganizationRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An Identity Provider configured to provision SAML and SCIM identities for Organizations */
export interface OrganizationIdentityProviderRequest{
    /** The digest algorithm used to sign SAML requests for the Identity Provider. */
    digestMethod?: boolean | number
    /** External Identities provisioned by this Identity Provider */
    externalIdentities?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},ExternalIdentityConnectionRequest] | ExternalIdentityConnectionRequest
    id?: boolean | number
    /** The x509 certificate used by the Identity Provder to sign assertions and responses. */
    idpCertificate?: boolean | number
    /** The Issuer Entity ID for the SAML Identity Provider */
    issuer?: boolean | number
    /** Organization this Identity Provider belongs to */
    organization?: OrganizationRequest
    /** The signature algorithm used to sign SAML requests for the Identity Provider. */
    signatureMethod?: boolean | number
    /** The URL endpoint for the Identity Provider's SAML SSO. */
    ssoUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An Invitation for a user to an organization. */
export interface OrganizationInvitationRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The email address of the user invited to the organization. */
    email?: boolean | number
    id?: boolean | number
    /** The type of invitation that was sent (e.g. email, user). */
    invitationType?: boolean | number
    /** The user who was invited to the organization. */
    invitee?: UserRequest
    /** The user who created the invitation. */
    inviter?: UserRequest
    /** The organization the invite is for */
    organization?: OrganizationRequest
    /** The user's pending role in the organization (e.g. member, owner). */
    role?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for OrganizationInvitation. */
export interface OrganizationInvitationConnectionRequest{
    /** A list of edges. */
    edges?: OrganizationInvitationEdgeRequest
    /** A list of nodes. */
    nodes?: OrganizationInvitationRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface OrganizationInvitationEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: OrganizationInvitationRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for User. */
export interface OrganizationMemberConnectionRequest{
    /** A list of edges. */
    edges?: OrganizationMemberEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a user within an organization. */
export interface OrganizationMemberEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer. */
    hasTwoFactorEnabled?: boolean | number
    /** The item at the end of the edge. */
    node?: UserRequest
    /** The role this user has in the organization. */
    role?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for organization connections. */
export interface OrganizationOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order organizations by. */
field: OrganizationOrderField}


/** An organization teams hovercard context */
export interface OrganizationTeamsHovercardContextRequest{
    /** A string describing this context */
    message?: boolean | number
    /** An octicon to accompany this context */
    octicon?: boolean | number
    /** Teams in this organization the user is a member of that are relevant */
    relevantTeams?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},TeamConnectionRequest] | TeamConnectionRequest
    /** The path for the full team list for this user */
    teamsResourcePath?: boolean | number
    /** The URL for the full team list for this user */
    teamsUrl?: boolean | number
    /** The total number of teams the user is on in the organization */
    totalTeamCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An organization list hovercard context */
export interface OrganizationsHovercardContextRequest{
    /** A string describing this context */
    message?: boolean | number
    /** An octicon to accompany this context */
    octicon?: boolean | number
    /** Organizations this user is a member of that are relevant */
    relevantOrganizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},OrganizationConnectionRequest] | OrganizationConnectionRequest
    /** The total number of organizations this user is in */
    totalOrganizationCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information for an uploaded package. */
export interface PackageRequest{
    id?: boolean | number
    /** Find the latest version for the package. */
    latestVersion?: PackageVersionRequest
    /** Identifies the name of the package. */
    name?: boolean | number
    /** Identifies the type of the package. */
    packageType?: boolean | number
    /** The repository this package belongs to. */
    repository?: RepositoryRequest
    /** Statistics about package activity. */
    statistics?: PackageStatisticsRequest
    /** Find package version by version string. */
    version?: [{
    /** The package version. */
    version: Scalars['String']},PackageVersionRequest]
    /** list of versions for this package */
    versions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering of the returned packages. */
    orderBy?: (PackageVersionOrder | null)},PackageVersionConnectionRequest] | PackageVersionConnectionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Package. */
export interface PackageConnectionRequest{
    /** A list of edges. */
    edges?: PackageEdgeRequest
    /** A list of nodes. */
    nodes?: PackageRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PackageEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PackageRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A file in a package version. */
export interface PackageFileRequest{
    id?: boolean | number
    /** MD5 hash of the file. */
    md5?: boolean | number
    /** Name of the file. */
    name?: boolean | number
    /** The package version this file belongs to. */
    packageVersion?: PackageVersionRequest
    /** SHA1 hash of the file. */
    sha1?: boolean | number
    /** SHA256 hash of the file. */
    sha256?: boolean | number
    /** Size of the file in bytes. */
    size?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** URL to download the asset. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for PackageFile. */
export interface PackageFileConnectionRequest{
    /** A list of edges. */
    edges?: PackageFileEdgeRequest
    /** A list of nodes. */
    nodes?: PackageFileRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PackageFileEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PackageFileRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which lists of package files can be ordered upon return. */
export interface PackageFileOrder {
/** The direction in which to order package files by the specified field. */
direction?: (OrderDirection | null),
/** The field in which to order package files by. */
field?: (PackageFileOrderField | null)}


/** Ways in which lists of packages can be ordered upon return. */
export interface PackageOrder {
/** The direction in which to order packages by the specified field. */
direction?: (OrderDirection | null),
/** The field in which to order packages by. */
field?: (PackageOrderField | null)}


/** Represents an owner of a package. */
export interface PackageOwnerRequest{
    id?: boolean | number
    /** A list of packages under the owner. */
    packages?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Find packages by their names. */
    names?: ((Scalars['String'] | null)[] | null),
    /** Ordering of the returned packages. */
    orderBy?: (PackageOrder | null),
    /** Find packages in a repository by ID. */
    repositoryId?: (Scalars['ID'] | null)},PackageConnectionRequest] | PackageConnectionRequest
    on_Organization?: OrganizationRequest
    on_Repository?: RepositoryRequest
    on_User?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a object that contains package activity statistics such as downloads. */
export interface PackageStatisticsRequest{
    /** Number of times the package was downloaded since it was created. */
    downloadsTotalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A version tag contains the mapping between a tag name and a version. */
export interface PackageTagRequest{
    id?: boolean | number
    /** Identifies the tag name of the version. */
    name?: boolean | number
    /** Version that the tag is associated with. */
    version?: PackageVersionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a specific package version. */
export interface PackageVersionRequest{
    /** List of files associated with this package version */
    files?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering of the returned package files. */
    orderBy?: (PackageFileOrder | null)},PackageFileConnectionRequest] | PackageFileConnectionRequest
    id?: boolean | number
    /** The package associated with this version. */
    package?: PackageRequest
    /** The platform this version was built for. */
    platform?: boolean | number
    /** Whether or not this version is a pre-release. */
    preRelease?: boolean | number
    /** The README of this package version. */
    readme?: boolean | number
    /** The release associated with this package version. */
    release?: ReleaseRequest
    /** Statistics about package activity. */
    statistics?: PackageVersionStatisticsRequest
    /** The package version summary. */
    summary?: boolean | number
    /** The version string. */
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for PackageVersion. */
export interface PackageVersionConnectionRequest{
    /** A list of edges. */
    edges?: PackageVersionEdgeRequest
    /** A list of nodes. */
    nodes?: PackageVersionRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PackageVersionEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PackageVersionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which lists of package versions can be ordered upon return. */
export interface PackageVersionOrder {
/** The direction in which to order package versions by the specified field. */
direction?: (OrderDirection | null),
/** The field in which to order package versions by. */
field?: (PackageVersionOrderField | null)}


/** Represents a object that contains package version activity statistics such as downloads. */
export interface PackageVersionStatisticsRequest{
    /** Number of times the package was downloaded since it was created. */
    downloadsTotalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about pagination in a connection. */
export interface PageInfoRequest{
    /** When paginating forwards, the cursor to continue. */
    endCursor?: boolean | number
    /** When paginating forwards, are there more items? */
    hasNextPage?: boolean | number
    /** When paginating backwards, are there more items? */
    hasPreviousPage?: boolean | number
    /** When paginating backwards, the cursor to continue. */
    startCursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Types that can grant permissions on a repository to a user */
export interface PermissionGranterRequest{
    on_Organization?:OrganizationRequest,
    on_Repository?:RepositoryRequest,
    on_Team?:TeamRequest,
    on_Actor?: ActorRequest,
    on_MemberStatusable?: MemberStatusableRequest,
    on_Node?: NodeRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProfileOwner?: ProfileOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryOwner?: RepositoryOwnerRequest,
    on_Sponsorable?: SponsorableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_RepositoryInfo?: RepositoryInfoRequest,
    on_Starrable?: StarrableRequest,
    on_Subscribable?: SubscribableRequest,
    __typename?: boolean | number
}


/** A level of permission and source for a user's access to a repository. */
export interface PermissionSourceRequest{
    /** The organization the repository belongs to. */
    organization?: OrganizationRequest
    /** The level of access this source has granted to the user. */
    permission?: boolean | number
    /** The source of this permission. */
    source?: PermissionGranterRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of PinIssue */
export interface PinIssueInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the issue to be pinned */
issueId: Scalars['ID']}


/** Autogenerated return type of PinIssue */
export interface PinIssuePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The issue that was pinned */
    issue?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Types that can be pinned to a profile page. */
export interface PinnableItemRequest{
    on_Gist?:GistRequest,
    on_Repository?:RepositoryRequest,
    on_Node?: NodeRequest,
    on_Starrable?: StarrableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryInfo?: RepositoryInfoRequest,
    on_Subscribable?: SubscribableRequest,
    __typename?: boolean | number
}


/** The connection type for PinnableItem. */
export interface PinnableItemConnectionRequest{
    /** A list of edges. */
    edges?: PinnableItemEdgeRequest
    /** A list of nodes. */
    nodes?: PinnableItemRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PinnableItemEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PinnableItemRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'pinned' event on a given issue or pull request. */
export interface PinnedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Identifies the issue associated with the event. */
    issue?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Pinned Issue is a issue pinned to a repository's index page. */
export interface PinnedIssueRequest{
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** The issue that was pinned. */
    issue?: IssueRequest
    /** The actor that pinned this issue. */
    pinnedBy?: ActorRequest
    /** The repository that this issue was pinned to. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for PinnedIssue. */
export interface PinnedIssueConnectionRequest{
    /** A list of edges. */
    edges?: PinnedIssueEdgeRequest
    /** A list of nodes. */
    nodes?: PinnedIssueRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PinnedIssueEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PinnedIssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a private_repository_forking.disable event. */
export interface PrivateRepositoryForkingDisableAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: boolean | number
    /** The slug of the enterprise. */
    enterpriseSlug?: boolean | number
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a private_repository_forking.enable event. */
export interface PrivateRepositoryForkingEnableAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: boolean | number
    /** The slug of the enterprise. */
    enterpriseSlug?: boolean | number
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A curatable list of repositories relating to a repository owner, which defaults
 * to showing the most popular repositories they own.
 */
export interface ProfileItemShowcaseRequest{
    /** Whether or not the owner has pinned any repositories or gists. */
    hasPinnedItems?: boolean | number
    /**
     * The repositories and gists in the showcase. If the profile owner has any
     * pinned items, those will be returned. Otherwise, the profile owner's popular
     * repositories will be returned.
     */
    items?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},PinnableItemConnectionRequest] | PinnableItemConnectionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents any entity on GitHub that has a profile page. */
export interface ProfileOwnerRequest{
    /** Determine if this repository owner has any items that can be pinned to their profile. */
    anyPinnableItems?: [{
    /** Filter to only a particular kind of pinnable item. */
    type?: (PinnableItemType | null)}] | boolean | number
    /** The public profile email. */
    email?: boolean | number
    id?: boolean | number
    /**
     * Showcases a selection of repositories and gists that the profile owner has
     * either curated or that have been selected automatically based on popularity.
     */
    itemShowcase?: ProfileItemShowcaseRequest
    /** The public profile location. */
    location?: boolean | number
    /** The username used to login. */
    login?: boolean | number
    /** The public profile name. */
    name?: boolean | number
    /** A list of repositories and gists this profile owner can pin to their profile. */
    pinnableItems?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter the types of pinnable items that are returned. */
    types?: (PinnableItemType[] | null)},PinnableItemConnectionRequest] | PinnableItemConnectionRequest
    /** A list of repositories and gists this profile owner has pinned to their profile */
    pinnedItems?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter the types of pinned items that are returned. */
    types?: (PinnableItemType[] | null)},PinnableItemConnectionRequest] | PinnableItemConnectionRequest
    /** Returns how many more items this profile owner can pin to their profile. */
    pinnedItemsRemaining?: boolean | number
    /** Can the viewer pin repositories and gists to the profile? */
    viewerCanChangePinnedItems?: boolean | number
    /** The public profile website URL. */
    websiteUrl?: boolean | number
    on_Organization?: OrganizationRequest
    on_User?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Projects manage issues, pull requests and notes within a project owner. */
export interface ProjectRequest{
    /** The project's description body. */
    body?: boolean | number
    /** The projects description body rendered to HTML. */
    bodyHTML?: boolean | number
    /** `true` if the object is closed (definition of closed may depend on type) */
    closed?: boolean | number
    /** Identifies the date and time when the object was closed. */
    closedAt?: boolean | number
    /** List of columns in the project */
    columns?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},ProjectColumnConnectionRequest] | ProjectColumnConnectionRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The actor who originally created the project. */
    creator?: ActorRequest
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** The project's name. */
    name?: boolean | number
    /** The project's number. */
    number?: boolean | number
    /** The project's owner. Currently limited to repositories, organizations, and users. */
    owner?: ProjectOwnerRequest
    /** List of pending cards in this project */
    pendingCards?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** A list of archived states to filter the cards by */
    archivedStates?: ((ProjectCardArchivedState | null)[] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},ProjectCardConnectionRequest] | ProjectCardConnectionRequest
    /** The HTTP path for this project */
    resourcePath?: boolean | number
    /** Whether the project is open or closed. */
    state?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this project */
    url?: boolean | number
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A card in a project. */
export interface ProjectCardRequest{
    /**
     * The project column this card is associated under. A card may only belong to one
     * project column at a time. The column field will be null if the card is created
     * in a pending state and has yet to be associated with a column. Once cards are
     * associated with a column, they will not become pending in the future.
     */
    column?: ProjectColumnRequest
    /** The card content item */
    content?: ProjectCardItemRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The actor who created this card */
    creator?: ActorRequest
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** Whether the card is archived */
    isArchived?: boolean | number
    /** The card note */
    note?: boolean | number
    /** The project that contains this card. */
    project?: ProjectRequest
    /** The HTTP path for this card */
    resourcePath?: boolean | number
    /** The state of ProjectCard */
    state?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this card */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for ProjectCard. */
export interface ProjectCardConnectionRequest{
    /** A list of edges. */
    edges?: ProjectCardEdgeRequest
    /** A list of nodes. */
    nodes?: ProjectCardRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface ProjectCardEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: ProjectCardRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An issue or PR and its owning repository to be used in a project card. */
export interface ProjectCardImport {
/** The issue or pull request number. */
number: Scalars['Int'],
/** Repository name with owner (owner/repository). */
repository: Scalars['String']}


/** Types that can be inside Project Cards. */
export interface ProjectCardItemRequest{
    on_Issue?:IssueRequest,
    on_PullRequest?:PullRequestRequest,
    on_Assignable?: AssignableRequest,
    on_Closable?: ClosableRequest,
    on_Comment?: CommentRequest,
    on_Labelable?: LabelableRequest,
    on_Lockable?: LockableRequest,
    on_Node?: NodeRequest,
    on_Reactable?: ReactableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Subscribable?: SubscribableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    __typename?: boolean | number
}


/** A column inside a project. */
export interface ProjectColumnRequest{
    /** List of cards in the column */
    cards?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** A list of archived states to filter the cards by */
    archivedStates?: ((ProjectCardArchivedState | null)[] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},ProjectCardConnectionRequest] | ProjectCardConnectionRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** The project column's name. */
    name?: boolean | number
    /** The project that contains this column. */
    project?: ProjectRequest
    /** The semantic purpose of the column */
    purpose?: boolean | number
    /** The HTTP path for this project column */
    resourcePath?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this project column */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for ProjectColumn. */
export interface ProjectColumnConnectionRequest{
    /** A list of edges. */
    edges?: ProjectColumnEdgeRequest
    /** A list of nodes. */
    nodes?: ProjectColumnRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface ProjectColumnEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: ProjectColumnRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A project column and a list of its issues and PRs. */
export interface ProjectColumnImport {
/** The name of the column. */
columnName: Scalars['String'],
/** A list of issues and pull requests in the column. */
issues?: (ProjectCardImport[] | null),
/** The position of the column, starting from 0. */
position: Scalars['Int']}


/** A list of projects associated with the owner. */
export interface ProjectConnectionRequest{
    /** A list of edges. */
    edges?: ProjectEdgeRequest
    /** A list of nodes. */
    nodes?: ProjectRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface ProjectEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: ProjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which lists of projects can be ordered upon return. */
export interface ProjectOrder {
/** The direction in which to order projects by the specified field. */
direction: OrderDirection,
/** The field in which to order projects by. */
field: ProjectOrderField}


/** Represents an owner of a Project. */
export interface ProjectOwnerRequest{
    id?: boolean | number
    /** Find project by number. */
    project?: [{
    /** The project number to find. */
    number: Scalars['Int']},ProjectRequest]
    /** A list of projects under the owner. */
    projects?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for projects returned from the connection */
    orderBy?: (ProjectOrder | null),
    /** Query to search projects by, currently only searching by name. */
    search?: (Scalars['String'] | null),
    /** A list of states to filter the projects by. */
    states?: (ProjectState[] | null)},ProjectConnectionRequest] | ProjectConnectionRequest
    /** The HTTP path listing owners projects */
    projectsResourcePath?: boolean | number
    /** The HTTP URL listing owners projects */
    projectsUrl?: boolean | number
    /** Can the current viewer create new projects on this owner. */
    viewerCanCreateProjects?: boolean | number
    on_Organization?: OrganizationRequest
    on_Repository?: RepositoryRequest
    on_User?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A user's public key. */
export interface PublicKeyRequest{
    /** The last time this authorization was used to perform an action. Values will be null for keys not owned by the user. */
    accessedAt?: boolean | number
    /**
     * Identifies the date and time when the key was created. Keys created before
     * March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user.
     */
    createdAt?: boolean | number
    /** The fingerprint for this PublicKey. */
    fingerprint?: boolean | number
    id?: boolean | number
    /** Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user. */
    isReadOnly?: boolean | number
    /** The public key string. */
    key?: boolean | number
    /**
     * Identifies the date and time when the key was updated. Keys created before
     * March 5th, 2014 may have inaccurate values. Values will be null for keys not
     * owned by the user.
     */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for PublicKey. */
export interface PublicKeyConnectionRequest{
    /** A list of edges. */
    edges?: PublicKeyEdgeRequest
    /** A list of nodes. */
    nodes?: PublicKeyRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PublicKeyEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PublicKeyRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A repository pull request. */
export interface PullRequestRequest{
    /** Reason that the conversation was locked. */
    activeLockReason?: boolean | number
    /** The number of additions in this pull request. */
    additions?: boolean | number
    /** A list of Users assigned to this object. */
    assignees?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserConnectionRequest] | UserConnectionRequest
    /** The actor who authored the comment. */
    author?: ActorRequest
    /** Author's association with the subject of the comment. */
    authorAssociation?: boolean | number
    /** Identifies the base Ref associated with the pull request. */
    baseRef?: RefRequest
    /** Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted. */
    baseRefName?: boolean | number
    /** Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted. */
    baseRefOid?: boolean | number
    /** The repository associated with this pull request's base Ref. */
    baseRepository?: RepositoryRequest
    /** The body as Markdown. */
    body?: boolean | number
    /** The body rendered to HTML. */
    bodyHTML?: boolean | number
    /** The body rendered to text. */
    bodyText?: boolean | number
    /** Whether or not the pull request is rebaseable. */
    canBeRebased?: boolean | number
    /** The number of changed files in this pull request. */
    changedFiles?: boolean | number
    /** The HTTP path for the checks of this pull request. */
    checksResourcePath?: boolean | number
    /** The HTTP URL for the checks of this pull request. */
    checksUrl?: boolean | number
    /** `true` if the pull request is closed */
    closed?: boolean | number
    /** Identifies the date and time when the object was closed. */
    closedAt?: boolean | number
    /** A list of comments associated with the pull request. */
    comments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},IssueCommentConnectionRequest] | IssueCommentConnectionRequest
    /** A list of commits present in this pull request's head branch not present in the base branch. */
    commits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},PullRequestCommitConnectionRequest] | PullRequestCommitConnectionRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Check if this comment was created via an email reply. */
    createdViaEmail?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The number of deletions in this pull request. */
    deletions?: boolean | number
    /** The actor who edited this pull request's body. */
    editor?: ActorRequest
    /** Lists the files changed within this pull request. */
    files?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},PullRequestChangedFileConnectionRequest] | PullRequestChangedFileConnectionRequest
    /** Identifies the head Ref associated with the pull request. */
    headRef?: RefRequest
    /** Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted. */
    headRefName?: boolean | number
    /** Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted. */
    headRefOid?: boolean | number
    /** The repository associated with this pull request's head Ref. */
    headRepository?: RepositoryRequest
    /** The owner of the repository associated with this pull request's head Ref. */
    headRepositoryOwner?: RepositoryOwnerRequest
    /** The hovercard information for this issue */
    hovercard?: [{
    /** Whether or not to include notification contexts */
    includeNotificationContexts?: (Scalars['Boolean'] | null)},HovercardRequest] | HovercardRequest
    id?: boolean | number
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit?: boolean | number
    /** The head and base repositories are different. */
    isCrossRepository?: boolean | number
    /** Identifies if the pull request is a draft. */
    isDraft?: boolean | number
    /** A list of labels associated with the object. */
    labels?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for labels returned from the connection. */
    orderBy?: (LabelOrder | null)},LabelConnectionRequest] | LabelConnectionRequest
    /** The moment the editor made the last edit */
    lastEditedAt?: boolean | number
    /** `true` if the pull request is locked */
    locked?: boolean | number
    /** Indicates whether maintainers can modify the pull request. */
    maintainerCanModify?: boolean | number
    /** The commit that was created when this pull request was merged. */
    mergeCommit?: CommitRequest
    /** Detailed information about the current pull request merge state status. */
    mergeStateStatus?: boolean | number
    /** Whether or not the pull request can be merged based on the existence of merge conflicts. */
    mergeable?: boolean | number
    /** Whether or not the pull request was merged. */
    merged?: boolean | number
    /** The date and time that the pull request was merged. */
    mergedAt?: boolean | number
    /** The actor who merged the pull request. */
    mergedBy?: ActorRequest
    /** Identifies the milestone associated with the pull request. */
    milestone?: MilestoneRequest
    /** Identifies the pull request number. */
    number?: boolean | number
    /** A list of Users that are participating in the Pull Request conversation. */
    participants?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserConnectionRequest] | UserConnectionRequest
    /** The permalink to the pull request. */
    permalink?: boolean | number
    /**
     * The commit that GitHub automatically generated to test if this pull request
     * could be merged. This field will not return a value if the pull request is
     * merged, or if the test merge commit is still being generated. See the
     * `mergeable` field for more details on the mergeability of the pull request.
     */
    potentialMergeCommit?: CommitRequest
    /** List of project cards associated with this pull request. */
    projectCards?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** A list of archived states to filter the cards by */
    archivedStates?: ((ProjectCardArchivedState | null)[] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},ProjectCardConnectionRequest] | ProjectCardConnectionRequest
    /** Identifies when the comment was published at. */
    publishedAt?: boolean | number
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroupRequest
    /** A list of Reactions left on the Issue. */
    reactions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Allows filtering Reactions by emoji. */
    content?: (ReactionContent | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows specifying the order in which reactions are returned. */
    orderBy?: (ReactionOrder | null)},ReactionConnectionRequest] | ReactionConnectionRequest
    /** The repository associated with this node. */
    repository?: RepositoryRequest
    /** The HTTP path for this pull request. */
    resourcePath?: boolean | number
    /** The HTTP path for reverting this pull request. */
    revertResourcePath?: boolean | number
    /** The HTTP URL for reverting this pull request. */
    revertUrl?: boolean | number
    /** The current status of this pull request with respect to code review. */
    reviewDecision?: boolean | number
    /** A list of review requests associated with the pull request. */
    reviewRequests?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},ReviewRequestConnectionRequest] | ReviewRequestConnectionRequest
    /** The list of all review threads for this pull request. */
    reviewThreads?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},PullRequestReviewThreadConnectionRequest] | PullRequestReviewThreadConnectionRequest
    /** A list of reviews associated with the pull request. */
    reviews?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Filter by author of the review. */
    author?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** A list of states to filter the reviews. */
    states?: (PullRequestReviewState[] | null)},PullRequestReviewConnectionRequest] | PullRequestReviewConnectionRequest
    /** Identifies the state of the pull request. */
    state?: boolean | number
    /** A list of reviewer suggestions based on commit history and past review comments. */
    suggestedReviewers?: SuggestedReviewerRequest
    /**
     * @deprecated `timeline` will be removed Use PullRequest.timelineItems instead. Removal on 2020-10-01 UTC.
     * A list of events, comments, commits, etc. associated with the pull request.
     */
    timeline?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows filtering timeline events by a `since` timestamp. */
    since?: (Scalars['DateTime'] | null)},PullRequestTimelineConnectionRequest] | PullRequestTimelineConnectionRequest
    /** A list of events, comments, commits, etc. associated with the pull request. */
    timelineItems?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Filter timeline items by type. */
    itemTypes?: (PullRequestTimelineItemsItemType[] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter timeline items by a `since` timestamp. */
    since?: (Scalars['DateTime'] | null),
    /** Skips the first _n_ elements in the list. */
    skip?: (Scalars['Int'] | null)},PullRequestTimelineItemsConnectionRequest] | PullRequestTimelineItemsConnectionRequest
    /** Identifies the pull request title. */
    title?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this pull request. */
    url?: boolean | number
    /** A list of edits to this content. */
    userContentEdits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserContentEditConnectionRequest] | UserContentEditConnectionRequest
    /** Whether or not the viewer can apply suggestion. */
    viewerCanApplySuggestion?: boolean | number
    /** Can user react to this subject */
    viewerCanReact?: boolean | number
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe?: boolean | number
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons?: boolean | number
    /** Did the viewer author this comment. */
    viewerDidAuthor?: boolean | number
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A file changed in a pull request. */
export interface PullRequestChangedFileRequest{
    /** The number of additions to the file. */
    additions?: boolean | number
    /** The number of deletions to the file. */
    deletions?: boolean | number
    /** The path of the file. */
    path?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for PullRequestChangedFile. */
export interface PullRequestChangedFileConnectionRequest{
    /** A list of edges. */
    edges?: PullRequestChangedFileEdgeRequest
    /** A list of nodes. */
    nodes?: PullRequestChangedFileRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PullRequestChangedFileEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PullRequestChangedFileRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Git commit part of a pull request. */
export interface PullRequestCommitRequest{
    /** The Git commit object */
    commit?: CommitRequest
    id?: boolean | number
    /** The pull request this commit belongs to */
    pullRequest?: PullRequestRequest
    /** The HTTP path for this pull request commit */
    resourcePath?: boolean | number
    /** The HTTP URL for this pull request commit */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a commit comment thread part of a pull request. */
export interface PullRequestCommitCommentThreadRequest{
    /** The comments that exist in this thread. */
    comments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},CommitCommentConnectionRequest] | CommitCommentConnectionRequest
    /** The commit the comments were made on. */
    commit?: CommitRequest
    id?: boolean | number
    /** The file the comments were made on. */
    path?: boolean | number
    /** The position in the diff for the commit that the comment was made on. */
    position?: boolean | number
    /** The pull request this commit comment thread belongs to */
    pullRequest?: PullRequestRequest
    /** The repository associated with this node. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for PullRequestCommit. */
export interface PullRequestCommitConnectionRequest{
    /** A list of edges. */
    edges?: PullRequestCommitEdgeRequest
    /** A list of nodes. */
    nodes?: PullRequestCommitRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PullRequestCommitEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PullRequestCommitRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for PullRequest. */
export interface PullRequestConnectionRequest{
    /** A list of edges. */
    edges?: PullRequestEdgeRequest
    /** A list of nodes. */
    nodes?: PullRequestRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** This aggregates pull requests opened by a user within one repository. */
export interface PullRequestContributionsByRepositoryRequest{
    /** The pull request contributions. */
    contributions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for contributions returned from the connection. */
    orderBy?: (ContributionOrder | null)},CreatedPullRequestContributionConnectionRequest] | CreatedPullRequestContributionConnectionRequest
    /** The repository in which the pull requests were opened. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PullRequestEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which lists of issues can be ordered upon return. */
export interface PullRequestOrder {
/** The direction in which to order pull requests by the specified field. */
direction: OrderDirection,
/** The field in which to order pull requests by. */
field: PullRequestOrderField}


/** A review object for a given pull request. */
export interface PullRequestReviewRequest{
    /** The actor who authored the comment. */
    author?: ActorRequest
    /** Author's association with the subject of the comment. */
    authorAssociation?: boolean | number
    /** Identifies the pull request review body. */
    body?: boolean | number
    /** The body rendered to HTML. */
    bodyHTML?: boolean | number
    /** The body of this review rendered as plain text. */
    bodyText?: boolean | number
    /** A list of review comments for the current pull request review. */
    comments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},PullRequestReviewCommentConnectionRequest] | PullRequestReviewCommentConnectionRequest
    /** Identifies the commit associated with this pull request review. */
    commit?: CommitRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Check if this comment was created via an email reply. */
    createdViaEmail?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The actor who edited the comment. */
    editor?: ActorRequest
    id?: boolean | number
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit?: boolean | number
    /** The moment the editor made the last edit */
    lastEditedAt?: boolean | number
    /** A list of teams that this review was made on behalf of. */
    onBehalfOf?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},TeamConnectionRequest] | TeamConnectionRequest
    /** Identifies when the comment was published at. */
    publishedAt?: boolean | number
    /** Identifies the pull request associated with this pull request review. */
    pullRequest?: PullRequestRequest
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroupRequest
    /** A list of Reactions left on the Issue. */
    reactions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Allows filtering Reactions by emoji. */
    content?: (ReactionContent | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows specifying the order in which reactions are returned. */
    orderBy?: (ReactionOrder | null)},ReactionConnectionRequest] | ReactionConnectionRequest
    /** The repository associated with this node. */
    repository?: RepositoryRequest
    /** The HTTP path permalink for this PullRequestReview. */
    resourcePath?: boolean | number
    /** Identifies the current state of the pull request review. */
    state?: boolean | number
    /** Identifies when the Pull Request Review was submitted */
    submittedAt?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL permalink for this PullRequestReview. */
    url?: boolean | number
    /** A list of edits to this content. */
    userContentEdits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserContentEditConnectionRequest] | UserContentEditConnectionRequest
    /** Check if the current viewer can delete this object. */
    viewerCanDelete?: boolean | number
    /** Can user react to this subject */
    viewerCanReact?: boolean | number
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons?: boolean | number
    /** Did the viewer author this comment. */
    viewerDidAuthor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A review comment associated with a given repository pull request. */
export interface PullRequestReviewCommentRequest{
    /** The actor who authored the comment. */
    author?: ActorRequest
    /** Author's association with the subject of the comment. */
    authorAssociation?: boolean | number
    /** The comment body of this review comment. */
    body?: boolean | number
    /** The body rendered to HTML. */
    bodyHTML?: boolean | number
    /** The comment body of this review comment rendered as plain text. */
    bodyText?: boolean | number
    /** Identifies the commit associated with the comment. */
    commit?: CommitRequest
    /** Identifies when the comment was created. */
    createdAt?: boolean | number
    /** Check if this comment was created via an email reply. */
    createdViaEmail?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The diff hunk to which the comment applies. */
    diffHunk?: boolean | number
    /** Identifies when the comment was created in a draft state. */
    draftedAt?: boolean | number
    /** The actor who edited the comment. */
    editor?: ActorRequest
    id?: boolean | number
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit?: boolean | number
    /** Returns whether or not a comment has been minimized. */
    isMinimized?: boolean | number
    /** The moment the editor made the last edit */
    lastEditedAt?: boolean | number
    /** Returns why the comment was minimized. */
    minimizedReason?: boolean | number
    /** Identifies the original commit associated with the comment. */
    originalCommit?: CommitRequest
    /** The original line index in the diff to which the comment applies. */
    originalPosition?: boolean | number
    /** Identifies when the comment body is outdated */
    outdated?: boolean | number
    /** The path to which the comment applies. */
    path?: boolean | number
    /** The line index in the diff to which the comment applies. */
    position?: boolean | number
    /** Identifies when the comment was published at. */
    publishedAt?: boolean | number
    /** The pull request associated with this review comment. */
    pullRequest?: PullRequestRequest
    /** The pull request review associated with this review comment. */
    pullRequestReview?: PullRequestReviewRequest
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroupRequest
    /** A list of Reactions left on the Issue. */
    reactions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Allows filtering Reactions by emoji. */
    content?: (ReactionContent | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows specifying the order in which reactions are returned. */
    orderBy?: (ReactionOrder | null)},ReactionConnectionRequest] | ReactionConnectionRequest
    /** The comment this is a reply to. */
    replyTo?: PullRequestReviewCommentRequest
    /** The repository associated with this node. */
    repository?: RepositoryRequest
    /** The HTTP path permalink for this review comment. */
    resourcePath?: boolean | number
    /** Identifies the state of the comment. */
    state?: boolean | number
    /** Identifies when the comment was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL permalink for this review comment. */
    url?: boolean | number
    /** A list of edits to this content. */
    userContentEdits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserContentEditConnectionRequest] | UserContentEditConnectionRequest
    /** Check if the current viewer can delete this object. */
    viewerCanDelete?: boolean | number
    /** Check if the current viewer can minimize this object. */
    viewerCanMinimize?: boolean | number
    /** Can user react to this subject */
    viewerCanReact?: boolean | number
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons?: boolean | number
    /** Did the viewer author this comment. */
    viewerDidAuthor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for PullRequestReviewComment. */
export interface PullRequestReviewCommentConnectionRequest{
    /** A list of edges. */
    edges?: PullRequestReviewCommentEdgeRequest
    /** A list of nodes. */
    nodes?: PullRequestReviewCommentRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PullRequestReviewCommentEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PullRequestReviewCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for PullRequestReview. */
export interface PullRequestReviewConnectionRequest{
    /** A list of edges. */
    edges?: PullRequestReviewEdgeRequest
    /** A list of nodes. */
    nodes?: PullRequestReviewRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** This aggregates pull request reviews made by a user within one repository. */
export interface PullRequestReviewContributionsByRepositoryRequest{
    /** The pull request review contributions. */
    contributions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for contributions returned from the connection. */
    orderBy?: (ContributionOrder | null)},CreatedPullRequestReviewContributionConnectionRequest] | CreatedPullRequestReviewContributionConnectionRequest
    /** The repository in which the pull request reviews were made. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PullRequestReviewEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PullRequestReviewRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A threaded list of comments for a given pull request. */
export interface PullRequestReviewThreadRequest{
    /** A list of pull request comments associated with the thread. */
    comments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Skips the first _n_ elements in the list. */
    skip?: (Scalars['Int'] | null)},PullRequestReviewCommentConnectionRequest] | PullRequestReviewCommentConnectionRequest
    /** The side of the diff on which this thread was placed. */
    diffSide?: boolean | number
    id?: boolean | number
    /** Whether this thread has been resolved */
    isResolved?: boolean | number
    /** The line in the file to which this thread refers */
    line?: boolean | number
    /** The original line in the file to which this thread refers. */
    originalLine?: boolean | number
    /** The original start line in the file to which this thread refers (multi-line only). */
    originalStartLine?: boolean | number
    /** Identifies the pull request associated with this thread. */
    pullRequest?: PullRequestRequest
    /** Identifies the repository associated with this thread. */
    repository?: RepositoryRequest
    /** The user who resolved this thread */
    resolvedBy?: UserRequest
    /** The side of the diff that the first line of the thread starts on (multi-line only) */
    startDiffSide?: boolean | number
    /** The start line in the file to which this thread refers (multi-line only) */
    startLine?: boolean | number
    /** Whether or not the viewer can resolve this thread */
    viewerCanResolve?: boolean | number
    /** Whether or not the viewer can unresolve this thread */
    viewerCanUnresolve?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Review comment threads for a pull request review. */
export interface PullRequestReviewThreadConnectionRequest{
    /** A list of edges. */
    edges?: PullRequestReviewThreadEdgeRequest
    /** A list of nodes. */
    nodes?: PullRequestReviewThreadRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PullRequestReviewThreadEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PullRequestReviewThreadRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits. */
export interface PullRequestRevisionMarkerRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The last commit the viewer has seen. */
    lastSeenCommit?: CommitRequest
    /** The pull request to which the marker belongs. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for PullRequestTimelineItem. */
export interface PullRequestTimelineConnectionRequest{
    /** A list of edges. */
    edges?: PullRequestTimelineItemEdgeRequest
    /** A list of nodes. */
    nodes?: PullRequestTimelineItemRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An item in an pull request timeline */
export interface PullRequestTimelineItemRequest{
    on_AssignedEvent?:AssignedEventRequest,
    on_BaseRefForcePushedEvent?:BaseRefForcePushedEventRequest,
    on_ClosedEvent?:ClosedEventRequest,
    on_Commit?:CommitRequest,
    on_CommitCommentThread?:CommitCommentThreadRequest,
    on_CrossReferencedEvent?:CrossReferencedEventRequest,
    on_DemilestonedEvent?:DemilestonedEventRequest,
    on_DeployedEvent?:DeployedEventRequest,
    on_DeploymentEnvironmentChangedEvent?:DeploymentEnvironmentChangedEventRequest,
    on_HeadRefDeletedEvent?:HeadRefDeletedEventRequest,
    on_HeadRefForcePushedEvent?:HeadRefForcePushedEventRequest,
    on_HeadRefRestoredEvent?:HeadRefRestoredEventRequest,
    on_IssueComment?:IssueCommentRequest,
    on_LabeledEvent?:LabeledEventRequest,
    on_LockedEvent?:LockedEventRequest,
    on_MergedEvent?:MergedEventRequest,
    on_MilestonedEvent?:MilestonedEventRequest,
    on_PullRequestReview?:PullRequestReviewRequest,
    on_PullRequestReviewComment?:PullRequestReviewCommentRequest,
    on_PullRequestReviewThread?:PullRequestReviewThreadRequest,
    on_ReferencedEvent?:ReferencedEventRequest,
    on_RenamedTitleEvent?:RenamedTitleEventRequest,
    on_ReopenedEvent?:ReopenedEventRequest,
    on_ReviewDismissedEvent?:ReviewDismissedEventRequest,
    on_ReviewRequestRemovedEvent?:ReviewRequestRemovedEventRequest,
    on_ReviewRequestedEvent?:ReviewRequestedEventRequest,
    on_SubscribedEvent?:SubscribedEventRequest,
    on_UnassignedEvent?:UnassignedEventRequest,
    on_UnlabeledEvent?:UnlabeledEventRequest,
    on_UnlockedEvent?:UnlockedEventRequest,
    on_UnsubscribedEvent?:UnsubscribedEventRequest,
    on_UserBlockedEvent?:UserBlockedEventRequest,
    on_Node?: NodeRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_GitObject?: GitObjectRequest,
    on_Subscribable?: SubscribableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Comment?: CommentRequest,
    on_Deletable?: DeletableRequest,
    on_Minimizable?: MinimizableRequest,
    on_Reactable?: ReactableRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    __typename?: boolean | number
}


/** An edge in a connection. */
export interface PullRequestTimelineItemEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PullRequestTimelineItemRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An item in a pull request timeline */
export interface PullRequestTimelineItemsRequest{
    on_AddedToProjectEvent?:AddedToProjectEventRequest,
    on_AssignedEvent?:AssignedEventRequest,
    on_AutomaticBaseChangeFailedEvent?:AutomaticBaseChangeFailedEventRequest,
    on_AutomaticBaseChangeSucceededEvent?:AutomaticBaseChangeSucceededEventRequest,
    on_BaseRefChangedEvent?:BaseRefChangedEventRequest,
    on_BaseRefForcePushedEvent?:BaseRefForcePushedEventRequest,
    on_ClosedEvent?:ClosedEventRequest,
    on_CommentDeletedEvent?:CommentDeletedEventRequest,
    on_ConnectedEvent?:ConnectedEventRequest,
    on_ConvertToDraftEvent?:ConvertToDraftEventRequest,
    on_ConvertedNoteToIssueEvent?:ConvertedNoteToIssueEventRequest,
    on_CrossReferencedEvent?:CrossReferencedEventRequest,
    on_DemilestonedEvent?:DemilestonedEventRequest,
    on_DeployedEvent?:DeployedEventRequest,
    on_DeploymentEnvironmentChangedEvent?:DeploymentEnvironmentChangedEventRequest,
    on_DisconnectedEvent?:DisconnectedEventRequest,
    on_HeadRefDeletedEvent?:HeadRefDeletedEventRequest,
    on_HeadRefForcePushedEvent?:HeadRefForcePushedEventRequest,
    on_HeadRefRestoredEvent?:HeadRefRestoredEventRequest,
    on_IssueComment?:IssueCommentRequest,
    on_LabeledEvent?:LabeledEventRequest,
    on_LockedEvent?:LockedEventRequest,
    on_MarkedAsDuplicateEvent?:MarkedAsDuplicateEventRequest,
    on_MentionedEvent?:MentionedEventRequest,
    on_MergedEvent?:MergedEventRequest,
    on_MilestonedEvent?:MilestonedEventRequest,
    on_MovedColumnsInProjectEvent?:MovedColumnsInProjectEventRequest,
    on_PinnedEvent?:PinnedEventRequest,
    on_PullRequestCommit?:PullRequestCommitRequest,
    on_PullRequestCommitCommentThread?:PullRequestCommitCommentThreadRequest,
    on_PullRequestReview?:PullRequestReviewRequest,
    on_PullRequestReviewThread?:PullRequestReviewThreadRequest,
    on_PullRequestRevisionMarker?:PullRequestRevisionMarkerRequest,
    on_ReadyForReviewEvent?:ReadyForReviewEventRequest,
    on_ReferencedEvent?:ReferencedEventRequest,
    on_RemovedFromProjectEvent?:RemovedFromProjectEventRequest,
    on_RenamedTitleEvent?:RenamedTitleEventRequest,
    on_ReopenedEvent?:ReopenedEventRequest,
    on_ReviewDismissedEvent?:ReviewDismissedEventRequest,
    on_ReviewRequestRemovedEvent?:ReviewRequestRemovedEventRequest,
    on_ReviewRequestedEvent?:ReviewRequestedEventRequest,
    on_SubscribedEvent?:SubscribedEventRequest,
    on_TransferredEvent?:TransferredEventRequest,
    on_UnassignedEvent?:UnassignedEventRequest,
    on_UnlabeledEvent?:UnlabeledEventRequest,
    on_UnlockedEvent?:UnlockedEventRequest,
    on_UnmarkedAsDuplicateEvent?:UnmarkedAsDuplicateEventRequest,
    on_UnpinnedEvent?:UnpinnedEventRequest,
    on_UnsubscribedEvent?:UnsubscribedEventRequest,
    on_UserBlockedEvent?:UserBlockedEventRequest,
    on_Node?: NodeRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_Comment?: CommentRequest,
    on_Deletable?: DeletableRequest,
    on_Minimizable?: MinimizableRequest,
    on_Reactable?: ReactableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    __typename?: boolean | number
}


/** The connection type for PullRequestTimelineItems. */
export interface PullRequestTimelineItemsConnectionRequest{
    /** A list of edges. */
    edges?: PullRequestTimelineItemsEdgeRequest
    /** Identifies the count of items after applying `before` and `after` filters. */
    filteredCount?: boolean | number
    /** A list of nodes. */
    nodes?: PullRequestTimelineItemsRequest
    /** Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing. */
    pageCount?: boolean | number
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    /** Identifies the date and time when the timeline was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PullRequestTimelineItemsEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PullRequestTimelineItemsRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Git push. */
export interface PushRequest{
    id?: boolean | number
    /** The SHA after the push */
    nextSha?: boolean | number
    /** The permalink for this push. */
    permalink?: boolean | number
    /** The SHA before the push */
    previousSha?: boolean | number
    /** The user who pushed */
    pusher?: UserRequest
    /** The repository that was pushed to */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A team, user or app who has the ability to push to a protected branch. */
export interface PushAllowanceRequest{
    /** The actor that can push. */
    actor?: PushAllowanceActorRequest
    /** Identifies the branch protection rule associated with the allowed user or team. */
    branchProtectionRule?: BranchProtectionRuleRequest
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Types that can be an actor. */
export interface PushAllowanceActorRequest{
    on_App?:AppRequest,
    on_Team?:TeamRequest,
    on_User?:UserRequest,
    on_Node?: NodeRequest,
    on_MemberStatusable?: MemberStatusableRequest,
    on_Subscribable?: SubscribableRequest,
    on_Actor?: ActorRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProfileOwner?: ProfileOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryOwner?: RepositoryOwnerRequest,
    on_Sponsorable?: SponsorableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    __typename?: boolean | number
}


/** The connection type for PushAllowance. */
export interface PushAllowanceConnectionRequest{
    /** A list of edges. */
    edges?: PushAllowanceEdgeRequest
    /** A list of nodes. */
    nodes?: PushAllowanceRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface PushAllowanceEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: PushAllowanceRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The query root of GitHub's GraphQL interface. */
export interface QueryRequest{
    /** Look up a code of conduct by its key */
    codeOfConduct?: [{
    /** The code of conduct's key */
    key: Scalars['String']},CodeOfConductRequest]
    /** Look up a code of conduct by its key */
    codesOfConduct?: CodeOfConductRequest
    /** Look up an enterprise by URL slug. */
    enterprise?: [{
    /** The enterprise invitation token. */
    invitationToken?: (Scalars['String'] | null),
    /** The enterprise URL slug. */
    slug: Scalars['String']},EnterpriseRequest]
    /** Look up a pending enterprise administrator invitation by invitee, enterprise and role. */
    enterpriseAdministratorInvitation?: [{
    /** The slug of the enterprise the user was invited to join. */
    enterpriseSlug: Scalars['String'],
    /** The role for the business member invitation. */
    role: EnterpriseAdministratorRole,
    /** The login of the user invited to join the business. */
    userLogin: Scalars['String']},EnterpriseAdministratorInvitationRequest]
    /** Look up a pending enterprise administrator invitation by invitation token. */
    enterpriseAdministratorInvitationByToken?: [{
    /** The invitation token sent with the invitation email. */
    invitationToken: Scalars['String']},EnterpriseAdministratorInvitationRequest]
    /** Look up an open source license by its key */
    license?: [{
    /** The license's downcased SPDX ID */
    key: Scalars['String']},LicenseRequest]
    /** Return a list of known open source licenses */
    licenses?: LicenseRequest
    /** Get alphabetically sorted list of Marketplace categories */
    marketplaceCategories?: [{
    /** Exclude categories with no listings. */
    excludeEmpty?: (Scalars['Boolean'] | null),
    /** Returns top level categories only, excluding any subcategories. */
    excludeSubcategories?: (Scalars['Boolean'] | null),
    /** Return only the specified categories. */
    includeCategories?: (Scalars['String'][] | null)},MarketplaceCategoryRequest] | MarketplaceCategoryRequest
    /** Look up a Marketplace category by its slug. */
    marketplaceCategory?: [{
    /** The URL slug of the category. */
    slug: Scalars['String'],
    /** Also check topic aliases for the category slug */
    useTopicAliases?: (Scalars['Boolean'] | null)},MarketplaceCategoryRequest]
    /** Look up a single Marketplace listing */
    marketplaceListing?: [{
    /** Select the listing that matches this slug. It's the short name of the listing used in its URL. */
    slug: Scalars['String']},MarketplaceListingRequest]
    /** Look up Marketplace listings */
    marketplaceListings?: [{
    /** Select listings that can be administered by the specified user. */
    adminId?: (Scalars['ID'] | null),
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /**
     * Select listings visible to the viewer even if they are not approved. If omitted or
     * false, only approved listings will be returned.
     */
    allStates?: (Scalars['Boolean'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Select only listings with the given category. */
    categorySlug?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Select listings for products owned by the specified organization. */
    organizationId?: (Scalars['ID'] | null),
    /** Select only listings where the primary category matches the given category slug. */
    primaryCategoryOnly?: (Scalars['Boolean'] | null),
    /** Select the listings with these slugs, if they are visible to the viewer. */
    slugs?: ((Scalars['String'] | null)[] | null),
    /** Also check topic aliases for the category slug */
    useTopicAliases?: (Scalars['Boolean'] | null),
    /**
     * Select listings to which user has admin access. If omitted, listings visible to the
     * viewer are returned.
     */
    viewerCanAdmin?: (Scalars['Boolean'] | null),
    /** Select only listings that offer a free trial. */
    withFreeTrialsOnly?: (Scalars['Boolean'] | null)},MarketplaceListingConnectionRequest] | MarketplaceListingConnectionRequest
    /** Return information about the GitHub instance */
    meta?: GitHubMetadataRequest
    /** Fetches an object given its ID. */
    node?: [{
    /** ID of the object. */
    id: Scalars['ID']},NodeRequest]
    /** Lookup nodes by a list of IDs. */
    nodes?: [{
    /** The list of node IDs. */
    ids: Scalars['ID'][]},NodeRequest]
    /** Lookup a organization by login. */
    organization?: [{
    /** The organization's login. */
    login: Scalars['String']},OrganizationRequest]
    /** The client's rate limit information. */
    rateLimit?: [{
    /** If true, calculate the cost for the query without evaluating it */
    dryRun?: (Scalars['Boolean'] | null)},RateLimitRequest] | RateLimitRequest
    /** Hack to workaround https://github.com/facebook/relay/issues/112 re-exposing the root query object */
    relay?: QueryRequest
    /** Lookup a given repository by the owner and repository name. */
    repository?: [{
    /** The name of the repository */
    name: Scalars['String'],
    /** The login field of a user or organization */
    owner: Scalars['String']},RepositoryRequest]
    /** Lookup a repository owner (ie. either a User or an Organization) by login. */
    repositoryOwner?: [{
    /** The username to lookup the owner by. */
    login: Scalars['String']},RepositoryOwnerRequest]
    /** Lookup resource by a URL. */
    resource?: [{
    /** The URL. */
    url: Scalars['URI']},UniformResourceLocatableRequest]
    /** Perform a search across resources. */
    search?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** The search string to look for. */
    query: Scalars['String'],
    /** The types of search items to search within. */
    type: SearchType},SearchResultItemConnectionRequest]
    /** GitHub Security Advisories */
    securityAdvisories?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Filter advisories by identifier, e.g. GHSA or CVE. */
    identifier?: (SecurityAdvisoryIdentifierFilter | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for the returned topics. */
    orderBy?: (SecurityAdvisoryOrder | null),
    /** Filter advisories to those published since a time in the past. */
    publishedSince?: (Scalars['DateTime'] | null),
    /** Filter advisories to those updated since a time in the past. */
    updatedSince?: (Scalars['DateTime'] | null)},SecurityAdvisoryConnectionRequest] | SecurityAdvisoryConnectionRequest
    /** Fetch a Security Advisory by its GHSA ID */
    securityAdvisory?: [{
    /** GitHub Security Advisory ID. */
    ghsaId: Scalars['String']},SecurityAdvisoryRequest]
    /** Software Vulnerabilities documented by GitHub Security Advisories */
    securityVulnerabilities?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** An ecosystem to filter vulnerabilities by. */
    ecosystem?: (SecurityAdvisoryEcosystem | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for the returned topics. */
    orderBy?: (SecurityVulnerabilityOrder | null),
    /** A package name to filter vulnerabilities by. */
    package?: (Scalars['String'] | null),
    /** A list of severities to filter vulnerabilities by. */
    severities?: (SecurityAdvisorySeverity[] | null)},SecurityVulnerabilityConnectionRequest] | SecurityVulnerabilityConnectionRequest
    /**
     * @deprecated `Query.sponsorsListing` will be removed. Use `Sponsorable.sponsorsListing` instead. Removal on 2020-04-01 UTC.
     * Look up a single Sponsors Listing
     */
    sponsorsListing?: [{
    /** Select the Sponsors listing which matches this slug */
    slug: Scalars['String']},SponsorsListingRequest]
    /** Look up a topic by name. */
    topic?: [{
    /** The topic's name. */
    name: Scalars['String']},TopicRequest]
    /** Lookup a user by login. */
    user?: [{
    /** The user's login. */
    login: Scalars['String']},UserRequest]
    /** The currently authenticated user. */
    viewer?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the client's rate limit. */
export interface RateLimitRequest{
    /** The point cost for the current query counting against the rate limit. */
    cost?: boolean | number
    /** The maximum number of points the client is permitted to consume in a 60 minute window. */
    limit?: boolean | number
    /** The maximum number of nodes this query may return */
    nodeCount?: boolean | number
    /** The number of points remaining in the current rate limit window. */
    remaining?: boolean | number
    /** The time at which the current rate limit window resets in UTC epoch seconds. */
    resetAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a subject that can be reacted on. */
export interface ReactableRequest{
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroupRequest
    /** A list of Reactions left on the Issue. */
    reactions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Allows filtering Reactions by emoji. */
    content?: (ReactionContent | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows specifying the order in which reactions are returned. */
    orderBy?: (ReactionOrder | null)},ReactionConnectionRequest] | ReactionConnectionRequest
    /** Can user react to this subject */
    viewerCanReact?: boolean | number
    on_CommitComment?: CommitCommentRequest
    on_Issue?: IssueRequest
    on_IssueComment?: IssueCommentRequest
    on_PullRequest?: PullRequestRequest
    on_PullRequestReview?: PullRequestReviewRequest
    on_PullRequestReviewComment?: PullRequestReviewCommentRequest
    on_TeamDiscussion?: TeamDiscussionRequest
    on_TeamDiscussionComment?: TeamDiscussionCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for User. */
export interface ReactingUserConnectionRequest{
    /** A list of edges. */
    edges?: ReactingUserEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a user that's made a reaction. */
export interface ReactingUserEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    node?: UserRequest
    /** The moment when the user made the reaction. */
    reactedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An emoji reaction to a particular piece of content. */
export interface ReactionRequest{
    /** Identifies the emoji reaction. */
    content?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** The reactable piece of content */
    reactable?: ReactableRequest
    /** Identifies the user who created this reaction. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A list of reactions that have been left on the subject. */
export interface ReactionConnectionRequest{
    /** A list of edges. */
    edges?: ReactionEdgeRequest
    /** A list of nodes. */
    nodes?: ReactionRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    /** Whether or not the authenticated user has left a reaction on the subject. */
    viewerHasReacted?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface ReactionEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: ReactionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A group of emoji reactions to a particular piece of content. */
export interface ReactionGroupRequest{
    /** Identifies the emoji reaction. */
    content?: boolean | number
    /** Identifies when the reaction was created. */
    createdAt?: boolean | number
    /** The subject that was reacted to. */
    subject?: ReactableRequest
    /** Users who have reacted to the reaction subject with the emotion represented by this reaction group */
    users?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},ReactingUserConnectionRequest] | ReactingUserConnectionRequest
    /** Whether or not the authenticated user has left a reaction on the subject. */
    viewerHasReacted?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which lists of reactions can be ordered upon return. */
export interface ReactionOrder {
/** The direction in which to order reactions by the specified field. */
direction: OrderDirection,
/** The field in which to order reactions by. */
field: ReactionOrderField}


/** Represents a 'ready_for_review' event on a given pull request. */
export interface ReadyForReviewEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    /** The HTTP path for this ready for review event. */
    resourcePath?: boolean | number
    /** The HTTP URL for this ready for review event. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Git reference. */
export interface RefRequest{
    /** A list of pull requests with this ref as the head ref. */
    associatedPullRequests?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** The base ref name to filter the pull requests by. */
    baseRefName?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** The head ref name to filter the pull requests by. */
    headRefName?: (Scalars['String'] | null),
    /** A list of label names to filter the pull requests by. */
    labels?: (Scalars['String'][] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for pull requests returned from the connection. */
    orderBy?: (IssueOrder | null),
    /** A list of states to filter the pull requests by. */
    states?: (PullRequestState[] | null)},PullRequestConnectionRequest] | PullRequestConnectionRequest
    id?: boolean | number
    /** The ref name. */
    name?: boolean | number
    /** The ref's prefix, such as `refs/heads/` or `refs/tags/`. */
    prefix?: boolean | number
    /** The repository the ref belongs to. */
    repository?: RepositoryRequest
    /**
     * The object the ref points to.
     * 
     * **Upcoming Change on 2019-07-01 UTC**
     * **Description:** Type for `target` will change from `GitObject!` to `GitObject`.
     * **Reason:** The `target` field may return `null` values and is changing to nullable
     */
    target?: GitObjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Ref. */
export interface RefConnectionRequest{
    /** A list of edges. */
    edges?: RefEdgeRequest
    /** A list of nodes. */
    nodes?: RefRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface RefEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: RefRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which lists of git refs can be ordered upon return. */
export interface RefOrder {
/** The direction in which to order refs by the specified field. */
direction: OrderDirection,
/** The field in which to order refs by. */
field: RefOrderField}


/** A ref update */
export interface RefUpdate {
/** The value this ref should be updated to. */
afterOid: Scalars['GitObjectID'],
/** The value this ref needs to point to before the update. */
beforeOid?: (Scalars['GitObjectID'] | null),
/** Force a non fast-forward update. */
force?: (Scalars['Boolean'] | null),
/** The fully qualified name of the ref to be update. For example `refs/heads/branch-name` */
name: Scalars['GitRefname']}


/** Represents a 'referenced' event on a given `ReferencedSubject`. */
export interface ReferencedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the commit associated with the 'referenced' event. */
    commit?: CommitRequest
    /** Identifies the repository associated with the 'referenced' event. */
    commitRepository?: RepositoryRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Reference originated in a different repository. */
    isCrossRepository?: boolean | number
    /** Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference. */
    isDirectReference?: boolean | number
    /** Object referenced by event. */
    subject?: ReferencedSubjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Any referencable object */
export interface ReferencedSubjectRequest{
    on_Issue?:IssueRequest,
    on_PullRequest?:PullRequestRequest,
    on_Assignable?: AssignableRequest,
    on_Closable?: ClosableRequest,
    on_Comment?: CommentRequest,
    on_Labelable?: LabelableRequest,
    on_Lockable?: LockableRequest,
    on_Node?: NodeRequest,
    on_Reactable?: ReactableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Subscribable?: SubscribableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    __typename?: boolean | number
}


/** Autogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes */
export interface RegenerateEnterpriseIdentityProviderRecoveryCodesInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set an identity provider. */
enterpriseId: Scalars['ID']}


/** Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes */
export interface RegenerateEnterpriseIdentityProviderRecoveryCodesPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The identity provider for the enterprise. */
    identityProvider?: EnterpriseIdentityProviderRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A registry package contains the content for an uploaded package. */
export interface RegistryPackageRequest{
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * The package type color
     */
    color?: boolean | number
    id?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Find the latest version for the package.
     */
    latestVersion?: RegistryPackageVersionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Identifies the title of the package.
     */
    name?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Identifies the title of the package, with the owner prefixed.
     */
    nameWithOwner?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object. Removal on 2020-04-01 UTC.
     * Find the package file identified by the guid.
     */
    packageFileByGuid?: [{
    /** The unique identifier of the package_file */
    guid: Scalars['String']},RegistryPackageFileRequest]
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object. Removal on 2020-04-01 UTC.
     * Find the package file identified by the sha256.
     */
    packageFileBySha256?: [{
    /** The SHA256 of the package_file */
    sha256: Scalars['String']},RegistryPackageFileRequest]
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Identifies the type of the package.
     */
    packageType?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * List the prerelease versions for this package.
     */
    preReleaseVersions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},RegistryPackageVersionConnectionRequest] | RegistryPackageVersionConnectionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * The type of the package.
     */
    registryPackageType?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * repository that the release is associated with
     */
    repository?: RepositoryRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Statistics about package activity.
     */
    statistics?: RegistryPackageStatisticsRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object. Removal on 2020-04-01 UTC.
     * list of tags for this package
     */
    tags?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},RegistryPackageTagConnectionRequest] | RegistryPackageTagConnectionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object. Removal on 2020-04-01 UTC.
     * List the topics for this package.
     */
    topics?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},TopicConnectionRequest] | TopicConnectionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Find package version by version string.
     */
    version?: [{
    /** The package version. */
    version: Scalars['String']},RegistryPackageVersionRequest]
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Find package version by version string.
     */
    versionByPlatform?: [{
    /** Find a registry package for a specific platform. */
    platform: Scalars['String'],
    /** The package version. */
    version: Scalars['String']},RegistryPackageVersionRequest]
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * Find package version by manifest SHA256.
     */
    versionBySha256?: [{
    /** The package SHA256 digest. */
    sha256: Scalars['String']},RegistryPackageVersionRequest]
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * list of versions for this package
     */
    versions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},RegistryPackageVersionConnectionRequest] | RegistryPackageVersionConnectionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `Package` object instead. Removal on 2020-04-01 UTC.
     * List package versions with a specific metadatum.
     */
    versionsByMetadatum?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter on a specific metadatum. */
    metadatum: RegistryPackageMetadatum},RegistryPackageVersionConnectionRequest]
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for RegistryPackage. */
export interface RegistryPackageConnectionRequest{
    /** A list of edges. */
    edges?: RegistryPackageEdgeRequest
    /** A list of nodes. */
    nodes?: RegistryPackageRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A package dependency contains the information needed to satisfy a dependency. */
export interface RegistryPackageDependencyRequest{
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageDependency` object instead. Removal on 2020-04-01 UTC.
     * Identifies the type of dependency.
     */
    dependencyType?: boolean | number
    id?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageDependency` object instead. Removal on 2020-04-01 UTC.
     * Identifies the name of the dependency.
     */
    name?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageDependency` object instead. Removal on 2020-04-01 UTC.
     * Identifies the version of the dependency.
     */
    version?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for RegistryPackageDependency. */
export interface RegistryPackageDependencyConnectionRequest{
    /** A list of edges. */
    edges?: RegistryPackageDependencyEdgeRequest
    /** A list of nodes. */
    nodes?: RegistryPackageDependencyRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface RegistryPackageDependencyEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: RegistryPackageDependencyRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface RegistryPackageEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: RegistryPackageRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A file in a specific registry package version. */
export interface RegistryPackageFileRequest{
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * A unique identifier for this file.
     */
    guid?: boolean | number
    id?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * Identifies the md5.
     */
    md5?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * URL to download the asset metadata.
     */
    metadataUrl?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * Name of the file
     */
    name?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * The package version this file belongs to.
     */
    packageVersion?: RegistryPackageVersionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * Identifies the sha1.
     */
    sha1?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * Identifies the sha256.
     */
    sha256?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * Identifies the size.
     */
    size?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageFile` object instead. Removal on 2020-04-01 UTC.
     * URL to download the asset.
     */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for RegistryPackageFile. */
export interface RegistryPackageFileConnectionRequest{
    /** A list of edges. */
    edges?: RegistryPackageFileEdgeRequest
    /** A list of nodes. */
    nodes?: RegistryPackageFileRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface RegistryPackageFileEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: RegistryPackageFileRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a single registry metadatum */
export interface RegistryPackageMetadatum {
/** Name of the metadatum. */
name: Scalars['String'],
/** True, if the metadatum can be updated if it already exists */
update?: (Scalars['Boolean'] | null),
/** Value of the metadatum. */
value: Scalars['String']}


/** Represents an owner of a registry package. */
export interface RegistryPackageOwnerRequest{
    id?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageOwner` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages under the owner.
     */
    registryPackages?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Find registry package by name. */
    name?: (Scalars['String'] | null),
    /** Find registry packages by their names. */
    names?: ((Scalars['String'] | null)[] | null),
    /** Filter registry package by type. */
    packageType?: (RegistryPackageType | null),
    /** Filter registry package by whether it is publicly visible */
    publicOnly?: (Scalars['Boolean'] | null),
    /** Filter registry package by type (string). */
    registryPackageType?: (Scalars['String'] | null),
    /** Find registry packages in a repository. */
    repositoryId?: (Scalars['ID'] | null)},RegistryPackageConnectionRequest] | RegistryPackageConnectionRequest
    on_Organization?: OrganizationRequest
    on_Repository?: RepositoryRequest
    on_User?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an interface to search packages on an object. */
export interface RegistryPackageSearchRequest{
    id?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageSearch` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages for a particular search query.
     */
    registryPackagesForQuery?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter registry package by type. */
    packageType?: (RegistryPackageType | null),
    /** Find registry package by search query. */
    query?: (Scalars['String'] | null)},RegistryPackageConnectionRequest] | RegistryPackageConnectionRequest
    on_Organization?: OrganizationRequest
    on_Repository?: RepositoryRequest
    on_User?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a object that contains package activity statistics such as downloads. */
export interface RegistryPackageStatisticsRequest{
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this month.
     */
    downloadsThisMonth?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this week.
     */
    downloadsThisWeek?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this year.
     */
    downloadsThisYear?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded today.
     */
    downloadsToday?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded since it was created.
     */
    downloadsTotalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A version tag contains the mapping between a tag name and a version. */
export interface RegistryPackageTagRequest{
    id?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageTag` object instead. Removal on 2020-04-01 UTC.
     * Identifies the tag name of the version.
     */
    name?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageTag` object instead. Removal on 2020-04-01 UTC.
     * version that the tag is associated with
     */
    version?: RegistryPackageVersionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for RegistryPackageTag. */
export interface RegistryPackageTagConnectionRequest{
    /** A list of edges. */
    edges?: RegistryPackageTagEdgeRequest
    /** A list of nodes. */
    nodes?: RegistryPackageTagRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface RegistryPackageTagEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: RegistryPackageTagRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A package version contains the information about a specific package version. */
export interface RegistryPackageVersionRequest{
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Whether or not this version has been deleted.
     */
    deleted?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * list of dependencies for this package
     */
    dependencies?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Find dependencies by type. */
    type?: (RegistryPackageDependencyType | null)},RegistryPackageDependencyConnectionRequest] | RegistryPackageDependencyConnectionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * A file associated with this registry package version
     */
    fileByName?: [{
    /** A specific file to find. */
    filename: Scalars['String']},RegistryPackageFileRequest]
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * List of files associated with this registry package version
     */
    files?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},RegistryPackageFileConnectionRequest] | RegistryPackageFileConnectionRequest
    id?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * A single line of text to install this package version.
     */
    installationCommand?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the package manifest for this package version.
     */
    manifest?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the platform this version was built for.
     */
    platform?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Indicates whether this version is a pre-release.
     */
    preRelease?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * The README of this package version
     */
    readme?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * The HTML README of this package version
     */
    readmeHtml?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Registry package associated with this version.
     */
    registryPackage?: RegistryPackageRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Release associated with this package.
     */
    release?: ReleaseRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the sha256.
     */
    sha256?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the size.
     */
    size?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Statistics about package activity.
     */
    statistics?: RegistryPackageVersionStatisticsRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the package version summary.
     */
    summary?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Time at which the most recent file upload for this package version finished
     */
    updatedAt?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Identifies the version number.
     */
    version?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersion` object instead. Removal on 2020-04-01 UTC.
     * Can the current viewer edit this Package version.
     */
    viewerCanEdit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for RegistryPackageVersion. */
export interface RegistryPackageVersionConnectionRequest{
    /** A list of edges. */
    edges?: RegistryPackageVersionEdgeRequest
    /** A list of nodes. */
    nodes?: RegistryPackageVersionRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface RegistryPackageVersionEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: RegistryPackageVersionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a object that contains package version activity statistics such as downloads. */
export interface RegistryPackageVersionStatisticsRequest{
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersionStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this month.
     */
    downloadsThisMonth?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersionStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this week.
     */
    downloadsThisWeek?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersionStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded this year.
     */
    downloadsThisYear?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersionStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded today.
     */
    downloadsToday?: boolean | number
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageVersionStatistics` object instead. Removal on 2020-04-01 UTC.
     * Number of times the package was downloaded since it was created.
     */
    downloadsTotalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A release contains the content for a release. */
export interface ReleaseRequest{
    /** The author of the release */
    author?: UserRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The description of the release. */
    description?: boolean | number
    /** The description of this release rendered to HTML. */
    descriptionHTML?: boolean | number
    id?: boolean | number
    /** Whether or not the release is a draft */
    isDraft?: boolean | number
    /** Whether or not the release is a prerelease */
    isPrerelease?: boolean | number
    /** The title of the release. */
    name?: boolean | number
    /** Identifies the date and time when the release was created. */
    publishedAt?: boolean | number
    /** List of releases assets which are dependent on this release. */
    releaseAssets?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** A list of names to filter the assets by. */
    name?: (Scalars['String'] | null)},ReleaseAssetConnectionRequest] | ReleaseAssetConnectionRequest
    /** The HTTP path for this issue */
    resourcePath?: boolean | number
    /** A description of the release, rendered to HTML without any links in it. */
    shortDescriptionHTML?: [{
    /** How many characters to return. */
    limit?: (Scalars['Int'] | null)}] | boolean | number
    /** The Git tag the release points to */
    tag?: RefRequest
    /** The name of the release's Git tag */
    tagName?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this issue */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A release asset contains the content for a release asset. */
export interface ReleaseAssetRequest{
    /** The asset's content-type */
    contentType?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The number of times this asset was downloaded */
    downloadCount?: boolean | number
    /** Identifies the URL where you can download the release asset via the browser. */
    downloadUrl?: boolean | number
    id?: boolean | number
    /** Identifies the title of the release asset. */
    name?: boolean | number
    /** Release that the asset is associated with */
    release?: ReleaseRequest
    /** The size (in bytes) of the asset */
    size?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The user that performed the upload */
    uploadedBy?: UserRequest
    /** Identifies the URL of the release asset. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for ReleaseAsset. */
export interface ReleaseAssetConnectionRequest{
    /** A list of edges. */
    edges?: ReleaseAssetEdgeRequest
    /** A list of nodes. */
    nodes?: ReleaseAssetRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface ReleaseAssetEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: ReleaseAssetRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Release. */
export interface ReleaseConnectionRequest{
    /** A list of edges. */
    edges?: ReleaseEdgeRequest
    /** A list of nodes. */
    nodes?: ReleaseRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface ReleaseEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: ReleaseRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which lists of releases can be ordered upon return. */
export interface ReleaseOrder {
/** The direction in which to order releases by the specified field. */
direction: OrderDirection,
/** The field in which to order releases by. */
field: ReleaseOrderField}


/** Autogenerated input type of RemoveAssigneesFromAssignable */
export interface RemoveAssigneesFromAssignableInput {
/** The id of the assignable object to remove assignees from. */
assignableId: Scalars['ID'],
/** The id of users to remove as assignees. */
assigneeIds: Scalars['ID'][],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null)}


/** Autogenerated return type of RemoveAssigneesFromAssignable */
export interface RemoveAssigneesFromAssignablePayloadRequest{
    /** The item that was unassigned. */
    assignable?: AssignableRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of RemoveEnterpriseAdmin */
export interface RemoveEnterpriseAdminInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Enterprise ID from which to remove the administrator. */
enterpriseId: Scalars['ID'],
/** The login of the user to remove as an administrator. */
login: Scalars['String']}


/** Autogenerated return type of RemoveEnterpriseAdmin */
export interface RemoveEnterpriseAdminPayloadRequest{
    /** The user who was removed as an administrator. */
    admin?: UserRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated enterprise. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of removing an administrator. */
    message?: boolean | number
    /** The viewer performing the mutation. */
    viewer?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of RemoveEnterpriseIdentityProvider */
export interface RemoveEnterpriseIdentityProviderInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise from which to remove the identity provider. */
enterpriseId: Scalars['ID']}


/** Autogenerated return type of RemoveEnterpriseIdentityProvider */
export interface RemoveEnterpriseIdentityProviderPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The identity provider that was removed from the enterprise. */
    identityProvider?: EnterpriseIdentityProviderRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of RemoveEnterpriseOrganization */
export interface RemoveEnterpriseOrganizationInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise from which the organization should be removed. */
enterpriseId: Scalars['ID'],
/** The ID of the organization to remove from the enterprise. */
organizationId: Scalars['ID']}


/** Autogenerated return type of RemoveEnterpriseOrganization */
export interface RemoveEnterpriseOrganizationPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated enterprise. */
    enterprise?: EnterpriseRequest
    /** The organization that was removed from the enterprise. */
    organization?: OrganizationRequest
    /** The viewer performing the mutation. */
    viewer?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of RemoveLabelsFromLabelable */
export interface RemoveLabelsFromLabelableInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ids of labels to remove. */
labelIds: Scalars['ID'][],
/** The id of the Labelable to remove labels from. */
labelableId: Scalars['ID']}


/** Autogenerated return type of RemoveLabelsFromLabelable */
export interface RemoveLabelsFromLabelablePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The Labelable the labels were removed from. */
    labelable?: LabelableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of RemoveOutsideCollaborator */
export interface RemoveOutsideCollaboratorInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the organization to remove the outside collaborator from. */
organizationId: Scalars['ID'],
/** The ID of the outside collaborator to remove. */
userId: Scalars['ID']}


/** Autogenerated return type of RemoveOutsideCollaborator */
export interface RemoveOutsideCollaboratorPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The user that was removed as an outside collaborator. */
    removedUser?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of RemoveReaction */
export interface RemoveReactionInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The name of the emoji reaction to remove. */
content: ReactionContent,
/** The Node ID of the subject to modify. */
subjectId: Scalars['ID']}


/** Autogenerated return type of RemoveReaction */
export interface RemoveReactionPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The reaction object. */
    reaction?: ReactionRequest
    /** The reactable subject. */
    subject?: ReactableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of RemoveStar */
export interface RemoveStarInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Starrable ID to unstar. */
starrableId: Scalars['ID']}


/** Autogenerated return type of RemoveStar */
export interface RemoveStarPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The starrable. */
    starrable?: StarrableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'removed_from_project' event on a given issue or pull request. */
export interface RemovedFromProjectEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** Project referenced by event. */
    project?: ProjectRequest
    /** Column name referenced by this project event. */
    projectColumnName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'renamed' event on a given issue or pull request */
export interface RenamedTitleEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the current title of the issue or pull request. */
    currentTitle?: boolean | number
    id?: boolean | number
    /** Identifies the previous title of the issue or pull request. */
    previousTitle?: boolean | number
    /** Subject that was renamed. */
    subject?: RenamedTitleSubjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object which has a renamable title */
export interface RenamedTitleSubjectRequest{
    on_Issue?:IssueRequest,
    on_PullRequest?:PullRequestRequest,
    on_Assignable?: AssignableRequest,
    on_Closable?: ClosableRequest,
    on_Comment?: CommentRequest,
    on_Labelable?: LabelableRequest,
    on_Lockable?: LockableRequest,
    on_Node?: NodeRequest,
    on_Reactable?: ReactableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Subscribable?: SubscribableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    __typename?: boolean | number
}


/** Autogenerated input type of ReopenIssue */
export interface ReopenIssueInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** ID of the issue to be opened. */
issueId: Scalars['ID']}


/** Autogenerated return type of ReopenIssue */
export interface ReopenIssuePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The issue that was opened. */
    issue?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ReopenPullRequest */
export interface ReopenPullRequestInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** ID of the pull request to be reopened. */
pullRequestId: Scalars['ID']}


/** Autogenerated return type of ReopenPullRequest */
export interface ReopenPullRequestPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The pull request that was reopened. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'reopened' event on any `Closable`. */
export interface ReopenedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Object that was reopened. */
    closable?: ClosableRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.access event. */
export interface RepoAccessAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    /** The visibility of the repository */
    visibility?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.add_member event. */
export interface RepoAddMemberAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    /** The visibility of the repository */
    visibility?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.add_topic event. */
export interface RepoAddTopicAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The name of the topic added to the repository */
    topic?: TopicRequest
    /** The name of the topic added to the repository */
    topicName?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.archived event. */
export interface RepoArchivedAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    /** The visibility of the repository */
    visibility?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.change_merge_setting event. */
export interface RepoChangeMergeSettingAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** Whether the change was to enable (true) or disable (false) the merge type */
    isEnabled?: boolean | number
    /** The merge method affected by the change */
    mergeType?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.config.disable_anonymous_git_access event. */
export interface RepoConfigDisableAnonymousGitAccessAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.config.disable_collaborators_only event. */
export interface RepoConfigDisableCollaboratorsOnlyAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.config.disable_contributors_only event. */
export interface RepoConfigDisableContributorsOnlyAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.config.disable_sockpuppet_disallowed event. */
export interface RepoConfigDisableSockpuppetDisallowedAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.config.enable_anonymous_git_access event. */
export interface RepoConfigEnableAnonymousGitAccessAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.config.enable_collaborators_only event. */
export interface RepoConfigEnableCollaboratorsOnlyAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.config.enable_contributors_only event. */
export interface RepoConfigEnableContributorsOnlyAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.config.enable_sockpuppet_disallowed event. */
export interface RepoConfigEnableSockpuppetDisallowedAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.config.lock_anonymous_git_access event. */
export interface RepoConfigLockAnonymousGitAccessAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.config.unlock_anonymous_git_access event. */
export interface RepoConfigUnlockAnonymousGitAccessAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.create event. */
export interface RepoCreateAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The name of the parent repository for this forked repository. */
    forkParentName?: boolean | number
    /** The name of the root repository for this netork. */
    forkSourceName?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    /** The visibility of the repository */
    visibility?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.destroy event. */
export interface RepoDestroyAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    /** The visibility of the repository */
    visibility?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.remove_member event. */
export interface RepoRemoveMemberAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    /** The visibility of the repository */
    visibility?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repo.remove_topic event. */
export interface RepoRemoveTopicAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The name of the topic added to the repository */
    topic?: TopicRequest
    /** The name of the topic added to the repository */
    topicName?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A repository contains the content for a project. */
export interface RepositoryRequest{
    /** A list of users that can be assigned to issues in this repository. */
    assignableUsers?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filters users with query on user name and login */
    query?: (Scalars['String'] | null)},UserConnectionRequest] | UserConnectionRequest
    /** A list of branch protection rules for this repository. */
    branchProtectionRules?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},BranchProtectionRuleConnectionRequest] | BranchProtectionRuleConnectionRequest
    /** Returns the code of conduct for this repository */
    codeOfConduct?: CodeOfConductRequest
    /** A list of collaborators associated with the repository. */
    collaborators?: [{
    /** Collaborators affiliation level with a repository. */
    affiliation?: (CollaboratorAffiliation | null),
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filters users with query on user name and login */
    query?: (Scalars['String'] | null)},RepositoryCollaboratorConnectionRequest] | RepositoryCollaboratorConnectionRequest
    /** A list of commit comments associated with the repository. */
    commitComments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},CommitCommentConnectionRequest] | CommitCommentConnectionRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The Ref associated with the repository's default branch. */
    defaultBranchRef?: RefRequest
    /** Whether or not branches are automatically deleted when merged in this repository. */
    deleteBranchOnMerge?: boolean | number
    /** A list of dependency manifests contained in the repository */
    dependencyGraphManifests?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Cursor to paginate dependencies */
    dependenciesAfter?: (Scalars['String'] | null),
    /** Number of dependencies to fetch */
    dependenciesFirst?: (Scalars['Int'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Flag to scope to only manifests with dependencies */
    withDependencies?: (Scalars['Boolean'] | null)},DependencyGraphManifestConnectionRequest] | DependencyGraphManifestConnectionRequest
    /** A list of deploy keys that are on this repository. */
    deployKeys?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},DeployKeyConnectionRequest] | DeployKeyConnectionRequest
    /** Deployments associated with the repository */
    deployments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Environments to list deployments for */
    environments?: (Scalars['String'][] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for deployments returned from the connection. */
    orderBy?: (DeploymentOrder | null)},DeploymentConnectionRequest] | DeploymentConnectionRequest
    /** The description of the repository. */
    description?: boolean | number
    /** The description of the repository rendered to HTML. */
    descriptionHTML?: boolean | number
    /** The number of kilobytes this repository occupies on disk. */
    diskUsage?: boolean | number
    /** Returns how many forks there are of this repository in the whole network. */
    forkCount?: boolean | number
    /** A list of direct forked repositories. */
    forks?: [{
    /**
     * Array of viewer's affiliation options for repositories returned from the
     * connection. For example, OWNER will include only repositories that the
     * current viewer owns.
     */
    affiliations?: ((RepositoryAffiliation | null)[] | null),
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** If non-null, filters repositories according to whether they have been locked */
    isLocked?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for repositories returned from the connection */
    orderBy?: (RepositoryOrder | null),
    /**
     * Array of owner's affiliation options for repositories returned from the
     * connection. For example, OWNER will include only repositories that the
     * organization or user being viewed owns.
     */
    ownerAffiliations?: ((RepositoryAffiliation | null)[] | null),
    /** If non-null, filters repositories according to privacy */
    privacy?: (RepositoryPrivacy | null)},RepositoryConnectionRequest] | RepositoryConnectionRequest
    /** The funding links for this repository */
    fundingLinks?: FundingLinkRequest
    /** Indicates if the repository has issues feature enabled. */
    hasIssuesEnabled?: boolean | number
    /** Indicates if the repository has the Projects feature enabled. */
    hasProjectsEnabled?: boolean | number
    /** Indicates if the repository has wiki feature enabled. */
    hasWikiEnabled?: boolean | number
    /** The repository's URL. */
    homepageUrl?: boolean | number
    id?: boolean | number
    /** Indicates if the repository is unmaintained. */
    isArchived?: boolean | number
    /** Returns whether or not this repository disabled. */
    isDisabled?: boolean | number
    /** Identifies if the repository is a fork. */
    isFork?: boolean | number
    /** Indicates if the repository has been locked or not. */
    isLocked?: boolean | number
    /** Identifies if the repository is a mirror. */
    isMirror?: boolean | number
    /** Identifies if the repository is private. */
    isPrivate?: boolean | number
    /** Identifies if the repository is a template that can be used to generate new repositories. */
    isTemplate?: boolean | number
    /** Returns a single issue from the current repository by number. */
    issue?: [{
    /** The number for the issue to be returned. */
    number: Scalars['Int']},IssueRequest]
    /** Returns a single issue-like object from the current repository by number. */
    issueOrPullRequest?: [{
    /** The number for the issue to be returned. */
    number: Scalars['Int']},IssueOrPullRequestRequest]
    /** A list of issues that have been opened in the repository. */
    issues?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Filtering options for issues returned from the connection. */
    filterBy?: (IssueFilters | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** A list of label names to filter the pull requests by. */
    labels?: (Scalars['String'][] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for issues returned from the connection. */
    orderBy?: (IssueOrder | null),
    /** A list of states to filter the issues by. */
    states?: (IssueState[] | null)},IssueConnectionRequest] | IssueConnectionRequest
    /** Returns a single label by name */
    label?: [{
    /** Label name */
    name: Scalars['String']},LabelRequest]
    /** A list of labels associated with the repository. */
    labels?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for labels returned from the connection. */
    orderBy?: (LabelOrder | null),
    /** If provided, searches labels by name and description. */
    query?: (Scalars['String'] | null)},LabelConnectionRequest] | LabelConnectionRequest
    /** A list containing a breakdown of the language composition of the repository. */
    languages?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for connection */
    orderBy?: (LanguageOrder | null)},LanguageConnectionRequest] | LanguageConnectionRequest
    /** The license associated with the repository */
    licenseInfo?: LicenseRequest
    /** The reason the repository has been locked. */
    lockReason?: boolean | number
    /** A list of Users that can be mentioned in the context of the repository. */
    mentionableUsers?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filters users with query on user name and login */
    query?: (Scalars['String'] | null)},UserConnectionRequest] | UserConnectionRequest
    /** Whether or not PRs are merged with a merge commit on this repository. */
    mergeCommitAllowed?: boolean | number
    /** Returns a single milestone from the current repository by number. */
    milestone?: [{
    /** The number for the milestone to be returned. */
    number: Scalars['Int']},MilestoneRequest]
    /** A list of milestones associated with the repository. */
    milestones?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for milestones. */
    orderBy?: (MilestoneOrder | null),
    /** Filter by the state of the milestones. */
    states?: (MilestoneState[] | null)},MilestoneConnectionRequest] | MilestoneConnectionRequest
    /** The repository's original mirror URL. */
    mirrorUrl?: boolean | number
    /** The name of the repository. */
    name?: boolean | number
    /** The repository's name with owner. */
    nameWithOwner?: boolean | number
    /** A Git object in the repository */
    object?: [{
    /** A Git revision expression suitable for rev-parse */
    expression?: (Scalars['String'] | null),
    /** The Git object ID */
    oid?: (Scalars['GitObjectID'] | null)},GitObjectRequest] | GitObjectRequest
    /** The image used to represent this repository in Open Graph data. */
    openGraphImageUrl?: boolean | number
    /** The User owner of the repository. */
    owner?: RepositoryOwnerRequest
    /** A list of packages under the owner. */
    packages?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Find packages by their names. */
    names?: ((Scalars['String'] | null)[] | null),
    /** Ordering of the returned packages. */
    orderBy?: (PackageOrder | null),
    /** Find packages in a repository by ID. */
    repositoryId?: (Scalars['ID'] | null)},PackageConnectionRequest] | PackageConnectionRequest
    /** The repository parent, if this is a fork. */
    parent?: RepositoryRequest
    /** A list of pinned issues for this repository. */
    pinnedIssues?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},PinnedIssueConnectionRequest] | PinnedIssueConnectionRequest
    /** The primary language of the repository's code. */
    primaryLanguage?: LanguageRequest
    /** Find project by number. */
    project?: [{
    /** The project number to find. */
    number: Scalars['Int']},ProjectRequest]
    /** A list of projects under the owner. */
    projects?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for projects returned from the connection */
    orderBy?: (ProjectOrder | null),
    /** Query to search projects by, currently only searching by name. */
    search?: (Scalars['String'] | null),
    /** A list of states to filter the projects by. */
    states?: (ProjectState[] | null)},ProjectConnectionRequest] | ProjectConnectionRequest
    /** The HTTP path listing the repository's projects */
    projectsResourcePath?: boolean | number
    /** The HTTP URL listing the repository's projects */
    projectsUrl?: boolean | number
    /** Returns a single pull request from the current repository by number. */
    pullRequest?: [{
    /** The number for the pull request to be returned. */
    number: Scalars['Int']},PullRequestRequest]
    /** A list of pull requests that have been opened in the repository. */
    pullRequests?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** The base ref name to filter the pull requests by. */
    baseRefName?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** The head ref name to filter the pull requests by. */
    headRefName?: (Scalars['String'] | null),
    /** A list of label names to filter the pull requests by. */
    labels?: (Scalars['String'][] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for pull requests returned from the connection. */
    orderBy?: (IssueOrder | null),
    /** A list of states to filter the pull requests by. */
    states?: (PullRequestState[] | null)},PullRequestConnectionRequest] | PullRequestConnectionRequest
    /** Identifies when the repository was last pushed to. */
    pushedAt?: boolean | number
    /** Whether or not rebase-merging is enabled on this repository. */
    rebaseMergeAllowed?: boolean | number
    /** Fetch a given ref from the repository */
    ref?: [{
    /**
     * The ref to retrieve. Fully qualified matches are checked in order
     * (`refs/heads/master`) before falling back onto checks for short name matches (`master`).
     */
    qualifiedName: Scalars['String']},RefRequest]
    /** Fetch a list of refs from the repository */
    refs?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** DEPRECATED: use orderBy. The ordering direction. */
    direction?: (OrderDirection | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for refs returned from the connection. */
    orderBy?: (RefOrder | null),
    /** Filters refs with query on name */
    query?: (Scalars['String'] | null),
    /** A ref name prefix like `refs/heads/`, `refs/tags/`, etc. */
    refPrefix: Scalars['String']},RefConnectionRequest]
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageOwner` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages under the owner.
     */
    registryPackages?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Find registry package by name. */
    name?: (Scalars['String'] | null),
    /** Find registry packages by their names. */
    names?: ((Scalars['String'] | null)[] | null),
    /** Filter registry package by type. */
    packageType?: (RegistryPackageType | null),
    /** Filter registry package by whether it is publicly visible */
    publicOnly?: (Scalars['Boolean'] | null),
    /** Filter registry package by type (string). */
    registryPackageType?: (Scalars['String'] | null),
    /** Find registry packages in a repository. */
    repositoryId?: (Scalars['ID'] | null)},RegistryPackageConnectionRequest] | RegistryPackageConnectionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageSearch` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages for a particular search query.
     */
    registryPackagesForQuery?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter registry package by type. */
    packageType?: (RegistryPackageType | null),
    /** Find registry package by search query. */
    query?: (Scalars['String'] | null)},RegistryPackageConnectionRequest] | RegistryPackageConnectionRequest
    /** Lookup a single release given various criteria. */
    release?: [{
    /** The name of the Tag the Release was created from */
    tagName: Scalars['String']},ReleaseRequest]
    /** List of releases which are dependent on this repository. */
    releases?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for connection */
    orderBy?: (ReleaseOrder | null)},ReleaseConnectionRequest] | ReleaseConnectionRequest
    /** A list of applied repository-topic associations for this repository. */
    repositoryTopics?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},RepositoryTopicConnectionRequest] | RepositoryTopicConnectionRequest
    /** The HTTP path for this repository */
    resourcePath?: boolean | number
    /** A description of the repository, rendered to HTML without any links in it. */
    shortDescriptionHTML?: [{
    /** How many characters to return. */
    limit?: (Scalars['Int'] | null)}] | boolean | number
    /** Whether or not squash-merging is enabled on this repository. */
    squashMergeAllowed?: boolean | number
    /** The SSH URL to clone this repository */
    sshUrl?: boolean | number
    /** A list of users who have starred this starrable. */
    stargazers?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for connection */
    orderBy?: (StarOrder | null)},StargazerConnectionRequest] | StargazerConnectionRequest
    /**
     * Returns a list of all submodules in this repository parsed from the
     * .gitmodules file as of the default branch's HEAD commit.
     */
    submodules?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},SubmoduleConnectionRequest] | SubmoduleConnectionRequest
    /** Temporary authentication token for cloning this repository. */
    tempCloneToken?: boolean | number
    /** The repository from which this repository was generated, if any. */
    templateRepository?: RepositoryRequest
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this repository */
    url?: boolean | number
    /** Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar. */
    usesCustomOpenGraphImage?: boolean | number
    /** Indicates whether the viewer has admin permissions on this repository. */
    viewerCanAdminister?: boolean | number
    /** Can the current viewer create new projects on this owner. */
    viewerCanCreateProjects?: boolean | number
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe?: boolean | number
    /** Indicates whether the viewer can update the topics of this repository. */
    viewerCanUpdateTopics?: boolean | number
    /** Returns a boolean indicating whether the viewing user has starred this starrable. */
    viewerHasStarred?: boolean | number
    /** The users permission level on the repository. Will return null if authenticated as an GitHub App. */
    viewerPermission?: boolean | number
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: boolean | number
    /** A list of vulnerability alerts that are on this repository. */
    vulnerabilityAlerts?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},RepositoryVulnerabilityAlertConnectionRequest] | RepositoryVulnerabilityAlertConnectionRequest
    /** A list of users watching the repository. */
    watchers?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserConnectionRequest] | UserConnectionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata for an audit entry with action repo.* */
export interface RepositoryAuditEntryDataRequest{
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    on_OrgRestoreMemberMembershipRepositoryAuditEntryData?: OrgRestoreMemberMembershipRepositoryAuditEntryDataRequest
    on_PrivateRepositoryForkingDisableAuditEntry?: PrivateRepositoryForkingDisableAuditEntryRequest
    on_PrivateRepositoryForkingEnableAuditEntry?: PrivateRepositoryForkingEnableAuditEntryRequest
    on_RepoAccessAuditEntry?: RepoAccessAuditEntryRequest
    on_RepoAddMemberAuditEntry?: RepoAddMemberAuditEntryRequest
    on_RepoAddTopicAuditEntry?: RepoAddTopicAuditEntryRequest
    on_RepoArchivedAuditEntry?: RepoArchivedAuditEntryRequest
    on_RepoChangeMergeSettingAuditEntry?: RepoChangeMergeSettingAuditEntryRequest
    on_RepoConfigDisableAnonymousGitAccessAuditEntry?: RepoConfigDisableAnonymousGitAccessAuditEntryRequest
    on_RepoConfigDisableCollaboratorsOnlyAuditEntry?: RepoConfigDisableCollaboratorsOnlyAuditEntryRequest
    on_RepoConfigDisableContributorsOnlyAuditEntry?: RepoConfigDisableContributorsOnlyAuditEntryRequest
    on_RepoConfigDisableSockpuppetDisallowedAuditEntry?: RepoConfigDisableSockpuppetDisallowedAuditEntryRequest
    on_RepoConfigEnableAnonymousGitAccessAuditEntry?: RepoConfigEnableAnonymousGitAccessAuditEntryRequest
    on_RepoConfigEnableCollaboratorsOnlyAuditEntry?: RepoConfigEnableCollaboratorsOnlyAuditEntryRequest
    on_RepoConfigEnableContributorsOnlyAuditEntry?: RepoConfigEnableContributorsOnlyAuditEntryRequest
    on_RepoConfigEnableSockpuppetDisallowedAuditEntry?: RepoConfigEnableSockpuppetDisallowedAuditEntryRequest
    on_RepoConfigLockAnonymousGitAccessAuditEntry?: RepoConfigLockAnonymousGitAccessAuditEntryRequest
    on_RepoConfigUnlockAnonymousGitAccessAuditEntry?: RepoConfigUnlockAnonymousGitAccessAuditEntryRequest
    on_RepoCreateAuditEntry?: RepoCreateAuditEntryRequest
    on_RepoDestroyAuditEntry?: RepoDestroyAuditEntryRequest
    on_RepoRemoveMemberAuditEntry?: RepoRemoveMemberAuditEntryRequest
    on_RepoRemoveTopicAuditEntry?: RepoRemoveTopicAuditEntryRequest
    on_TeamAddRepositoryAuditEntry?: TeamAddRepositoryAuditEntryRequest
    on_TeamRemoveRepositoryAuditEntry?: TeamRemoveRepositoryAuditEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for User. */
export interface RepositoryCollaboratorConnectionRequest{
    /** A list of edges. */
    edges?: RepositoryCollaboratorEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a user who is a collaborator of a repository. */
export interface RepositoryCollaboratorEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    node?: UserRequest
    /**
     * The permission the user has on the repository.
     * 
     * **Upcoming Change on 2020-10-01 UTC**
     * **Description:** Type for `permission` will change from `RepositoryPermission!` to `String`.
     * **Reason:** This field may return additional values
     */
    permission?: boolean | number
    /** A list of sources for the user's access to the repository. */
    permissionSources?: PermissionSourceRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A list of repositories owned by the subject. */
export interface RepositoryConnectionRequest{
    /** A list of edges. */
    edges?: RepositoryEdgeRequest
    /** A list of nodes. */
    nodes?: RepositoryRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    /** The total size in kilobytes of all repositories in the connection. */
    totalDiskUsage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface RepositoryEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A subset of repository info. */
export interface RepositoryInfoRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The description of the repository. */
    description?: boolean | number
    /** The description of the repository rendered to HTML. */
    descriptionHTML?: boolean | number
    /** Returns how many forks there are of this repository in the whole network. */
    forkCount?: boolean | number
    /** Indicates if the repository has issues feature enabled. */
    hasIssuesEnabled?: boolean | number
    /** Indicates if the repository has the Projects feature enabled. */
    hasProjectsEnabled?: boolean | number
    /** Indicates if the repository has wiki feature enabled. */
    hasWikiEnabled?: boolean | number
    /** The repository's URL. */
    homepageUrl?: boolean | number
    /** Indicates if the repository is unmaintained. */
    isArchived?: boolean | number
    /** Identifies if the repository is a fork. */
    isFork?: boolean | number
    /** Indicates if the repository has been locked or not. */
    isLocked?: boolean | number
    /** Identifies if the repository is a mirror. */
    isMirror?: boolean | number
    /** Identifies if the repository is private. */
    isPrivate?: boolean | number
    /** Identifies if the repository is a template that can be used to generate new repositories. */
    isTemplate?: boolean | number
    /** The license associated with the repository */
    licenseInfo?: LicenseRequest
    /** The reason the repository has been locked. */
    lockReason?: boolean | number
    /** The repository's original mirror URL. */
    mirrorUrl?: boolean | number
    /** The name of the repository. */
    name?: boolean | number
    /** The repository's name with owner. */
    nameWithOwner?: boolean | number
    /** The image used to represent this repository in Open Graph data. */
    openGraphImageUrl?: boolean | number
    /** The User owner of the repository. */
    owner?: RepositoryOwnerRequest
    /** Identifies when the repository was last pushed to. */
    pushedAt?: boolean | number
    /** The HTTP path for this repository */
    resourcePath?: boolean | number
    /** A description of the repository, rendered to HTML without any links in it. */
    shortDescriptionHTML?: [{
    /** How many characters to return. */
    limit?: (Scalars['Int'] | null)}] | boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this repository */
    url?: boolean | number
    /** Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner's avatar. */
    usesCustomOpenGraphImage?: boolean | number
    on_Repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An invitation for a user to be added to a repository. */
export interface RepositoryInvitationRequest{
    /** The email address that received the invitation. */
    email?: boolean | number
    id?: boolean | number
    /** The user who received the invitation. */
    invitee?: UserRequest
    /** The user who created the invitation. */
    inviter?: UserRequest
    /**
     * The permission granted on this repository by this invitation.
     * 
     * **Upcoming Change on 2020-10-01 UTC**
     * **Description:** Type for `permission` will change from `RepositoryPermission!` to `String`.
     * **Reason:** This field may return additional values
     */
    permission?: boolean | number
    /** The Repository the user is invited to. */
    repository?: RepositoryInfoRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for RepositoryInvitation. */
export interface RepositoryInvitationConnectionRequest{
    /** A list of edges. */
    edges?: RepositoryInvitationEdgeRequest
    /** A list of nodes. */
    nodes?: RepositoryInvitationRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface RepositoryInvitationEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: RepositoryInvitationRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for repository invitation connections. */
export interface RepositoryInvitationOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order repository invitations by. */
field: RepositoryInvitationOrderField}


/** Represents a object that belongs to a repository. */
export interface RepositoryNodeRequest{
    /** The repository associated with this node. */
    repository?: RepositoryRequest
    on_CommitComment?: CommitCommentRequest
    on_CommitCommentThread?: CommitCommentThreadRequest
    on_Issue?: IssueRequest
    on_IssueComment?: IssueCommentRequest
    on_PullRequest?: PullRequestRequest
    on_PullRequestCommitCommentThread?: PullRequestCommitCommentThreadRequest
    on_PullRequestReview?: PullRequestReviewRequest
    on_PullRequestReviewComment?: PullRequestReviewCommentRequest
    on_RepositoryVulnerabilityAlert?: RepositoryVulnerabilityAlertRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for repository connections */
export interface RepositoryOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order repositories by. */
field: RepositoryOrderField}


/** Represents an owner of a Repository. */
export interface RepositoryOwnerRequest{
    /** A URL pointing to the owner's public avatar. */
    avatarUrl?: [{
    /** The size of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    id?: boolean | number
    /** The username used to login. */
    login?: boolean | number
    /** A list of repositories that the user owns. */
    repositories?: [{
    /**
     * Array of viewer's affiliation options for repositories returned from the
     * connection. For example, OWNER will include only repositories that the
     * current viewer owns.
     */
    affiliations?: ((RepositoryAffiliation | null)[] | null),
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** If non-null, filters repositories according to whether they are forks of another repository */
    isFork?: (Scalars['Boolean'] | null),
    /** If non-null, filters repositories according to whether they have been locked */
    isLocked?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for repositories returned from the connection */
    orderBy?: (RepositoryOrder | null),
    /**
     * Array of owner's affiliation options for repositories returned from the
     * connection. For example, OWNER will include only repositories that the
     * organization or user being viewed owns.
     */
    ownerAffiliations?: ((RepositoryAffiliation | null)[] | null),
    /** If non-null, filters repositories according to privacy */
    privacy?: (RepositoryPrivacy | null)},RepositoryConnectionRequest] | RepositoryConnectionRequest
    /** Find Repository. */
    repository?: [{
    /** Name of Repository to find. */
    name: Scalars['String']},RepositoryRequest]
    /** The HTTP URL for the owner. */
    resourcePath?: boolean | number
    /** The HTTP URL for the owner. */
    url?: boolean | number
    on_Organization?: OrganizationRequest
    on_User?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A repository-topic connects a repository to a topic. */
export interface RepositoryTopicRequest{
    id?: boolean | number
    /** The HTTP path for this repository-topic. */
    resourcePath?: boolean | number
    /** The topic. */
    topic?: TopicRequest
    /** The HTTP URL for this repository-topic. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for RepositoryTopic. */
export interface RepositoryTopicConnectionRequest{
    /** A list of edges. */
    edges?: RepositoryTopicEdgeRequest
    /** A list of nodes. */
    nodes?: RepositoryTopicRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface RepositoryTopicEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: RepositoryTopicRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repository_visibility_change.disable event. */
export interface RepositoryVisibilityChangeDisableAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: boolean | number
    /** The slug of the enterprise. */
    enterpriseSlug?: boolean | number
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a repository_visibility_change.enable event. */
export interface RepositoryVisibilityChangeEnableAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    /** The HTTP path for this enterprise. */
    enterpriseResourcePath?: boolean | number
    /** The slug of the enterprise. */
    enterpriseSlug?: boolean | number
    /** The HTTP URL for this enterprise. */
    enterpriseUrl?: boolean | number
    id?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A alert for a repository with an affected vulnerability. */
export interface RepositoryVulnerabilityAlertRequest{
    /** When was the alert created? */
    createdAt?: boolean | number
    /** The reason the alert was dismissed */
    dismissReason?: boolean | number
    /** When was the alert dimissed? */
    dismissedAt?: boolean | number
    /** The user who dismissed the alert */
    dismisser?: UserRequest
    id?: boolean | number
    /** The associated repository */
    repository?: RepositoryRequest
    /** The associated security advisory */
    securityAdvisory?: SecurityAdvisoryRequest
    /** The associated security vulnerablity */
    securityVulnerability?: SecurityVulnerabilityRequest
    /** The vulnerable manifest filename */
    vulnerableManifestFilename?: boolean | number
    /** The vulnerable manifest path */
    vulnerableManifestPath?: boolean | number
    /** The vulnerable requirements */
    vulnerableRequirements?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for RepositoryVulnerabilityAlert. */
export interface RepositoryVulnerabilityAlertConnectionRequest{
    /** A list of edges. */
    edges?: RepositoryVulnerabilityAlertEdgeRequest
    /** A list of nodes. */
    nodes?: RepositoryVulnerabilityAlertRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface RepositoryVulnerabilityAlertEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: RepositoryVulnerabilityAlertRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of RequestReviews */
export interface RequestReviewsInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the pull request to modify. */
pullRequestId: Scalars['ID'],
/** The Node IDs of the team to request. */
teamIds?: (Scalars['ID'][] | null),
/** Add users to the set rather than replace. */
union?: (Scalars['Boolean'] | null),
/** The Node IDs of the user to request. */
userIds?: (Scalars['ID'][] | null)}


/** Autogenerated return type of RequestReviews */
export interface RequestReviewsPayloadRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The pull request that is getting requests. */
    pullRequest?: PullRequestRequest
    /** The edge from the pull request to the requested reviewers. */
    requestedReviewersEdge?: UserEdgeRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Types that can be requested reviewers. */
export interface RequestedReviewerRequest{
    on_Mannequin?:MannequinRequest,
    on_Team?:TeamRequest,
    on_User?:UserRequest,
    on_Actor?: ActorRequest,
    on_Node?: NodeRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_MemberStatusable?: MemberStatusableRequest,
    on_Subscribable?: SubscribableRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProfileOwner?: ProfileOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryOwner?: RepositoryOwnerRequest,
    on_Sponsorable?: SponsorableRequest,
    __typename?: boolean | number
}


/** Autogenerated input type of RerequestCheckSuite */
export interface RerequestCheckSuiteInput {
/** The Node ID of the check suite. */
checkSuiteId: Scalars['ID'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the repository. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of RerequestCheckSuite */
export interface RerequestCheckSuitePayloadRequest{
    /** The requested check suite. */
    checkSuite?: CheckSuiteRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ResolveReviewThread */
export interface ResolveReviewThreadInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the thread to resolve */
threadId: Scalars['ID']}


/** Autogenerated return type of ResolveReviewThread */
export interface ResolveReviewThreadPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The thread to resolve. */
    thread?: PullRequestReviewThreadRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a private contribution a user made on GitHub. */
export interface RestrictedContributionRequest{
    /**
     * Whether this contribution is associated with a record you do not have access to. For
     * example, your own 'first issue' contribution may have been made on a repository you can no
     * longer access.
     */
    isRestricted?: boolean | number
    /** When this contribution was made. */
    occurredAt?: boolean | number
    /** The HTTP path for this contribution. */
    resourcePath?: boolean | number
    /** The HTTP URL for this contribution. */
    url?: boolean | number
    /** The user who made this contribution. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A team or user who has the ability to dismiss a review on a protected branch. */
export interface ReviewDismissalAllowanceRequest{
    /** The actor that can dismiss. */
    actor?: ReviewDismissalAllowanceActorRequest
    /** Identifies the branch protection rule associated with the allowed user or team. */
    branchProtectionRule?: BranchProtectionRuleRequest
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Types that can be an actor. */
export interface ReviewDismissalAllowanceActorRequest{
    on_Team?:TeamRequest,
    on_User?:UserRequest,
    on_MemberStatusable?: MemberStatusableRequest,
    on_Node?: NodeRequest,
    on_Subscribable?: SubscribableRequest,
    on_Actor?: ActorRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProfileOwner?: ProfileOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryOwner?: RepositoryOwnerRequest,
    on_Sponsorable?: SponsorableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    __typename?: boolean | number
}


/** The connection type for ReviewDismissalAllowance. */
export interface ReviewDismissalAllowanceConnectionRequest{
    /** A list of edges. */
    edges?: ReviewDismissalAllowanceEdgeRequest
    /** A list of nodes. */
    nodes?: ReviewDismissalAllowanceRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface ReviewDismissalAllowanceEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: ReviewDismissalAllowanceRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'review_dismissed' event on a given issue or pull request. */
export interface ReviewDismissedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** Identifies the optional message associated with the 'review_dismissed' event. */
    dismissalMessage?: boolean | number
    /** Identifies the optional message associated with the event, rendered to HTML. */
    dismissalMessageHTML?: boolean | number
    id?: boolean | number
    /** Identifies the previous state of the review with the 'review_dismissed' event. */
    previousReviewState?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    /** Identifies the commit which caused the review to become stale. */
    pullRequestCommit?: PullRequestCommitRequest
    /** The HTTP path for this review dismissed event. */
    resourcePath?: boolean | number
    /** Identifies the review associated with the 'review_dismissed' event. */
    review?: PullRequestReviewRequest
    /** The HTTP URL for this review dismissed event. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A request for a user to review a pull request. */
export interface ReviewRequestRequest{
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** Identifies the pull request associated with this review request. */
    pullRequest?: PullRequestRequest
    /** The reviewer that is requested. */
    requestedReviewer?: RequestedReviewerRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for ReviewRequest. */
export interface ReviewRequestConnectionRequest{
    /** A list of edges. */
    edges?: ReviewRequestEdgeRequest
    /** A list of nodes. */
    nodes?: ReviewRequestRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface ReviewRequestEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: ReviewRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an 'review_request_removed' event on a given pull request. */
export interface ReviewRequestRemovedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    /** Identifies the reviewer whose review request was removed. */
    requestedReviewer?: RequestedReviewerRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an 'review_requested' event on a given pull request. */
export interface ReviewRequestedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** PullRequest referenced by event. */
    pullRequest?: PullRequestRequest
    /** Identifies the reviewer whose review was requested. */
    requestedReviewer?: RequestedReviewerRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A hovercard context with a message describing the current code review state of the pull
 * request.
 */
export interface ReviewStatusHovercardContextRequest{
    /** A string describing this context */
    message?: boolean | number
    /** An octicon to accompany this context */
    octicon?: boolean | number
    /** The current status of the pull request with respect to code review. */
    reviewDecision?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Saved Reply is text a user can use to reply quickly. */
export interface SavedReplyRequest{
    /** The body of the saved reply. */
    body?: boolean | number
    /** The saved reply body rendered to HTML. */
    bodyHTML?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    id?: boolean | number
    /** The title of the saved reply. */
    title?: boolean | number
    /** The user that saved this reply. */
    user?: ActorRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for SavedReply. */
export interface SavedReplyConnectionRequest{
    /** A list of edges. */
    edges?: SavedReplyEdgeRequest
    /** A list of nodes. */
    nodes?: SavedReplyRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface SavedReplyEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: SavedReplyRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for saved reply connections. */
export interface SavedReplyOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order saved replies by. */
field: SavedReplyOrderField}


/** The results of a search. */
export interface SearchResultItemRequest{
    on_App?:AppRequest,
    on_Issue?:IssueRequest,
    on_MarketplaceListing?:MarketplaceListingRequest,
    on_Organization?:OrganizationRequest,
    on_PullRequest?:PullRequestRequest,
    on_Repository?:RepositoryRequest,
    on_User?:UserRequest,
    on_Node?: NodeRequest,
    on_Assignable?: AssignableRequest,
    on_Closable?: ClosableRequest,
    on_Comment?: CommentRequest,
    on_Labelable?: LabelableRequest,
    on_Lockable?: LockableRequest,
    on_Reactable?: ReactableRequest,
    on_RepositoryNode?: RepositoryNodeRequest,
    on_Subscribable?: SubscribableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    on_Updatable?: UpdatableRequest,
    on_UpdatableComment?: UpdatableCommentRequest,
    on_Actor?: ActorRequest,
    on_MemberStatusable?: MemberStatusableRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProfileOwner?: ProfileOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryOwner?: RepositoryOwnerRequest,
    on_Sponsorable?: SponsorableRequest,
    on_RepositoryInfo?: RepositoryInfoRequest,
    on_Starrable?: StarrableRequest,
    __typename?: boolean | number
}


/** A list of results that matched against a search query. */
export interface SearchResultItemConnectionRequest{
    /** The number of pieces of code that matched the search query. */
    codeCount?: boolean | number
    /** A list of edges. */
    edges?: SearchResultItemEdgeRequest
    /** The number of issues that matched the search query. */
    issueCount?: boolean | number
    /** A list of nodes. */
    nodes?: SearchResultItemRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** The number of repositories that matched the search query. */
    repositoryCount?: boolean | number
    /** The number of users that matched the search query. */
    userCount?: boolean | number
    /** The number of wiki pages that matched the search query. */
    wikiCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface SearchResultItemEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: SearchResultItemRequest
    /** Text matches on the result found. */
    textMatches?: TextMatchRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A GitHub Security Advisory */
export interface SecurityAdvisoryRequest{
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** This is a long plaintext description of the advisory */
    description?: boolean | number
    /** The GitHub Security Advisory ID */
    ghsaId?: boolean | number
    id?: boolean | number
    /** A list of identifiers for this advisory */
    identifiers?: SecurityAdvisoryIdentifierRequest
    /** The organization that originated the advisory */
    origin?: boolean | number
    /** The permalink for the advisory */
    permalink?: boolean | number
    /** When the advisory was published */
    publishedAt?: boolean | number
    /** A list of references for this advisory */
    references?: SecurityAdvisoryReferenceRequest
    /** The severity of the advisory */
    severity?: boolean | number
    /** A short plaintext summary of the advisory */
    summary?: boolean | number
    /** When the advisory was last updated */
    updatedAt?: boolean | number
    /** Vulnerabilities associated with this Advisory */
    vulnerabilities?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** An ecosystem to filter vulnerabilities by. */
    ecosystem?: (SecurityAdvisoryEcosystem | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for the returned topics. */
    orderBy?: (SecurityVulnerabilityOrder | null),
    /** A package name to filter vulnerabilities by. */
    package?: (Scalars['String'] | null),
    /** A list of severities to filter vulnerabilities by. */
    severities?: (SecurityAdvisorySeverity[] | null)},SecurityVulnerabilityConnectionRequest] | SecurityVulnerabilityConnectionRequest
    /** When the advisory was withdrawn, if it has been withdrawn */
    withdrawnAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for SecurityAdvisory. */
export interface SecurityAdvisoryConnectionRequest{
    /** A list of edges. */
    edges?: SecurityAdvisoryEdgeRequest
    /** A list of nodes. */
    nodes?: SecurityAdvisoryRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface SecurityAdvisoryEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: SecurityAdvisoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A GitHub Security Advisory Identifier */
export interface SecurityAdvisoryIdentifierRequest{
    /** The identifier type, e.g. GHSA, CVE */
    type?: boolean | number
    /** The identifier */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An advisory identifier to filter results on. */
export interface SecurityAdvisoryIdentifierFilter {
/** The identifier type. */
type: SecurityAdvisoryIdentifierType,
/** The identifier string. Supports exact or partial matching. */
value: Scalars['String']}


/** Ordering options for security advisory connections */
export interface SecurityAdvisoryOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order security advisories by. */
field: SecurityAdvisoryOrderField}


/** An individual package */
export interface SecurityAdvisoryPackageRequest{
    /** The ecosystem the package belongs to, e.g. RUBYGEMS, NPM */
    ecosystem?: boolean | number
    /** The package name */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An individual package version */
export interface SecurityAdvisoryPackageVersionRequest{
    /** The package name or version */
    identifier?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A GitHub Security Advisory Reference */
export interface SecurityAdvisoryReferenceRequest{
    /** A publicly accessible reference */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An individual vulnerability within an Advisory */
export interface SecurityVulnerabilityRequest{
    /** The Advisory associated with this Vulnerability */
    advisory?: SecurityAdvisoryRequest
    /** The first version containing a fix for the vulnerability */
    firstPatchedVersion?: SecurityAdvisoryPackageVersionRequest
    /** A description of the vulnerable package */
    package?: SecurityAdvisoryPackageRequest
    /** The severity of the vulnerability within this package */
    severity?: boolean | number
    /** When the vulnerability was last updated */
    updatedAt?: boolean | number
    /**
     * A string that describes the vulnerable package versions.
     * This string follows a basic syntax with a few forms.
     * + `= 0.2.0` denotes a single vulnerable version.
     * + `<= 1.0.8` denotes a version range up to and including the specified version
     * + `< 0.1.11` denotes a version range up to, but excluding, the specified version
     * + `>= 4.3.0, < 4.3.5` denotes a version range with a known minimum and maximum version.
     * + `>= 0.0.1` denotes a version range with a known minimum, but no known maximum
     */
    vulnerableVersionRange?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for SecurityVulnerability. */
export interface SecurityVulnerabilityConnectionRequest{
    /** A list of edges. */
    edges?: SecurityVulnerabilityEdgeRequest
    /** A list of nodes. */
    nodes?: SecurityVulnerabilityRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface SecurityVulnerabilityEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: SecurityVulnerabilityRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for security vulnerability connections */
export interface SecurityVulnerabilityOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order security vulnerabilities by. */
field: SecurityVulnerabilityOrderField}


/** Autogenerated input type of SetEnterpriseIdentityProvider */
export interface SetEnterpriseIdentityProviderInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The digest algorithm used to sign SAML requests for the identity provider. */
digestMethod: SamlDigestAlgorithm,
/** The ID of the enterprise on which to set an identity provider. */
enterpriseId: Scalars['ID'],
/** The x509 certificate used by the identity provider to sign assertions and responses. */
idpCertificate: Scalars['String'],
/** The Issuer Entity ID for the SAML identity provider */
issuer?: (Scalars['String'] | null),
/** The signature algorithm used to sign SAML requests for the identity provider. */
signatureMethod: SamlSignatureAlgorithm,
/** The URL endpoint for the identity provider's SAML SSO. */
ssoUrl: Scalars['URI']}


/** Autogenerated return type of SetEnterpriseIdentityProvider */
export interface SetEnterpriseIdentityProviderPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The identity provider for the enterprise. */
    identityProvider?: EnterpriseIdentityProviderRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an S/MIME signature on a Commit or Tag. */
export interface SmimeSignatureRequest{
    /** Email used to sign this object. */
    email?: boolean | number
    /** True if the signature is valid and verified by GitHub. */
    isValid?: boolean | number
    /** Payload for GPG signing object. Raw ODB object without the signature header. */
    payload?: boolean | number
    /** ASCII-armored signature header from object. */
    signature?: boolean | number
    /** GitHub user corresponding to the email signing this commit. */
    signer?: UserRequest
    /**
     * The state of this signature. `VALID` if signature is valid and verified by
     * GitHub, otherwise represents reason why signature is considered invalid.
     */
    state?: boolean | number
    /** True if the signature was made with GitHub's signing key. */
    wasSignedByGitHub?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Entites that can sponsor others via GitHub Sponsors */
export interface SponsorRequest{
    on_Organization?:OrganizationRequest,
    on_User?:UserRequest,
    on_Actor?: ActorRequest,
    on_MemberStatusable?: MemberStatusableRequest,
    on_Node?: NodeRequest,
    on_PackageOwner?: PackageOwnerRequest,
    on_ProfileOwner?: ProfileOwnerRequest,
    on_ProjectOwner?: ProjectOwnerRequest,
    on_RegistryPackageOwner?: RegistryPackageOwnerRequest,
    on_RegistryPackageSearch?: RegistryPackageSearchRequest,
    on_RepositoryOwner?: RepositoryOwnerRequest,
    on_Sponsorable?: SponsorableRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    __typename?: boolean | number
}


/** Entities that can be sponsored through GitHub Sponsors */
export interface SponsorableRequest{
    /** The GitHub Sponsors listing for this user. */
    sponsorsListing?: SponsorsListingRequest
    /** This object's sponsorships as the maintainer. */
    sponsorshipsAsMaintainer?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Whether or not to include private sponsorships in the result set */
    includePrivate?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /**
     * Ordering options for sponsorships returned from this connection. If left
     * blank, the sponsorships will be ordered based on relevancy to the viewer.
     */
    orderBy?: (SponsorshipOrder | null)},SponsorshipConnectionRequest] | SponsorshipConnectionRequest
    /** This object's sponsorships as the sponsor. */
    sponsorshipsAsSponsor?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /**
     * Ordering options for sponsorships returned from this connection. If left
     * blank, the sponsorships will be ordered based on relevancy to the viewer.
     */
    orderBy?: (SponsorshipOrder | null)},SponsorshipConnectionRequest] | SponsorshipConnectionRequest
    on_Organization?: OrganizationRequest
    on_User?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A GitHub Sponsors listing. */
export interface SponsorsListingRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The full description of the listing. */
    fullDescription?: boolean | number
    /** The full description of the listing rendered to HTML. */
    fullDescriptionHTML?: boolean | number
    id?: boolean | number
    /** The listing's full name. */
    name?: boolean | number
    /** The short description of the listing. */
    shortDescription?: boolean | number
    /** The short name of the listing. */
    slug?: boolean | number
    /** The published tiers for this GitHub Sponsors listing. */
    tiers?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for Sponsors tiers returned from the connection. */
    orderBy?: (SponsorsTierOrder | null)},SponsorsTierConnectionRequest] | SponsorsTierConnectionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A GitHub Sponsors tier associated with a GitHub Sponsors listing. */
export interface SponsorsTierRequest{
    /** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */
    adminInfo?: SponsorsTierAdminInfoRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The description of the tier. */
    description?: boolean | number
    /** The tier description rendered to HTML */
    descriptionHTML?: boolean | number
    id?: boolean | number
    /** How much this tier costs per month in cents. */
    monthlyPriceInCents?: boolean | number
    /** How much this tier costs per month in dollars. */
    monthlyPriceInDollars?: boolean | number
    /** The name of the tier. */
    name?: boolean | number
    /** The sponsors listing that this tier belongs to. */
    sponsorsListing?: SponsorsListingRequest
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** SponsorsTier information only visible to users that can administer the associated Sponsors listing. */
export interface SponsorsTierAdminInfoRequest{
    /** The sponsorships associated with this tier. */
    sponsorships?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Whether or not to include private sponsorships in the result set */
    includePrivate?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /**
     * Ordering options for sponsorships returned from this connection. If left
     * blank, the sponsorships will be ordered based on relevancy to the viewer.
     */
    orderBy?: (SponsorshipOrder | null)},SponsorshipConnectionRequest] | SponsorshipConnectionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for SponsorsTier. */
export interface SponsorsTierConnectionRequest{
    /** A list of edges. */
    edges?: SponsorsTierEdgeRequest
    /** A list of nodes. */
    nodes?: SponsorsTierRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface SponsorsTierEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: SponsorsTierRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for Sponsors tiers connections. */
export interface SponsorsTierOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order tiers by. */
field: SponsorsTierOrderField}


/** A sponsorship relationship between a sponsor and a maintainer */
export interface SponsorshipRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /**
     * @deprecated `Sponsorship.maintainer` will be removed. Use `Sponsorship.sponsorable` instead. Removal on 2020-04-01 UTC.
     * The entity that is being sponsored
     */
    maintainer?: UserRequest
    /** The privacy level for this sponsorship. */
    privacyLevel?: boolean | number
    /**
     * @deprecated `Sponsorship.sponsor` will be removed. Use `Sponsorship.sponsorEntity` instead. Removal on 2020-10-01 UTC.
     * The user that is sponsoring. Returns null if the sponsorship is private or if sponsor is not a user.
     */
    sponsor?: UserRequest
    /** The user or organization that is sponsoring. Returns null if the sponsorship is private. */
    sponsorEntity?: SponsorRequest
    /** The entity that is being sponsored */
    sponsorable?: SponsorableRequest
    /** The associated sponsorship tier */
    tier?: SponsorsTierRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Sponsorship. */
export interface SponsorshipConnectionRequest{
    /** A list of edges. */
    edges?: SponsorshipEdgeRequest
    /** A list of nodes. */
    nodes?: SponsorshipRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface SponsorshipEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: SponsorshipRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for sponsorship connections. */
export interface SponsorshipOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order sponsorship by. */
field: SponsorshipOrderField}


/** Ways in which star connections can be ordered. */
export interface StarOrder {
/** The direction in which to order nodes. */
direction: OrderDirection,
/** The field in which to order nodes by. */
field: StarOrderField}


/** The connection type for User. */
export interface StargazerConnectionRequest{
    /** A list of edges. */
    edges?: StargazerEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a user that's starred a repository. */
export interface StargazerEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    node?: UserRequest
    /** Identifies when the item was starred. */
    starredAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Things that can be starred. */
export interface StarrableRequest{
    id?: boolean | number
    /** A list of users who have starred this starrable. */
    stargazers?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for connection */
    orderBy?: (StarOrder | null)},StargazerConnectionRequest] | StargazerConnectionRequest
    /** Returns a boolean indicating whether the viewing user has starred this starrable. */
    viewerHasStarred?: boolean | number
    on_Gist?: GistRequest
    on_Repository?: RepositoryRequest
    on_Topic?: TopicRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Repository. */
export interface StarredRepositoryConnectionRequest{
    /** A list of edges. */
    edges?: StarredRepositoryEdgeRequest
    /** Is the list of stars for this user truncated? This is true for users that have many stars. */
    isOverLimit?: boolean | number
    /** A list of nodes. */
    nodes?: RepositoryRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a starred repository. */
export interface StarredRepositoryEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    node?: RepositoryRequest
    /** Identifies when the item was starred. */
    starredAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a commit status. */
export interface StatusRequest{
    /** The commit this status is attached to. */
    commit?: CommitRequest
    /** Looks up an individual status context by context name. */
    context?: [{
    /** The context name. */
    name: Scalars['String']},StatusContextRequest]
    /** The individual status contexts for this commit. */
    contexts?: StatusContextRequest
    id?: boolean | number
    /** The combined commit status. */
    state?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the rollup for both the check runs and status for a commit. */
export interface StatusCheckRollupRequest{
    /** The commit the status and check runs are attached to. */
    commit?: CommitRequest
    /** A list of status contexts and check runs for this commit. */
    contexts?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},StatusCheckRollupContextConnectionRequest] | StatusCheckRollupContextConnectionRequest
    id?: boolean | number
    /** The combined status for the commit. */
    state?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Types that can be inside a StatusCheckRollup context. */
export interface StatusCheckRollupContextRequest{
    on_CheckRun?:CheckRunRequest,
    on_StatusContext?:StatusContextRequest,
    on_Node?: NodeRequest,
    on_UniformResourceLocatable?: UniformResourceLocatableRequest,
    __typename?: boolean | number
}


/** The connection type for StatusCheckRollupContext. */
export interface StatusCheckRollupContextConnectionRequest{
    /** A list of edges. */
    edges?: StatusCheckRollupContextEdgeRequest
    /** A list of nodes. */
    nodes?: StatusCheckRollupContextRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface StatusCheckRollupContextEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: StatusCheckRollupContextRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an individual commit status context */
export interface StatusContextRequest{
    /** The avatar of the OAuth application or the user that created the status */
    avatarUrl?: [{
    /** The size of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** This commit this status context is attached to. */
    commit?: CommitRequest
    /** The name of this status context. */
    context?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The actor who created this status context. */
    creator?: ActorRequest
    /** The description for this status context. */
    description?: boolean | number
    id?: boolean | number
    /** The state of this status context. */
    state?: boolean | number
    /** The URL for this status context. */
    targetUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of SubmitPullRequestReview */
export interface SubmitPullRequestReviewInput {
/** The text field to set on the Pull Request Review. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The event to send to the Pull Request Review. */
event: PullRequestReviewEvent,
/** The Pull Request ID to submit any pending reviews. */
pullRequestId?: (Scalars['ID'] | null),
/** The Pull Request Review ID to submit. */
pullRequestReviewId?: (Scalars['ID'] | null)}


/** Autogenerated return type of SubmitPullRequestReview */
export interface SubmitPullRequestReviewPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The submitted pull request review. */
    pullRequestReview?: PullRequestReviewRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A pointer to a repository at a specific revision embedded inside another repository. */
export interface SubmoduleRequest{
    /** The branch of the upstream submodule for tracking updates */
    branch?: boolean | number
    /** The git URL of the submodule repository */
    gitUrl?: boolean | number
    /** The name of the submodule in .gitmodules */
    name?: boolean | number
    /** The path in the superproject that this submodule is located in */
    path?: boolean | number
    /** The commit revision of the subproject repository being tracked by the submodule */
    subprojectCommitOid?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Submodule. */
export interface SubmoduleConnectionRequest{
    /** A list of edges. */
    edges?: SubmoduleEdgeRequest
    /** A list of nodes. */
    nodes?: SubmoduleRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface SubmoduleEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: SubmoduleRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Entities that can be subscribed to for web and email notifications. */
export interface SubscribableRequest{
    id?: boolean | number
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe?: boolean | number
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: boolean | number
    on_Commit?: CommitRequest
    on_Issue?: IssueRequest
    on_PullRequest?: PullRequestRequest
    on_Repository?: RepositoryRequest
    on_Team?: TeamRequest
    on_TeamDiscussion?: TeamDiscussionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'subscribed' event on a given `Subscribable`. */
export interface SubscribedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Object referenced by event. */
    subscribable?: SubscribableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A suggestion to review a pull request based on a user's commit history and review comments. */
export interface SuggestedReviewerRequest{
    /** Is this suggestion based on past commits? */
    isAuthor?: boolean | number
    /** Is this suggestion based on past review comments? */
    isCommenter?: boolean | number
    /** Identifies the user suggested to review the pull request. */
    reviewer?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Git tag. */
export interface TagRequest{
    /** An abbreviated version of the Git object ID */
    abbreviatedOid?: boolean | number
    /** The HTTP path for this Git object */
    commitResourcePath?: boolean | number
    /** The HTTP URL for this Git object */
    commitUrl?: boolean | number
    id?: boolean | number
    /** The Git tag message. */
    message?: boolean | number
    /** The Git tag name. */
    name?: boolean | number
    /** The Git object ID */
    oid?: boolean | number
    /** The Repository the Git object belongs to */
    repository?: RepositoryRequest
    /** Details about the tag author. */
    tagger?: GitActorRequest
    /** The Git object the tag points to. */
    target?: GitObjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A team of users in an organization. */
export interface TeamRequest{
    /** A list of teams that are ancestors of this team. */
    ancestors?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},TeamConnectionRequest] | TeamConnectionRequest
    /** A URL pointing to the team's avatar. */
    avatarUrl?: [{
    /** The size in pixels of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** List of child teams belonging to this team */
    childTeams?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Whether to list immediate child teams or all descendant child teams. */
    immediateOnly?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for connection */
    orderBy?: (TeamOrder | null),
    /** User logins to filter by */
    userLogins?: (Scalars['String'][] | null)},TeamConnectionRequest] | TeamConnectionRequest
    /** The slug corresponding to the organization and team. */
    combinedSlug?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The description of the team. */
    description?: boolean | number
    /** Find a team discussion by its number. */
    discussion?: [{
    /** The sequence number of the discussion to find. */
    number: Scalars['Int']},TeamDiscussionRequest]
    /** A list of team discussions. */
    discussions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** If provided, filters discussions according to whether or not they are pinned. */
    isPinned?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for connection */
    orderBy?: (TeamDiscussionOrder | null)},TeamDiscussionConnectionRequest] | TeamDiscussionConnectionRequest
    /** The HTTP path for team discussions */
    discussionsResourcePath?: boolean | number
    /** The HTTP URL for team discussions */
    discussionsUrl?: boolean | number
    /** The HTTP path for editing this team */
    editTeamResourcePath?: boolean | number
    /** The HTTP URL for editing this team */
    editTeamUrl?: boolean | number
    id?: boolean | number
    /** A list of pending invitations for users to this team */
    invitations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},OrganizationInvitationConnectionRequest] | OrganizationInvitationConnectionRequest
    /** Get the status messages members of this entity have set that are either public or visible only to the organization. */
    memberStatuses?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for user statuses returned from the connection. */
    orderBy?: (UserStatusOrder | null)},UserStatusConnectionRequest] | UserStatusConnectionRequest
    /** A list of users who are members of this team. */
    members?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter by membership type */
    membership?: (TeamMembershipType | null),
    /** Order for the connection. */
    orderBy?: (TeamMemberOrder | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null),
    /** Filter by team member role */
    role?: (TeamMemberRole | null)},TeamMemberConnectionRequest] | TeamMemberConnectionRequest
    /** The HTTP path for the team' members */
    membersResourcePath?: boolean | number
    /** The HTTP URL for the team' members */
    membersUrl?: boolean | number
    /** The name of the team. */
    name?: boolean | number
    /** The HTTP path creating a new team */
    newTeamResourcePath?: boolean | number
    /** The HTTP URL creating a new team */
    newTeamUrl?: boolean | number
    /** The organization that owns this team. */
    organization?: OrganizationRequest
    /** The parent team of the team. */
    parentTeam?: TeamRequest
    /** The level of privacy the team has. */
    privacy?: boolean | number
    /** A list of repositories this team has access to. */
    repositories?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for the connection. */
    orderBy?: (TeamRepositoryOrder | null),
    /** The search string to look for. */
    query?: (Scalars['String'] | null)},TeamRepositoryConnectionRequest] | TeamRepositoryConnectionRequest
    /** The HTTP path for this team's repositories */
    repositoriesResourcePath?: boolean | number
    /** The HTTP URL for this team's repositories */
    repositoriesUrl?: boolean | number
    /** The HTTP path for this team */
    resourcePath?: boolean | number
    /** What algorithm is used for review assignment for this team */
    reviewRequestDelegationAlgorithm?: boolean | number
    /** True if review assignment is enabled for this team */
    reviewRequestDelegationEnabled?: boolean | number
    /** How many team members are required for review assignment for this team */
    reviewRequestDelegationMemberCount?: boolean | number
    /** When assigning team members via delegation, whether the entire team should be notified as well. */
    reviewRequestDelegationNotifyTeam?: boolean | number
    /** The slug corresponding to the team. */
    slug?: boolean | number
    /** The HTTP path for this team's teams */
    teamsResourcePath?: boolean | number
    /** The HTTP URL for this team's teams */
    teamsUrl?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this team */
    url?: boolean | number
    /** Team is adminable by the viewer. */
    viewerCanAdminister?: boolean | number
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe?: boolean | number
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a team.add_member event. */
export interface TeamAddMemberAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** Whether the team was mapped to an LDAP Group. */
    isLdapMapped?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The team associated with the action */
    team?: TeamRequest
    /** The name of the team */
    teamName?: boolean | number
    /** The HTTP path for this team */
    teamResourcePath?: boolean | number
    /** The HTTP URL for this team */
    teamUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a team.add_repository event. */
export interface TeamAddRepositoryAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** Whether the team was mapped to an LDAP Group. */
    isLdapMapped?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The team associated with the action */
    team?: TeamRequest
    /** The name of the team */
    teamName?: boolean | number
    /** The HTTP path for this team */
    teamResourcePath?: boolean | number
    /** The HTTP URL for this team */
    teamUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata for an audit entry with action team.* */
export interface TeamAuditEntryDataRequest{
    /** The team associated with the action */
    team?: TeamRequest
    /** The name of the team */
    teamName?: boolean | number
    /** The HTTP path for this team */
    teamResourcePath?: boolean | number
    /** The HTTP URL for this team */
    teamUrl?: boolean | number
    on_OrgRestoreMemberMembershipTeamAuditEntryData?: OrgRestoreMemberMembershipTeamAuditEntryDataRequest
    on_TeamAddMemberAuditEntry?: TeamAddMemberAuditEntryRequest
    on_TeamAddRepositoryAuditEntry?: TeamAddRepositoryAuditEntryRequest
    on_TeamChangeParentTeamAuditEntry?: TeamChangeParentTeamAuditEntryRequest
    on_TeamRemoveMemberAuditEntry?: TeamRemoveMemberAuditEntryRequest
    on_TeamRemoveRepositoryAuditEntry?: TeamRemoveRepositoryAuditEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a team.change_parent_team event. */
export interface TeamChangeParentTeamAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** Whether the team was mapped to an LDAP Group. */
    isLdapMapped?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The new parent team. */
    parentTeam?: TeamRequest
    /** The name of the new parent team */
    parentTeamName?: boolean | number
    /** The name of the former parent team */
    parentTeamNameWas?: boolean | number
    /** The HTTP path for the parent team */
    parentTeamResourcePath?: boolean | number
    /** The HTTP URL for the parent team */
    parentTeamUrl?: boolean | number
    /** The former parent team. */
    parentTeamWas?: TeamRequest
    /** The HTTP path for the previous parent team */
    parentTeamWasResourcePath?: boolean | number
    /** The HTTP URL for the previous parent team */
    parentTeamWasUrl?: boolean | number
    /** The team associated with the action */
    team?: TeamRequest
    /** The name of the team */
    teamName?: boolean | number
    /** The HTTP path for this team */
    teamResourcePath?: boolean | number
    /** The HTTP URL for this team */
    teamUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Team. */
export interface TeamConnectionRequest{
    /** A list of edges. */
    edges?: TeamEdgeRequest
    /** A list of nodes. */
    nodes?: TeamRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A team discussion. */
export interface TeamDiscussionRequest{
    /** The actor who authored the comment. */
    author?: ActorRequest
    /** Author's association with the discussion's team. */
    authorAssociation?: boolean | number
    /** The body as Markdown. */
    body?: boolean | number
    /** The body rendered to HTML. */
    bodyHTML?: boolean | number
    /** The body rendered to text. */
    bodyText?: boolean | number
    /** Identifies the discussion body hash. */
    bodyVersion?: boolean | number
    /** A list of comments on this discussion. */
    comments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** When provided, filters the connection such that results begin with the comment with this number. */
    fromComment?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for connection */
    orderBy?: (TeamDiscussionCommentOrder | null)},TeamDiscussionCommentConnectionRequest] | TeamDiscussionCommentConnectionRequest
    /** The HTTP path for discussion comments */
    commentsResourcePath?: boolean | number
    /** The HTTP URL for discussion comments */
    commentsUrl?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Check if this comment was created via an email reply. */
    createdViaEmail?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The actor who edited the comment. */
    editor?: ActorRequest
    id?: boolean | number
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit?: boolean | number
    /** Whether or not the discussion is pinned. */
    isPinned?: boolean | number
    /** Whether or not the discussion is only visible to team members and org admins. */
    isPrivate?: boolean | number
    /** The moment the editor made the last edit */
    lastEditedAt?: boolean | number
    /** Identifies the discussion within its team. */
    number?: boolean | number
    /** Identifies when the comment was published at. */
    publishedAt?: boolean | number
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroupRequest
    /** A list of Reactions left on the Issue. */
    reactions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Allows filtering Reactions by emoji. */
    content?: (ReactionContent | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows specifying the order in which reactions are returned. */
    orderBy?: (ReactionOrder | null)},ReactionConnectionRequest] | ReactionConnectionRequest
    /** The HTTP path for this discussion */
    resourcePath?: boolean | number
    /** The team that defines the context of this discussion. */
    team?: TeamRequest
    /** The title of the discussion */
    title?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this discussion */
    url?: boolean | number
    /** A list of edits to this content. */
    userContentEdits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserContentEditConnectionRequest] | UserContentEditConnectionRequest
    /** Check if the current viewer can delete this object. */
    viewerCanDelete?: boolean | number
    /** Whether or not the current viewer can pin this discussion. */
    viewerCanPin?: boolean | number
    /** Can user react to this subject */
    viewerCanReact?: boolean | number
    /** Check if the viewer is able to change their subscription status for the repository. */
    viewerCanSubscribe?: boolean | number
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons?: boolean | number
    /** Did the viewer author this comment. */
    viewerDidAuthor?: boolean | number
    /** Identifies if the viewer is watching, not watching, or ignoring the subscribable entity. */
    viewerSubscription?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A comment on a team discussion. */
export interface TeamDiscussionCommentRequest{
    /** The actor who authored the comment. */
    author?: ActorRequest
    /** Author's association with the comment's team. */
    authorAssociation?: boolean | number
    /** The body as Markdown. */
    body?: boolean | number
    /** The body rendered to HTML. */
    bodyHTML?: boolean | number
    /** The body rendered to text. */
    bodyText?: boolean | number
    /** The current version of the body content. */
    bodyVersion?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Check if this comment was created via an email reply. */
    createdViaEmail?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The discussion this comment is about. */
    discussion?: TeamDiscussionRequest
    /** The actor who edited the comment. */
    editor?: ActorRequest
    id?: boolean | number
    /** Check if this comment was edited and includes an edit with the creation data */
    includesCreatedEdit?: boolean | number
    /** The moment the editor made the last edit */
    lastEditedAt?: boolean | number
    /** Identifies the comment number. */
    number?: boolean | number
    /** Identifies when the comment was published at. */
    publishedAt?: boolean | number
    /** A list of reactions grouped by content left on the subject. */
    reactionGroups?: ReactionGroupRequest
    /** A list of Reactions left on the Issue. */
    reactions?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Allows filtering Reactions by emoji. */
    content?: (ReactionContent | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Allows specifying the order in which reactions are returned. */
    orderBy?: (ReactionOrder | null)},ReactionConnectionRequest] | ReactionConnectionRequest
    /** The HTTP path for this comment */
    resourcePath?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this comment */
    url?: boolean | number
    /** A list of edits to this content. */
    userContentEdits?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},UserContentEditConnectionRequest] | UserContentEditConnectionRequest
    /** Check if the current viewer can delete this object. */
    viewerCanDelete?: boolean | number
    /** Can user react to this subject */
    viewerCanReact?: boolean | number
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons?: boolean | number
    /** Did the viewer author this comment. */
    viewerDidAuthor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for TeamDiscussionComment. */
export interface TeamDiscussionCommentConnectionRequest{
    /** A list of edges. */
    edges?: TeamDiscussionCommentEdgeRequest
    /** A list of nodes. */
    nodes?: TeamDiscussionCommentRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface TeamDiscussionCommentEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: TeamDiscussionCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which team discussion comment connections can be ordered. */
export interface TeamDiscussionCommentOrder {
/** The direction in which to order nodes. */
direction: OrderDirection,
/** The field by which to order nodes. */
field: TeamDiscussionCommentOrderField}


/** The connection type for TeamDiscussion. */
export interface TeamDiscussionConnectionRequest{
    /** A list of edges. */
    edges?: TeamDiscussionEdgeRequest
    /** A list of nodes. */
    nodes?: TeamDiscussionRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface TeamDiscussionEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: TeamDiscussionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ways in which team discussion connections can be ordered. */
export interface TeamDiscussionOrder {
/** The direction in which to order nodes. */
direction: OrderDirection,
/** The field by which to order nodes. */
field: TeamDiscussionOrderField}


/** An edge in a connection. */
export interface TeamEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: TeamRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for User. */
export interface TeamMemberConnectionRequest{
    /** A list of edges. */
    edges?: TeamMemberEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a user who is a member of a team. */
export interface TeamMemberEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The HTTP path to the organization's member access page. */
    memberAccessResourcePath?: boolean | number
    /** The HTTP URL to the organization's member access page. */
    memberAccessUrl?: boolean | number
    node?: UserRequest
    /** The role the member has on the team. */
    role?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for team member connections */
export interface TeamMemberOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order team members by. */
field: TeamMemberOrderField}


/** Ways in which team connections can be ordered. */
export interface TeamOrder {
/** The direction in which to order nodes. */
direction: OrderDirection,
/** The field in which to order nodes by. */
field: TeamOrderField}


/** Audit log entry for a team.remove_member event. */
export interface TeamRemoveMemberAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** Whether the team was mapped to an LDAP Group. */
    isLdapMapped?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The team associated with the action */
    team?: TeamRequest
    /** The name of the team */
    teamName?: boolean | number
    /** The HTTP path for this team */
    teamResourcePath?: boolean | number
    /** The HTTP URL for this team */
    teamUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Audit log entry for a team.remove_repository event. */
export interface TeamRemoveRepositoryAuditEntryRequest{
    /** The action name */
    action?: boolean | number
    /** The user who initiated the action */
    actor?: AuditEntryActorRequest
    /** The IP address of the actor */
    actorIp?: boolean | number
    /** A readable representation of the actor's location */
    actorLocation?: ActorLocationRequest
    /** The username of the user who initiated the action */
    actorLogin?: boolean | number
    /** The HTTP path for the actor. */
    actorResourcePath?: boolean | number
    /** The HTTP URL for the actor. */
    actorUrl?: boolean | number
    /** The time the action was initiated */
    createdAt?: boolean | number
    id?: boolean | number
    /** Whether the team was mapped to an LDAP Group. */
    isLdapMapped?: boolean | number
    /** The corresponding operation type for the action */
    operationType?: boolean | number
    /** The Organization associated with the Audit Entry. */
    organization?: OrganizationRequest
    /** The name of the Organization. */
    organizationName?: boolean | number
    /** The HTTP path for the organization */
    organizationResourcePath?: boolean | number
    /** The HTTP URL for the organization */
    organizationUrl?: boolean | number
    /** The repository associated with the action */
    repository?: RepositoryRequest
    /** The name of the repository */
    repositoryName?: boolean | number
    /** The HTTP path for the repository */
    repositoryResourcePath?: boolean | number
    /** The HTTP URL for the repository */
    repositoryUrl?: boolean | number
    /** The team associated with the action */
    team?: TeamRequest
    /** The name of the team */
    teamName?: boolean | number
    /** The HTTP path for this team */
    teamResourcePath?: boolean | number
    /** The HTTP URL for this team */
    teamUrl?: boolean | number
    /** The user affected by the action */
    user?: UserRequest
    /** For actions involving two users, the actor is the initiator and the user is the affected user. */
    userLogin?: boolean | number
    /** The HTTP path for the user. */
    userResourcePath?: boolean | number
    /** The HTTP URL for the user. */
    userUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Repository. */
export interface TeamRepositoryConnectionRequest{
    /** A list of edges. */
    edges?: TeamRepositoryEdgeRequest
    /** A list of nodes. */
    nodes?: RepositoryRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a team repository. */
export interface TeamRepositoryEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    node?: RepositoryRequest
    /**
     * The permission level the team has on the repository
     * 
     * **Upcoming Change on 2020-10-01 UTC**
     * **Description:** Type for `permission` will change from `RepositoryPermission!` to `String`.
     * **Reason:** This field may return additional values
     */
    permission?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for team repository connections */
export interface TeamRepositoryOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order repositories by. */
field: TeamRepositoryOrderField}


/** A text match within a search result. */
export interface TextMatchRequest{
    /** The specific text fragment within the property matched on. */
    fragment?: boolean | number
    /** Highlights within the matched fragment. */
    highlights?: TextMatchHighlightRequest
    /** The property matched on. */
    property?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a single highlight in a search result match. */
export interface TextMatchHighlightRequest{
    /** The indice in the fragment where the matched text begins. */
    beginIndice?: boolean | number
    /** The indice in the fragment where the matched text ends. */
    endIndice?: boolean | number
    /** The text matched. */
    text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A topic aggregates entities that are related to a subject. */
export interface TopicRequest{
    id?: boolean | number
    /** The topic's name. */
    name?: boolean | number
    /**
     * A list of related topics, including aliases of this topic, sorted with the most relevant
     * first. Returns up to 10 Topics.
     */
    relatedTopics?: [{
    /** How many topics to return. */
    first?: (Scalars['Int'] | null)},TopicRequest] | TopicRequest
    /** A list of users who have starred this starrable. */
    stargazers?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for connection */
    orderBy?: (StarOrder | null)},StargazerConnectionRequest] | StargazerConnectionRequest
    /** Returns a boolean indicating whether the viewing user has starred this starrable. */
    viewerHasStarred?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metadata for an audit entry with a topic. */
export interface TopicAuditEntryDataRequest{
    /** The name of the topic added to the repository */
    topic?: TopicRequest
    /** The name of the topic added to the repository */
    topicName?: boolean | number
    on_RepoAddTopicAuditEntry?: RepoAddTopicAuditEntryRequest
    on_RepoRemoveTopicAuditEntry?: RepoRemoveTopicAuditEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for Topic. */
export interface TopicConnectionRequest{
    /** A list of edges. */
    edges?: TopicEdgeRequest
    /** A list of nodes. */
    nodes?: TopicRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface TopicEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: TopicRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of TransferIssue */
export interface TransferIssueInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the issue to be transferred */
issueId: Scalars['ID'],
/** The Node ID of the repository the issue should be transferred to */
repositoryId: Scalars['ID']}


/** Autogenerated return type of TransferIssue */
export interface TransferIssuePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The issue that was transferred */
    issue?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'transferred' event on a given issue or pull request. */
export interface TransferredEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** The repository this came from */
    fromRepository?: RepositoryRequest
    id?: boolean | number
    /** Identifies the issue associated with the event. */
    issue?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Git tree. */
export interface TreeRequest{
    /** An abbreviated version of the Git object ID */
    abbreviatedOid?: boolean | number
    /** The HTTP path for this Git object */
    commitResourcePath?: boolean | number
    /** The HTTP URL for this Git object */
    commitUrl?: boolean | number
    /** A list of tree entries. */
    entries?: TreeEntryRequest
    id?: boolean | number
    /** The Git object ID */
    oid?: boolean | number
    /** The Repository the Git object belongs to */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Git tree entry. */
export interface TreeEntryRequest{
    /** Entry file mode. */
    mode?: boolean | number
    /** Entry file name. */
    name?: boolean | number
    /** Entry file object. */
    object?: GitObjectRequest
    /** Entry file Git object ID. */
    oid?: boolean | number
    /** The Repository the tree entry belongs to */
    repository?: RepositoryRequest
    /** If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule */
    submodule?: SubmoduleRequest
    /** Entry file type. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UnarchiveRepository */
export interface UnarchiveRepositoryInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the repository to unarchive. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of UnarchiveRepository */
export interface UnarchiveRepositoryPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The repository that was unarchived. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an 'unassigned' event on any assignable object. */
export interface UnassignedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the assignable associated with the event. */
    assignable?: AssignableRequest
    /** Identifies the user or mannequin that was unassigned. */
    assignee?: AssigneeRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /**
     * @deprecated Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC.
     * Identifies the subject (user) who was unassigned.
     */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UnfollowUser */
export interface UnfollowUserInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** ID of the user to unfollow. */
userId: Scalars['ID']}


/** Autogenerated return type of UnfollowUser */
export interface UnfollowUserPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The user that was unfollowed. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a type that can be retrieved by a URL. */
export interface UniformResourceLocatableRequest{
    /** The HTML path to this resource. */
    resourcePath?: boolean | number
    /** The URL to this resource. */
    url?: boolean | number
    on_Bot?: BotRequest
    on_CheckRun?: CheckRunRequest
    on_ClosedEvent?: ClosedEventRequest
    on_Commit?: CommitRequest
    on_ConvertToDraftEvent?: ConvertToDraftEventRequest
    on_CrossReferencedEvent?: CrossReferencedEventRequest
    on_Gist?: GistRequest
    on_Issue?: IssueRequest
    on_Mannequin?: MannequinRequest
    on_MergedEvent?: MergedEventRequest
    on_Milestone?: MilestoneRequest
    on_Organization?: OrganizationRequest
    on_PullRequest?: PullRequestRequest
    on_PullRequestCommit?: PullRequestCommitRequest
    on_ReadyForReviewEvent?: ReadyForReviewEventRequest
    on_Release?: ReleaseRequest
    on_Repository?: RepositoryRequest
    on_RepositoryTopic?: RepositoryTopicRequest
    on_ReviewDismissedEvent?: ReviewDismissedEventRequest
    on_TeamDiscussion?: TeamDiscussionRequest
    on_TeamDiscussionComment?: TeamDiscussionCommentRequest
    on_User?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an unknown signature on a Commit or Tag. */
export interface UnknownSignatureRequest{
    /** Email used to sign this object. */
    email?: boolean | number
    /** True if the signature is valid and verified by GitHub. */
    isValid?: boolean | number
    /** Payload for GPG signing object. Raw ODB object without the signature header. */
    payload?: boolean | number
    /** ASCII-armored signature header from object. */
    signature?: boolean | number
    /** GitHub user corresponding to the email signing this commit. */
    signer?: UserRequest
    /**
     * The state of this signature. `VALID` if signature is valid and verified by
     * GitHub, otherwise represents reason why signature is considered invalid.
     */
    state?: boolean | number
    /** True if the signature was made with GitHub's signing key. */
    wasSignedByGitHub?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an 'unlabeled' event on a given issue or pull request. */
export interface UnlabeledEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Identifies the label associated with the 'unlabeled' event. */
    label?: LabelRequest
    /** Identifies the `Labelable` associated with the event. */
    labelable?: LabelableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UnlinkRepositoryFromProject */
export interface UnlinkRepositoryFromProjectInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the Project linked to the Repository. */
projectId: Scalars['ID'],
/** The ID of the Repository linked to the Project. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of UnlinkRepositoryFromProject */
export interface UnlinkRepositoryFromProjectPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The linked Project. */
    project?: ProjectRequest
    /** The linked Repository. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UnlockLockable */
export interface UnlockLockableInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** ID of the issue or pull request to be unlocked. */
lockableId: Scalars['ID']}


/** Autogenerated return type of UnlockLockable */
export interface UnlockLockablePayloadRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The item that was unlocked. */
    unlockedRecord?: LockableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an 'unlocked' event on a given issue or pull request. */
export interface UnlockedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Object that was unlocked. */
    lockable?: LockableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UnmarkIssueAsDuplicate */
export interface UnmarkIssueAsDuplicateInput {
/** ID of the issue or pull request currently considered canonical/authoritative/original. */
canonicalId: Scalars['ID'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** ID of the issue or pull request currently marked as a duplicate. */
duplicateId: Scalars['ID']}


/** Autogenerated return type of UnmarkIssueAsDuplicate */
export interface UnmarkIssueAsDuplicatePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The issue or pull request that was marked as a duplicate. */
    duplicate?: IssueOrPullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an 'unmarked_as_duplicate' event on a given issue or pull request. */
export interface UnmarkedAsDuplicateEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UnminimizeComment */
export interface UnminimizeCommentInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the subject to modify. */
subjectId: Scalars['ID']}


/** Autogenerated return type of UnminimizeComment */
export interface UnminimizeCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The comment that was unminimized. */
    unminimizedComment?: MinimizableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UnpinIssue */
export interface UnpinIssueInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the issue to be unpinned */
issueId: Scalars['ID']}


/** Autogenerated return type of UnpinIssue */
export interface UnpinIssuePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The issue that was unpinned */
    issue?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an 'unpinned' event on a given issue or pull request. */
export interface UnpinnedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Identifies the issue associated with the event. */
    issue?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UnresolveReviewThread */
export interface UnresolveReviewThreadInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the thread to unresolve */
threadId: Scalars['ID']}


/** Autogenerated return type of UnresolveReviewThread */
export interface UnresolveReviewThreadPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The thread to resolve. */
    thread?: PullRequestReviewThreadRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an 'unsubscribed' event on a given `Subscribable`. */
export interface UnsubscribedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** Object referenced by event. */
    subscribable?: SubscribableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Entities that can be updated. */
export interface UpdatableRequest{
    /** Check if the current viewer can update this object. */
    viewerCanUpdate?: boolean | number
    on_CommitComment?: CommitCommentRequest
    on_GistComment?: GistCommentRequest
    on_Issue?: IssueRequest
    on_IssueComment?: IssueCommentRequest
    on_Project?: ProjectRequest
    on_PullRequest?: PullRequestRequest
    on_PullRequestReview?: PullRequestReviewRequest
    on_PullRequestReviewComment?: PullRequestReviewCommentRequest
    on_TeamDiscussion?: TeamDiscussionRequest
    on_TeamDiscussionComment?: TeamDiscussionCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Comments that can be updated. */
export interface UpdatableCommentRequest{
    /** Reasons why the current viewer can not update this comment. */
    viewerCannotUpdateReasons?: boolean | number
    on_CommitComment?: CommitCommentRequest
    on_GistComment?: GistCommentRequest
    on_Issue?: IssueRequest
    on_IssueComment?: IssueCommentRequest
    on_PullRequest?: PullRequestRequest
    on_PullRequestReview?: PullRequestReviewRequest
    on_PullRequestReviewComment?: PullRequestReviewCommentRequest
    on_TeamDiscussion?: TeamDiscussionRequest
    on_TeamDiscussionComment?: TeamDiscussionCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateBranchProtectionRule */
export interface UpdateBranchProtectionRuleInput {
/** The global relay id of the branch protection rule to be updated. */
branchProtectionRuleId: Scalars['ID'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Will new commits pushed to matching branches dismiss pull request review approvals. */
dismissesStaleReviews?: (Scalars['Boolean'] | null),
/** Can admins overwrite branch protection. */
isAdminEnforced?: (Scalars['Boolean'] | null),
/** The glob-like pattern used to determine matching branches. */
pattern?: (Scalars['String'] | null),
/** A list of User, Team or App IDs allowed to push to matching branches. */
pushActorIds?: (Scalars['ID'][] | null),
/** Number of approving reviews required to update matching branches. */
requiredApprovingReviewCount?: (Scalars['Int'] | null),
/** List of required status check contexts that must pass for commits to be accepted to matching branches. */
requiredStatusCheckContexts?: (Scalars['String'][] | null),
/** Are approving reviews required to update matching branches. */
requiresApprovingReviews?: (Scalars['Boolean'] | null),
/** Are reviews from code owners required to update matching branches. */
requiresCodeOwnerReviews?: (Scalars['Boolean'] | null),
/** Are commits required to be signed. */
requiresCommitSignatures?: (Scalars['Boolean'] | null),
/** Are status checks required to update matching branches. */
requiresStatusChecks?: (Scalars['Boolean'] | null),
/** Are branches required to be up to date before merging. */
requiresStrictStatusChecks?: (Scalars['Boolean'] | null),
/** Is pushing to matching branches restricted. */
restrictsPushes?: (Scalars['Boolean'] | null),
/** Is dismissal of pull request reviews restricted. */
restrictsReviewDismissals?: (Scalars['Boolean'] | null),
/** A list of User or Team IDs allowed to dismiss reviews on pull requests targeting matching branches. */
reviewDismissalActorIds?: (Scalars['ID'][] | null)}


/** Autogenerated return type of UpdateBranchProtectionRule */
export interface UpdateBranchProtectionRulePayloadRequest{
    /** The newly created BranchProtectionRule. */
    branchProtectionRule?: BranchProtectionRuleRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateCheckRun */
export interface UpdateCheckRunInput {
/** Possible further actions the integrator can perform, which a user may trigger. */
actions?: (CheckRunAction[] | null),
/** The node of the check. */
checkRunId: Scalars['ID'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The time that the check run finished. */
completedAt?: (Scalars['DateTime'] | null),
/** The final conclusion of the check. */
conclusion?: (CheckConclusionState | null),
/** The URL of the integrator's site that has the full details of the check. */
detailsUrl?: (Scalars['URI'] | null),
/** A reference for the run on the integrator's system. */
externalId?: (Scalars['String'] | null),
/** The name of the check. */
name?: (Scalars['String'] | null),
/** Descriptive details about the run. */
output?: (CheckRunOutput | null),
/** The node ID of the repository. */
repositoryId: Scalars['ID'],
/** The time that the check run began. */
startedAt?: (Scalars['DateTime'] | null),
/** The current status. */
status?: (RequestableCheckStatusState | null)}


/** Autogenerated return type of UpdateCheckRun */
export interface UpdateCheckRunPayloadRequest{
    /** The updated check run. */
    checkRun?: CheckRunRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateCheckSuitePreferences */
export interface UpdateCheckSuitePreferencesInput {
/** The check suite preferences to modify. */
autoTriggerPreferences: CheckSuiteAutoTriggerPreference[],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the repository. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of UpdateCheckSuitePreferences */
export interface UpdateCheckSuitePreferencesPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated repository. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseActionExecutionCapabilitySetting */
export interface UpdateEnterpriseActionExecutionCapabilitySettingInput {
/** The value for the action execution capability setting on the enterprise. */
capability: ActionExecutionCapabilitySetting,
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the members can create repositories setting. */
enterpriseId: Scalars['ID']}


/** Autogenerated return type of UpdateEnterpriseActionExecutionCapabilitySetting */
export interface UpdateEnterpriseActionExecutionCapabilitySettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated action execution capability setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the action execution capability setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseAdministratorRole */
export interface UpdateEnterpriseAdministratorRoleInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the Enterprise which the admin belongs to. */
enterpriseId: Scalars['ID'],
/** The login of a administrator whose role is being changed. */
login: Scalars['String'],
/** The new role for the Enterprise administrator. */
role: EnterpriseAdministratorRole}


/** Autogenerated return type of UpdateEnterpriseAdministratorRole */
export interface UpdateEnterpriseAdministratorRolePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** A message confirming the result of changing the administrator's role. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting */
export interface UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the allow private repository forking setting. */
enterpriseId: Scalars['ID'],
/** The value for the allow private repository forking setting on the enterprise. */
settingValue: EnterpriseEnabledDisabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting */
export interface UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated allow private repository forking setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the allow private repository forking setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting */
export interface UpdateEnterpriseDefaultRepositoryPermissionSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the default repository permission setting. */
enterpriseId: Scalars['ID'],
/** The value for the default repository permission setting on the enterprise. */
settingValue: EnterpriseDefaultRepositoryPermissionSettingValue}


/** Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting */
export interface UpdateEnterpriseDefaultRepositoryPermissionSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated default repository permission setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the default repository permission setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting */
export interface UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the members can change repository visibility setting. */
enterpriseId: Scalars['ID'],
/** The value for the members can change repository visibility setting on the enterprise. */
settingValue: EnterpriseEnabledDisabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting */
export interface UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated members can change repository visibility setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the members can change repository visibility setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting */
export interface UpdateEnterpriseMembersCanCreateRepositoriesSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the members can create repositories setting. */
enterpriseId: Scalars['ID'],
/** Allow members to create internal repositories. Defaults to current value. */
membersCanCreateInternalRepositories?: (Scalars['Boolean'] | null),
/** Allow members to create private repositories. Defaults to current value. */
membersCanCreatePrivateRepositories?: (Scalars['Boolean'] | null),
/** Allow members to create public repositories. Defaults to current value. */
membersCanCreatePublicRepositories?: (Scalars['Boolean'] | null),
/** When false, allow member organizations to set their own repository creation member privileges. */
membersCanCreateRepositoriesPolicyEnabled?: (Scalars['Boolean'] | null),
/**
 * Value for the members can create repositories setting on the enterprise. This
 * or the granular public/private/internal allowed fields (but not both) must be provided.
 */
settingValue?: (EnterpriseMembersCanCreateRepositoriesSettingValue | null)}


/** Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting */
export interface UpdateEnterpriseMembersCanCreateRepositoriesSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated members can create repositories setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the members can create repositories setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting */
export interface UpdateEnterpriseMembersCanDeleteIssuesSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the members can delete issues setting. */
enterpriseId: Scalars['ID'],
/** The value for the members can delete issues setting on the enterprise. */
settingValue: EnterpriseEnabledDisabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting */
export interface UpdateEnterpriseMembersCanDeleteIssuesSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated members can delete issues setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the members can delete issues setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting */
export interface UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the members can delete repositories setting. */
enterpriseId: Scalars['ID'],
/** The value for the members can delete repositories setting on the enterprise. */
settingValue: EnterpriseEnabledDisabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting */
export interface UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated members can delete repositories setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the members can delete repositories setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting */
export interface UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the members can invite collaborators setting. */
enterpriseId: Scalars['ID'],
/** The value for the members can invite collaborators setting on the enterprise. */
settingValue: EnterpriseEnabledDisabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting */
export interface UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated members can invite collaborators setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the members can invite collaborators setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting */
export interface UpdateEnterpriseMembersCanMakePurchasesSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the members can make purchases setting. */
enterpriseId: Scalars['ID'],
/** The value for the members can make purchases setting on the enterprise. */
settingValue: EnterpriseMembersCanMakePurchasesSettingValue}


/** Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting */
export interface UpdateEnterpriseMembersCanMakePurchasesSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated members can make purchases setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the members can make purchases setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting */
export interface UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the members can update protected branches setting. */
enterpriseId: Scalars['ID'],
/** The value for the members can update protected branches setting on the enterprise. */
settingValue: EnterpriseEnabledDisabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting */
export interface UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated members can update protected branches setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the members can update protected branches setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting */
export interface UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the members can view dependency insights setting. */
enterpriseId: Scalars['ID'],
/** The value for the members can view dependency insights setting on the enterprise. */
settingValue: EnterpriseEnabledDisabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting */
export interface UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated members can view dependency insights setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the members can view dependency insights setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseOrganizationProjectsSetting */
export interface UpdateEnterpriseOrganizationProjectsSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the organization projects setting. */
enterpriseId: Scalars['ID'],
/** The value for the organization projects setting on the enterprise. */
settingValue: EnterpriseEnabledDisabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting */
export interface UpdateEnterpriseOrganizationProjectsSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated organization projects setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the organization projects setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseProfile */
export interface UpdateEnterpriseProfileInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The description of the enterprise. */
description?: (Scalars['String'] | null),
/** The Enterprise ID to update. */
enterpriseId: Scalars['ID'],
/** The location of the enterprise. */
location?: (Scalars['String'] | null),
/** The name of the enterprise. */
name?: (Scalars['String'] | null),
/** The URL of the enterprise's website. */
websiteUrl?: (Scalars['String'] | null)}


/** Autogenerated return type of UpdateEnterpriseProfile */
export interface UpdateEnterpriseProfilePayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated enterprise. */
    enterprise?: EnterpriseRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseRepositoryProjectsSetting */
export interface UpdateEnterpriseRepositoryProjectsSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the repository projects setting. */
enterpriseId: Scalars['ID'],
/** The value for the repository projects setting on the enterprise. */
settingValue: EnterpriseEnabledDisabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting */
export interface UpdateEnterpriseRepositoryProjectsSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated repository projects setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the repository projects setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting */
export interface UpdateEnterpriseTeamDiscussionsSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the team discussions setting. */
enterpriseId: Scalars['ID'],
/** The value for the team discussions setting on the enterprise. */
settingValue: EnterpriseEnabledDisabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting */
export interface UpdateEnterpriseTeamDiscussionsSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated team discussions setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the team discussions setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting */
export interface UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the enterprise on which to set the two factor authentication required setting. */
enterpriseId: Scalars['ID'],
/** The value for the two factor authentication required setting on the enterprise. */
settingValue: EnterpriseEnabledSettingValue}


/** Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting */
export interface UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The enterprise with the updated two factor authentication required setting. */
    enterprise?: EnterpriseRequest
    /** A message confirming the result of updating the two factor authentication required setting. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateIpAllowListEnabledSetting */
export interface UpdateIpAllowListEnabledSettingInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the owner on which to set the IP allow list enabled setting. */
ownerId: Scalars['ID'],
/** The value for the IP allow list enabled setting. */
settingValue: IpAllowListEnabledSettingValue}


/** Autogenerated return type of UpdateIpAllowListEnabledSetting */
export interface UpdateIpAllowListEnabledSettingPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The IP allow list owner on which the setting was updated. */
    owner?: IpAllowListOwnerRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateIpAllowListEntry */
export interface UpdateIpAllowListEntryInput {
/** An IP address or range of addresses in CIDR notation. */
allowListValue: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the IP allow list entry to update. */
ipAllowListEntryId: Scalars['ID'],
/** Whether the IP allow list entry is active when an IP allow list is enabled. */
isActive: Scalars['Boolean'],
/** An optional name for the IP allow list entry. */
name?: (Scalars['String'] | null)}


/** Autogenerated return type of UpdateIpAllowListEntry */
export interface UpdateIpAllowListEntryPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The IP allow list entry that was updated. */
    ipAllowListEntry?: IpAllowListEntryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateIssueComment */
export interface UpdateIssueCommentInput {
/** The updated text of the comment. */
body: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the IssueComment to modify. */
id: Scalars['ID']}


/** Autogenerated return type of UpdateIssueComment */
export interface UpdateIssueCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated comment. */
    issueComment?: IssueCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateIssue */
export interface UpdateIssueInput {
/** An array of Node IDs of users for this issue. */
assigneeIds?: (Scalars['ID'][] | null),
/** The body for the issue description. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the Issue to modify. */
id: Scalars['ID'],
/** An array of Node IDs of labels for this issue. */
labelIds?: (Scalars['ID'][] | null),
/** The Node ID of the milestone for this issue. */
milestoneId?: (Scalars['ID'] | null),
/** An array of Node IDs for projects associated with this issue. */
projectIds?: (Scalars['ID'][] | null),
/** The desired issue state. */
state?: (IssueState | null),
/** The title for the issue. */
title?: (Scalars['String'] | null)}


/** Autogenerated return type of UpdateIssue */
export interface UpdateIssuePayloadRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The issue. */
    issue?: IssueRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateLabel */
export interface UpdateLabelInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** A 6 character hex code, without the leading #, identifying the updated color of the label. */
color?: (Scalars['String'] | null),
/** A brief description of the label, such as its purpose. */
description?: (Scalars['String'] | null),
/** The Node ID of the label to be updated. */
id: Scalars['ID'],
/** The updated name of the label. */
name?: (Scalars['String'] | null)}


/** Autogenerated return type of UpdateLabel */
export interface UpdateLabelPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated label. */
    label?: LabelRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateProjectCard */
export interface UpdateProjectCardInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Whether or not the ProjectCard should be archived */
isArchived?: (Scalars['Boolean'] | null),
/** The note of ProjectCard. */
note?: (Scalars['String'] | null),
/** The ProjectCard ID to update. */
projectCardId: Scalars['ID']}


/** Autogenerated return type of UpdateProjectCard */
export interface UpdateProjectCardPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated ProjectCard. */
    projectCard?: ProjectCardRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateProjectColumn */
export interface UpdateProjectColumnInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The name of project column. */
name: Scalars['String'],
/** The ProjectColumn ID to update. */
projectColumnId: Scalars['ID']}


/** Autogenerated return type of UpdateProjectColumn */
export interface UpdateProjectColumnPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated project column. */
    projectColumn?: ProjectColumnRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateProject */
export interface UpdateProjectInput {
/** The description of project. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The name of project. */
name?: (Scalars['String'] | null),
/** The Project ID to update. */
projectId: Scalars['ID'],
/** Whether the project is public or not. */
public?: (Scalars['Boolean'] | null),
/** Whether the project is open or closed. */
state?: (ProjectState | null)}


/** Autogenerated return type of UpdateProject */
export interface UpdateProjectPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated project. */
    project?: ProjectRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdatePullRequest */
export interface UpdatePullRequestInput {
/** An array of Node IDs of users for this pull request. */
assigneeIds?: (Scalars['ID'][] | null),
/**
 * The name of the branch you want your changes pulled into. This should be an existing branch
 * on the current repository.
 */
baseRefName?: (Scalars['String'] | null),
/** The contents of the pull request. */
body?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** An array of Node IDs of labels for this pull request. */
labelIds?: (Scalars['ID'][] | null),
/** Indicates whether maintainers can modify the pull request. */
maintainerCanModify?: (Scalars['Boolean'] | null),
/** The Node ID of the milestone for this pull request. */
milestoneId?: (Scalars['ID'] | null),
/** An array of Node IDs for projects associated with this pull request. */
projectIds?: (Scalars['ID'][] | null),
/** The Node ID of the pull request. */
pullRequestId: Scalars['ID'],
/** The target state of the pull request. */
state?: (PullRequestUpdateState | null),
/** The title of the pull request. */
title?: (Scalars['String'] | null)}


/** Autogenerated return type of UpdatePullRequest */
export interface UpdatePullRequestPayloadRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated pull request. */
    pullRequest?: PullRequestRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdatePullRequestReviewComment */
export interface UpdatePullRequestReviewCommentInput {
/** The text of the comment. */
body: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the comment to modify. */
pullRequestReviewCommentId: Scalars['ID']}


/** Autogenerated return type of UpdatePullRequestReviewComment */
export interface UpdatePullRequestReviewCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated comment. */
    pullRequestReviewComment?: PullRequestReviewCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdatePullRequestReview */
export interface UpdatePullRequestReviewInput {
/** The contents of the pull request review body. */
body: Scalars['String'],
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the pull request review to modify. */
pullRequestReviewId: Scalars['ID']}


/** Autogenerated return type of UpdatePullRequestReview */
export interface UpdatePullRequestReviewPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated pull request review. */
    pullRequestReview?: PullRequestReviewRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateRef */
export interface UpdateRefInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Permit updates of branch Refs that are not fast-forwards? */
force?: (Scalars['Boolean'] | null),
/** The GitObjectID that the Ref shall be updated to target. */
oid: Scalars['GitObjectID'],
/** The Node ID of the Ref to be updated. */
refId: Scalars['ID']}


/** Autogenerated return type of UpdateRef */
export interface UpdateRefPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated Ref. */
    ref?: RefRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateRefs */
export interface UpdateRefsInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** A list of ref updates. */
refUpdates: RefUpdate[],
/** The Node ID of the repository. */
repositoryId: Scalars['ID']}


/** Autogenerated return type of UpdateRefs */
export interface UpdateRefsPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateRepository */
export interface UpdateRepositoryInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** A new description for the repository. Pass an empty string to erase the existing description. */
description?: (Scalars['String'] | null),
/** Indicates if the repository should have the issues feature enabled. */
hasIssuesEnabled?: (Scalars['Boolean'] | null),
/** Indicates if the repository should have the project boards feature enabled. */
hasProjectsEnabled?: (Scalars['Boolean'] | null),
/** Indicates if the repository should have the wiki feature enabled. */
hasWikiEnabled?: (Scalars['Boolean'] | null),
/** The URL for a web page about this repository. Pass an empty string to erase the existing URL. */
homepageUrl?: (Scalars['URI'] | null),
/** The new name of the repository. */
name?: (Scalars['String'] | null),
/** The ID of the repository to update. */
repositoryId: Scalars['ID'],
/**
 * Whether this repository should be marked as a template such that anyone who
 * can access it can create new repositories with the same files and directory structure.
 */
template?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of UpdateRepository */
export interface UpdateRepositoryPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated repository. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateSubscription */
export interface UpdateSubscriptionInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The new state of the subscription. */
state: SubscriptionState,
/** The Node ID of the subscribable object to modify. */
subscribableId: Scalars['ID']}


/** Autogenerated return type of UpdateSubscription */
export interface UpdateSubscriptionPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The input subscribable entity. */
    subscribable?: SubscribableRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateTeamDiscussionComment */
export interface UpdateTeamDiscussionCommentInput {
/** The updated text of the comment. */
body: Scalars['String'],
/** The current version of the body content. */
bodyVersion?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The ID of the comment to modify. */
id: Scalars['ID']}


/** Autogenerated return type of UpdateTeamDiscussionComment */
export interface UpdateTeamDiscussionCommentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated comment. */
    teamDiscussionComment?: TeamDiscussionCommentRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateTeamDiscussion */
export interface UpdateTeamDiscussionInput {
/** The updated text of the discussion. */
body?: (Scalars['String'] | null),
/**
 * The current version of the body content. If provided, this update operation
 * will be rejected if the given version does not match the latest version on the server.
 */
bodyVersion?: (Scalars['String'] | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the discussion to modify. */
id: Scalars['ID'],
/** If provided, sets the pinned state of the updated discussion. */
pinned?: (Scalars['Boolean'] | null),
/** The updated title of the discussion. */
title?: (Scalars['String'] | null)}


/** Autogenerated return type of UpdateTeamDiscussion */
export interface UpdateTeamDiscussionPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The updated discussion. */
    teamDiscussion?: TeamDiscussionRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateTeamReviewAssignment */
export interface UpdateTeamReviewAssignmentInput {
/** The algorithm to use for review assignment */
algorithm?: (TeamReviewAssignmentAlgorithm | null),
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** Turn on or off review assignment */
enabled: Scalars['Boolean'],
/** An array of team member IDs to exclude */
excludedTeamMemberIds?: (Scalars['ID'][] | null),
/** The Node ID of the team to update review assginments of */
id: Scalars['ID'],
/** Notify the entire team of the PR if it is delegated */
notifyTeam?: (Scalars['Boolean'] | null),
/** The number of team members to assign */
teamMemberCount?: (Scalars['Int'] | null)}


/** Autogenerated return type of UpdateTeamReviewAssignment */
export interface UpdateTeamReviewAssignmentPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** The team that was modified */
    team?: TeamRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateTopics */
export interface UpdateTopicsInput {
/** A unique identifier for the client performing the mutation. */
clientMutationId?: (Scalars['String'] | null),
/** The Node ID of the repository. */
repositoryId: Scalars['ID'],
/** An array of topic names. */
topicNames: Scalars['String'][]}


/** Autogenerated return type of UpdateTopics */
export interface UpdateTopicsPayloadRequest{
    /** A unique identifier for the client performing the mutation. */
    clientMutationId?: boolean | number
    /** Names of the provided topics that are not valid. */
    invalidTopicNames?: boolean | number
    /** The updated repository. */
    repository?: RepositoryRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A user is an individual's account on GitHub that owns repositories and can make new content. */
export interface UserRequest{
    /** Determine if this repository owner has any items that can be pinned to their profile. */
    anyPinnableItems?: [{
    /** Filter to only a particular kind of pinnable item. */
    type?: (PinnableItemType | null)}] | boolean | number
    /** A URL pointing to the user's public avatar. */
    avatarUrl?: [{
    /** The size of the resulting square image. */
    size?: (Scalars['Int'] | null)}] | boolean | number
    /** The user's public profile bio. */
    bio?: boolean | number
    /** The user's public profile bio as HTML. */
    bioHTML?: boolean | number
    /** A list of commit comments made by this user. */
    commitComments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},CommitCommentConnectionRequest] | CommitCommentConnectionRequest
    /** The user's public profile company. */
    company?: boolean | number
    /** The user's public profile company as HTML. */
    companyHTML?: boolean | number
    /** The collection of contributions this user has made to different repositories. */
    contributionsCollection?: [{
    /** Only contributions made at this time or later will be counted. If omitted, defaults to a year ago. */
    from?: (Scalars['DateTime'] | null),
    /** The ID of the organization used to filter contributions. */
    organizationID?: (Scalars['ID'] | null),
    /**
     * Only contributions made before and up to and including this time will be
     * counted. If omitted, defaults to the current time.
     */
    to?: (Scalars['DateTime'] | null)},ContributionsCollectionRequest] | ContributionsCollectionRequest
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the primary key from the database. */
    databaseId?: boolean | number
    /** The user's publicly visible profile email. */
    email?: boolean | number
    /** A list of users the given user is followed by. */
    followers?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},FollowerConnectionRequest] | FollowerConnectionRequest
    /** A list of users the given user is following. */
    following?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},FollowingConnectionRequest] | FollowingConnectionRequest
    /** Find gist by repo name. */
    gist?: [{
    /** The gist name to find. */
    name: Scalars['String']},GistRequest]
    /** A list of gist comments made by this user. */
    gistComments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},GistCommentConnectionRequest] | GistCommentConnectionRequest
    /** A list of the Gists the user has created. */
    gists?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for gists returned from the connection */
    orderBy?: (GistOrder | null),
    /** Filters Gists according to privacy. */
    privacy?: (GistPrivacy | null)},GistConnectionRequest] | GistConnectionRequest
    /** The hovercard information for this user in a given context */
    hovercard?: [{
    /** The ID of the subject to get the hovercard in the context of */
    primarySubjectId?: (Scalars['ID'] | null)},HovercardRequest] | HovercardRequest
    id?: boolean | number
    /** Whether or not this user is a participant in the GitHub Security Bug Bounty. */
    isBountyHunter?: boolean | number
    /** Whether or not this user is a participant in the GitHub Campus Experts Program. */
    isCampusExpert?: boolean | number
    /** Whether or not this user is a GitHub Developer Program member. */
    isDeveloperProgramMember?: boolean | number
    /** Whether or not this user is a GitHub employee. */
    isEmployee?: boolean | number
    /** Whether or not the user has marked themselves as for hire. */
    isHireable?: boolean | number
    /** Whether or not this user is a site administrator. */
    isSiteAdmin?: boolean | number
    /** Whether or not this user is the viewing user. */
    isViewer?: boolean | number
    /** A list of issue comments made by this user. */
    issueComments?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},IssueCommentConnectionRequest] | IssueCommentConnectionRequest
    /** A list of issues associated with this user. */
    issues?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Filtering options for issues returned from the connection. */
    filterBy?: (IssueFilters | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** A list of label names to filter the pull requests by. */
    labels?: (Scalars['String'][] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for issues returned from the connection. */
    orderBy?: (IssueOrder | null),
    /** A list of states to filter the issues by. */
    states?: (IssueState[] | null)},IssueConnectionRequest] | IssueConnectionRequest
    /**
     * Showcases a selection of repositories and gists that the profile owner has
     * either curated or that have been selected automatically based on popularity.
     */
    itemShowcase?: ProfileItemShowcaseRequest
    /** The user's public profile location. */
    location?: boolean | number
    /** The username used to login. */
    login?: boolean | number
    /** The user's public profile name. */
    name?: boolean | number
    /** Find an organization by its login that the user belongs to. */
    organization?: [{
    /** The login of the organization to find. */
    login: Scalars['String']},OrganizationRequest]
    /** Verified email addresses that match verified domains for a specified organization the user is a member of. */
    organizationVerifiedDomainEmails?: [{
    /** The login of the organization to match verified domains from. */
    login: Scalars['String']}]
    /** A list of organizations the user belongs to. */
    organizations?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},OrganizationConnectionRequest] | OrganizationConnectionRequest
    /** A list of packages under the owner. */
    packages?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Find packages by their names. */
    names?: ((Scalars['String'] | null)[] | null),
    /** Ordering of the returned packages. */
    orderBy?: (PackageOrder | null),
    /** Find packages in a repository by ID. */
    repositoryId?: (Scalars['ID'] | null)},PackageConnectionRequest] | PackageConnectionRequest
    /** A list of repositories and gists this profile owner can pin to their profile. */
    pinnableItems?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter the types of pinnable items that are returned. */
    types?: (PinnableItemType[] | null)},PinnableItemConnectionRequest] | PinnableItemConnectionRequest
    /** A list of repositories and gists this profile owner has pinned to their profile */
    pinnedItems?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter the types of pinned items that are returned. */
    types?: (PinnableItemType[] | null)},PinnableItemConnectionRequest] | PinnableItemConnectionRequest
    /** Returns how many more items this profile owner can pin to their profile. */
    pinnedItemsRemaining?: boolean | number
    /** Find project by number. */
    project?: [{
    /** The project number to find. */
    number: Scalars['Int']},ProjectRequest]
    /** A list of projects under the owner. */
    projects?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for projects returned from the connection */
    orderBy?: (ProjectOrder | null),
    /** Query to search projects by, currently only searching by name. */
    search?: (Scalars['String'] | null),
    /** A list of states to filter the projects by. */
    states?: (ProjectState[] | null)},ProjectConnectionRequest] | ProjectConnectionRequest
    /** The HTTP path listing user's projects */
    projectsResourcePath?: boolean | number
    /** The HTTP URL listing user's projects */
    projectsUrl?: boolean | number
    /** A list of public keys associated with this user. */
    publicKeys?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null)},PublicKeyConnectionRequest] | PublicKeyConnectionRequest
    /** A list of pull requests associated with this user. */
    pullRequests?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** The base ref name to filter the pull requests by. */
    baseRefName?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** The head ref name to filter the pull requests by. */
    headRefName?: (Scalars['String'] | null),
    /** A list of label names to filter the pull requests by. */
    labels?: (Scalars['String'][] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for pull requests returned from the connection. */
    orderBy?: (IssueOrder | null),
    /** A list of states to filter the pull requests by. */
    states?: (PullRequestState[] | null)},PullRequestConnectionRequest] | PullRequestConnectionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageOwner` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages under the owner.
     */
    registryPackages?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Find registry package by name. */
    name?: (Scalars['String'] | null),
    /** Find registry packages by their names. */
    names?: ((Scalars['String'] | null)[] | null),
    /** Filter registry package by type. */
    packageType?: (RegistryPackageType | null),
    /** Filter registry package by whether it is publicly visible */
    publicOnly?: (Scalars['Boolean'] | null),
    /** Filter registry package by type (string). */
    registryPackageType?: (Scalars['String'] | null),
    /** Find registry packages in a repository. */
    repositoryId?: (Scalars['ID'] | null)},RegistryPackageConnectionRequest] | RegistryPackageConnectionRequest
    /**
     * @deprecated Renaming GitHub Packages fields and objects. Use the `PackageSearch` object instead. Removal on 2020-04-01 UTC.
     * A list of registry packages for a particular search query.
     */
    registryPackagesForQuery?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Filter registry package by type. */
    packageType?: (RegistryPackageType | null),
    /** Find registry package by search query. */
    query?: (Scalars['String'] | null)},RegistryPackageConnectionRequest] | RegistryPackageConnectionRequest
    /** A list of repositories that the user owns. */
    repositories?: [{
    /**
     * Array of viewer's affiliation options for repositories returned from the
     * connection. For example, OWNER will include only repositories that the
     * current viewer owns.
     */
    affiliations?: ((RepositoryAffiliation | null)[] | null),
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** If non-null, filters repositories according to whether they are forks of another repository */
    isFork?: (Scalars['Boolean'] | null),
    /** If non-null, filters repositories according to whether they have been locked */
    isLocked?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for repositories returned from the connection */
    orderBy?: (RepositoryOrder | null),
    /**
     * Array of owner's affiliation options for repositories returned from the
     * connection. For example, OWNER will include only repositories that the
     * organization or user being viewed owns.
     */
    ownerAffiliations?: ((RepositoryAffiliation | null)[] | null),
    /** If non-null, filters repositories according to privacy */
    privacy?: (RepositoryPrivacy | null)},RepositoryConnectionRequest] | RepositoryConnectionRequest
    /** A list of repositories that the user recently contributed to. */
    repositoriesContributedTo?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /**
     * If non-null, include only the specified types of contributions. The
     * GitHub.com UI uses [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY]
     */
    contributionTypes?: ((RepositoryContributionType | null)[] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** If true, include user repositories */
    includeUserRepositories?: (Scalars['Boolean'] | null),
    /** If non-null, filters repositories according to whether they have been locked */
    isLocked?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for repositories returned from the connection */
    orderBy?: (RepositoryOrder | null),
    /** If non-null, filters repositories according to privacy */
    privacy?: (RepositoryPrivacy | null)},RepositoryConnectionRequest] | RepositoryConnectionRequest
    /** Find Repository. */
    repository?: [{
    /** Name of Repository to find. */
    name: Scalars['String']},RepositoryRequest]
    /** The HTTP path for this user */
    resourcePath?: boolean | number
    /** Replies this user has saved */
    savedReplies?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** The field to order saved replies by. */
    orderBy?: (SavedReplyOrder | null)},SavedReplyConnectionRequest] | SavedReplyConnectionRequest
    /** The GitHub Sponsors listing for this user. */
    sponsorsListing?: SponsorsListingRequest
    /** This object's sponsorships as the maintainer. */
    sponsorshipsAsMaintainer?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Whether or not to include private sponsorships in the result set */
    includePrivate?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /**
     * Ordering options for sponsorships returned from this connection. If left
     * blank, the sponsorships will be ordered based on relevancy to the viewer.
     */
    orderBy?: (SponsorshipOrder | null)},SponsorshipConnectionRequest] | SponsorshipConnectionRequest
    /** This object's sponsorships as the sponsor. */
    sponsorshipsAsSponsor?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /**
     * Ordering options for sponsorships returned from this connection. If left
     * blank, the sponsorships will be ordered based on relevancy to the viewer.
     */
    orderBy?: (SponsorshipOrder | null)},SponsorshipConnectionRequest] | SponsorshipConnectionRequest
    /** Repositories the user has starred. */
    starredRepositories?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Order for connection */
    orderBy?: (StarOrder | null),
    /** Filters starred repositories to only return repositories owned by the viewer. */
    ownedByViewer?: (Scalars['Boolean'] | null)},StarredRepositoryConnectionRequest] | StarredRepositoryConnectionRequest
    /** The user's description of what they're currently doing. */
    status?: UserStatusRequest
    /** Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created */
    topRepositories?: [{
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for repositories returned from the connection */
    orderBy: RepositoryOrder,
    /** How far back in time to fetch contributed repositories */
    since?: (Scalars['DateTime'] | null)},RepositoryConnectionRequest]
    /** The user's Twitter username. */
    twitterUsername?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The HTTP URL for this user */
    url?: boolean | number
    /** Can the viewer pin repositories and gists to the profile? */
    viewerCanChangePinnedItems?: boolean | number
    /** Can the current viewer create new projects on this owner. */
    viewerCanCreateProjects?: boolean | number
    /** Whether or not the viewer is able to follow the user. */
    viewerCanFollow?: boolean | number
    /** Whether or not this user is followed by the viewer. */
    viewerIsFollowing?: boolean | number
    /** A list of repositories the given user is watching. */
    watching?: [{
    /**
     * Affiliation options for repositories returned from the connection. If none
     * specified, the results will include repositories for which the current
     * viewer is an owner or collaborator, or member.
     */
    affiliations?: ((RepositoryAffiliation | null)[] | null),
    /** Returns the elements in the list that come after the specified cursor. */
    after?: (Scalars['String'] | null),
    /** Returns the elements in the list that come before the specified cursor. */
    before?: (Scalars['String'] | null),
    /** Returns the first _n_ elements from the list. */
    first?: (Scalars['Int'] | null),
    /** If non-null, filters repositories according to whether they have been locked */
    isLocked?: (Scalars['Boolean'] | null),
    /** Returns the last _n_ elements from the list. */
    last?: (Scalars['Int'] | null),
    /** Ordering options for repositories returned from the connection */
    orderBy?: (RepositoryOrder | null),
    /**
     * Array of owner's affiliation options for repositories returned from the
     * connection. For example, OWNER will include only repositories that the
     * organization or user being viewed owns.
     */
    ownerAffiliations?: ((RepositoryAffiliation | null)[] | null),
    /** If non-null, filters repositories according to privacy */
    privacy?: (RepositoryPrivacy | null)},RepositoryConnectionRequest] | RepositoryConnectionRequest
    /** A URL pointing to the user's public website/blog. */
    websiteUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a 'user_blocked' event on a given user. */
export interface UserBlockedEventRequest{
    /** Identifies the actor who performed the event. */
    actor?: ActorRequest
    /** Number of days that the user was blocked for. */
    blockDuration?: boolean | number
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    id?: boolean | number
    /** The user who was blocked. */
    subject?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for User. */
export interface UserConnectionRequest{
    /** A list of edges. */
    edges?: UserEdgeRequest
    /** A list of nodes. */
    nodes?: UserRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edit on user content */
export interface UserContentEditRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** Identifies the date and time when the object was deleted. */
    deletedAt?: boolean | number
    /** The actor who deleted this content */
    deletedBy?: ActorRequest
    /** A summary of the changes for this edit */
    diff?: boolean | number
    /** When this content was edited */
    editedAt?: boolean | number
    /** The actor who edited this content */
    editor?: ActorRequest
    id?: boolean | number
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A list of edits to content. */
export interface UserContentEditConnectionRequest{
    /** A list of edges. */
    edges?: UserContentEditEdgeRequest
    /** A list of nodes. */
    nodes?: UserContentEditRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface UserContentEditEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: UserContentEditRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a user. */
export interface UserEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The user's description of what they're currently doing. */
export interface UserStatusRequest{
    /** Identifies the date and time when the object was created. */
    createdAt?: boolean | number
    /** An emoji summarizing the user's status. */
    emoji?: boolean | number
    /** The status emoji as HTML. */
    emojiHTML?: boolean | number
    /** If set, the status will not be shown after this date. */
    expiresAt?: boolean | number
    /** ID of the object. */
    id?: boolean | number
    /** Whether this status indicates the user is not fully available on GitHub. */
    indicatesLimitedAvailability?: boolean | number
    /** A brief message describing what the user is doing. */
    message?: boolean | number
    /** The organization whose members can see this status. If null, this status is publicly visible. */
    organization?: OrganizationRequest
    /** Identifies the date and time when the object was last updated. */
    updatedAt?: boolean | number
    /** The user who has this status. */
    user?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for UserStatus. */
export interface UserStatusConnectionRequest{
    /** A list of edges. */
    edges?: UserStatusEdgeRequest
    /** A list of nodes. */
    nodes?: UserStatusRequest
    /** Information to aid in pagination. */
    pageInfo?: PageInfoRequest
    /** Identifies the total count of items in the connection. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An edge in a connection. */
export interface UserStatusEdgeRequest{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of the edge. */
    node?: UserStatusRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Ordering options for user status connections. */
export interface UserStatusOrder {
/** The ordering direction. */
direction: OrderDirection,
/** The field to order user statuses by. */
field: UserStatusOrderField}


/** A hovercard context with a message describing how the viewer is related. */
export interface ViewerHovercardContextRequest{
    /** A string describing this context */
    message?: boolean | number
    /** An octicon to accompany this context */
    octicon?: boolean | number
    /** Identifies the user who is related to this context. */
    viewer?: UserRequest
    __typename?: boolean | number
    __scalar?: boolean | number
}


const AcceptEnterpriseAdministratorInvitationPayload_possibleTypes: string[] = ['AcceptEnterpriseAdministratorInvitationPayload']
export const isAcceptEnterpriseAdministratorInvitationPayload = (obj?: { __typename?: any } | null): obj is AcceptEnterpriseAdministratorInvitationPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptEnterpriseAdministratorInvitationPayload"')
  return AcceptEnterpriseAdministratorInvitationPayload_possibleTypes.includes(obj.__typename)
}



const AcceptTopicSuggestionPayload_possibleTypes: string[] = ['AcceptTopicSuggestionPayload']
export const isAcceptTopicSuggestionPayload = (obj?: { __typename?: any } | null): obj is AcceptTopicSuggestionPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptTopicSuggestionPayload"')
  return AcceptTopicSuggestionPayload_possibleTypes.includes(obj.__typename)
}



const Actor_possibleTypes: string[] = ['Bot','EnterpriseUserAccount','Mannequin','Organization','User']
export const isActor = (obj?: { __typename?: any } | null): obj is Actor => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isActor"')
  return Actor_possibleTypes.includes(obj.__typename)
}



const ActorLocation_possibleTypes: string[] = ['ActorLocation']
export const isActorLocation = (obj?: { __typename?: any } | null): obj is ActorLocation => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isActorLocation"')
  return ActorLocation_possibleTypes.includes(obj.__typename)
}



const AddAssigneesToAssignablePayload_possibleTypes: string[] = ['AddAssigneesToAssignablePayload']
export const isAddAssigneesToAssignablePayload = (obj?: { __typename?: any } | null): obj is AddAssigneesToAssignablePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddAssigneesToAssignablePayload"')
  return AddAssigneesToAssignablePayload_possibleTypes.includes(obj.__typename)
}



const AddCommentPayload_possibleTypes: string[] = ['AddCommentPayload']
export const isAddCommentPayload = (obj?: { __typename?: any } | null): obj is AddCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddCommentPayload"')
  return AddCommentPayload_possibleTypes.includes(obj.__typename)
}



const AddLabelsToLabelablePayload_possibleTypes: string[] = ['AddLabelsToLabelablePayload']
export const isAddLabelsToLabelablePayload = (obj?: { __typename?: any } | null): obj is AddLabelsToLabelablePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddLabelsToLabelablePayload"')
  return AddLabelsToLabelablePayload_possibleTypes.includes(obj.__typename)
}



const AddProjectCardPayload_possibleTypes: string[] = ['AddProjectCardPayload']
export const isAddProjectCardPayload = (obj?: { __typename?: any } | null): obj is AddProjectCardPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddProjectCardPayload"')
  return AddProjectCardPayload_possibleTypes.includes(obj.__typename)
}



const AddProjectColumnPayload_possibleTypes: string[] = ['AddProjectColumnPayload']
export const isAddProjectColumnPayload = (obj?: { __typename?: any } | null): obj is AddProjectColumnPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddProjectColumnPayload"')
  return AddProjectColumnPayload_possibleTypes.includes(obj.__typename)
}



const AddPullRequestReviewCommentPayload_possibleTypes: string[] = ['AddPullRequestReviewCommentPayload']
export const isAddPullRequestReviewCommentPayload = (obj?: { __typename?: any } | null): obj is AddPullRequestReviewCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddPullRequestReviewCommentPayload"')
  return AddPullRequestReviewCommentPayload_possibleTypes.includes(obj.__typename)
}



const AddPullRequestReviewPayload_possibleTypes: string[] = ['AddPullRequestReviewPayload']
export const isAddPullRequestReviewPayload = (obj?: { __typename?: any } | null): obj is AddPullRequestReviewPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddPullRequestReviewPayload"')
  return AddPullRequestReviewPayload_possibleTypes.includes(obj.__typename)
}



const AddPullRequestReviewThreadPayload_possibleTypes: string[] = ['AddPullRequestReviewThreadPayload']
export const isAddPullRequestReviewThreadPayload = (obj?: { __typename?: any } | null): obj is AddPullRequestReviewThreadPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddPullRequestReviewThreadPayload"')
  return AddPullRequestReviewThreadPayload_possibleTypes.includes(obj.__typename)
}



const AddReactionPayload_possibleTypes: string[] = ['AddReactionPayload']
export const isAddReactionPayload = (obj?: { __typename?: any } | null): obj is AddReactionPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddReactionPayload"')
  return AddReactionPayload_possibleTypes.includes(obj.__typename)
}



const AddStarPayload_possibleTypes: string[] = ['AddStarPayload']
export const isAddStarPayload = (obj?: { __typename?: any } | null): obj is AddStarPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddStarPayload"')
  return AddStarPayload_possibleTypes.includes(obj.__typename)
}



const AddedToProjectEvent_possibleTypes: string[] = ['AddedToProjectEvent']
export const isAddedToProjectEvent = (obj?: { __typename?: any } | null): obj is AddedToProjectEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAddedToProjectEvent"')
  return AddedToProjectEvent_possibleTypes.includes(obj.__typename)
}



const App_possibleTypes: string[] = ['App']
export const isApp = (obj?: { __typename?: any } | null): obj is App => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isApp"')
  return App_possibleTypes.includes(obj.__typename)
}



const ArchiveRepositoryPayload_possibleTypes: string[] = ['ArchiveRepositoryPayload']
export const isArchiveRepositoryPayload = (obj?: { __typename?: any } | null): obj is ArchiveRepositoryPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isArchiveRepositoryPayload"')
  return ArchiveRepositoryPayload_possibleTypes.includes(obj.__typename)
}



const Assignable_possibleTypes: string[] = ['Issue','PullRequest']
export const isAssignable = (obj?: { __typename?: any } | null): obj is Assignable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAssignable"')
  return Assignable_possibleTypes.includes(obj.__typename)
}



const AssignedEvent_possibleTypes: string[] = ['AssignedEvent']
export const isAssignedEvent = (obj?: { __typename?: any } | null): obj is AssignedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAssignedEvent"')
  return AssignedEvent_possibleTypes.includes(obj.__typename)
}



const Assignee_possibleTypes: string[] = ['Bot','Mannequin','Organization','User']
export const isAssignee = (obj?: { __typename?: any } | null): obj is Assignee => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAssignee"')
  return Assignee_possibleTypes.includes(obj.__typename)
}



const AuditEntry_possibleTypes: string[] = ['MembersCanDeleteReposClearAuditEntry','MembersCanDeleteReposDisableAuditEntry','MembersCanDeleteReposEnableAuditEntry','OauthApplicationCreateAuditEntry','OrgAddBillingManagerAuditEntry','OrgAddMemberAuditEntry','OrgBlockUserAuditEntry','OrgConfigDisableCollaboratorsOnlyAuditEntry','OrgConfigEnableCollaboratorsOnlyAuditEntry','OrgCreateAuditEntry','OrgDisableOauthAppRestrictionsAuditEntry','OrgDisableSamlAuditEntry','OrgDisableTwoFactorRequirementAuditEntry','OrgEnableOauthAppRestrictionsAuditEntry','OrgEnableSamlAuditEntry','OrgEnableTwoFactorRequirementAuditEntry','OrgInviteMemberAuditEntry','OrgInviteToBusinessAuditEntry','OrgOauthAppAccessApprovedAuditEntry','OrgOauthAppAccessDeniedAuditEntry','OrgOauthAppAccessRequestedAuditEntry','OrgRemoveBillingManagerAuditEntry','OrgRemoveMemberAuditEntry','OrgRemoveOutsideCollaboratorAuditEntry','OrgRestoreMemberAuditEntry','OrgUnblockUserAuditEntry','OrgUpdateDefaultRepositoryPermissionAuditEntry','OrgUpdateMemberAuditEntry','OrgUpdateMemberRepositoryCreationPermissionAuditEntry','OrgUpdateMemberRepositoryInvitationPermissionAuditEntry','PrivateRepositoryForkingDisableAuditEntry','PrivateRepositoryForkingEnableAuditEntry','RepoAccessAuditEntry','RepoAddMemberAuditEntry','RepoAddTopicAuditEntry','RepoArchivedAuditEntry','RepoChangeMergeSettingAuditEntry','RepoConfigDisableAnonymousGitAccessAuditEntry','RepoConfigDisableCollaboratorsOnlyAuditEntry','RepoConfigDisableContributorsOnlyAuditEntry','RepoConfigDisableSockpuppetDisallowedAuditEntry','RepoConfigEnableAnonymousGitAccessAuditEntry','RepoConfigEnableCollaboratorsOnlyAuditEntry','RepoConfigEnableContributorsOnlyAuditEntry','RepoConfigEnableSockpuppetDisallowedAuditEntry','RepoConfigLockAnonymousGitAccessAuditEntry','RepoConfigUnlockAnonymousGitAccessAuditEntry','RepoCreateAuditEntry','RepoDestroyAuditEntry','RepoRemoveMemberAuditEntry','RepoRemoveTopicAuditEntry','RepositoryVisibilityChangeDisableAuditEntry','RepositoryVisibilityChangeEnableAuditEntry','TeamAddMemberAuditEntry','TeamAddRepositoryAuditEntry','TeamChangeParentTeamAuditEntry','TeamRemoveMemberAuditEntry','TeamRemoveRepositoryAuditEntry']
export const isAuditEntry = (obj?: { __typename?: any } | null): obj is AuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAuditEntry"')
  return AuditEntry_possibleTypes.includes(obj.__typename)
}



const AuditEntryActor_possibleTypes: string[] = ['Bot','Organization','User']
export const isAuditEntryActor = (obj?: { __typename?: any } | null): obj is AuditEntryActor => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAuditEntryActor"')
  return AuditEntryActor_possibleTypes.includes(obj.__typename)
}



const AutomaticBaseChangeFailedEvent_possibleTypes: string[] = ['AutomaticBaseChangeFailedEvent']
export const isAutomaticBaseChangeFailedEvent = (obj?: { __typename?: any } | null): obj is AutomaticBaseChangeFailedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAutomaticBaseChangeFailedEvent"')
  return AutomaticBaseChangeFailedEvent_possibleTypes.includes(obj.__typename)
}



const AutomaticBaseChangeSucceededEvent_possibleTypes: string[] = ['AutomaticBaseChangeSucceededEvent']
export const isAutomaticBaseChangeSucceededEvent = (obj?: { __typename?: any } | null): obj is AutomaticBaseChangeSucceededEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isAutomaticBaseChangeSucceededEvent"')
  return AutomaticBaseChangeSucceededEvent_possibleTypes.includes(obj.__typename)
}



const BaseRefChangedEvent_possibleTypes: string[] = ['BaseRefChangedEvent']
export const isBaseRefChangedEvent = (obj?: { __typename?: any } | null): obj is BaseRefChangedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBaseRefChangedEvent"')
  return BaseRefChangedEvent_possibleTypes.includes(obj.__typename)
}



const BaseRefForcePushedEvent_possibleTypes: string[] = ['BaseRefForcePushedEvent']
export const isBaseRefForcePushedEvent = (obj?: { __typename?: any } | null): obj is BaseRefForcePushedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBaseRefForcePushedEvent"')
  return BaseRefForcePushedEvent_possibleTypes.includes(obj.__typename)
}



const Blame_possibleTypes: string[] = ['Blame']
export const isBlame = (obj?: { __typename?: any } | null): obj is Blame => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBlame"')
  return Blame_possibleTypes.includes(obj.__typename)
}



const BlameRange_possibleTypes: string[] = ['BlameRange']
export const isBlameRange = (obj?: { __typename?: any } | null): obj is BlameRange => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBlameRange"')
  return BlameRange_possibleTypes.includes(obj.__typename)
}



const Blob_possibleTypes: string[] = ['Blob']
export const isBlob = (obj?: { __typename?: any } | null): obj is Blob => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBlob"')
  return Blob_possibleTypes.includes(obj.__typename)
}



const Bot_possibleTypes: string[] = ['Bot']
export const isBot = (obj?: { __typename?: any } | null): obj is Bot => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBot"')
  return Bot_possibleTypes.includes(obj.__typename)
}



const BranchProtectionRule_possibleTypes: string[] = ['BranchProtectionRule']
export const isBranchProtectionRule = (obj?: { __typename?: any } | null): obj is BranchProtectionRule => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBranchProtectionRule"')
  return BranchProtectionRule_possibleTypes.includes(obj.__typename)
}



const BranchProtectionRuleConflict_possibleTypes: string[] = ['BranchProtectionRuleConflict']
export const isBranchProtectionRuleConflict = (obj?: { __typename?: any } | null): obj is BranchProtectionRuleConflict => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBranchProtectionRuleConflict"')
  return BranchProtectionRuleConflict_possibleTypes.includes(obj.__typename)
}



const BranchProtectionRuleConflictConnection_possibleTypes: string[] = ['BranchProtectionRuleConflictConnection']
export const isBranchProtectionRuleConflictConnection = (obj?: { __typename?: any } | null): obj is BranchProtectionRuleConflictConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBranchProtectionRuleConflictConnection"')
  return BranchProtectionRuleConflictConnection_possibleTypes.includes(obj.__typename)
}



const BranchProtectionRuleConflictEdge_possibleTypes: string[] = ['BranchProtectionRuleConflictEdge']
export const isBranchProtectionRuleConflictEdge = (obj?: { __typename?: any } | null): obj is BranchProtectionRuleConflictEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBranchProtectionRuleConflictEdge"')
  return BranchProtectionRuleConflictEdge_possibleTypes.includes(obj.__typename)
}



const BranchProtectionRuleConnection_possibleTypes: string[] = ['BranchProtectionRuleConnection']
export const isBranchProtectionRuleConnection = (obj?: { __typename?: any } | null): obj is BranchProtectionRuleConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBranchProtectionRuleConnection"')
  return BranchProtectionRuleConnection_possibleTypes.includes(obj.__typename)
}



const BranchProtectionRuleEdge_possibleTypes: string[] = ['BranchProtectionRuleEdge']
export const isBranchProtectionRuleEdge = (obj?: { __typename?: any } | null): obj is BranchProtectionRuleEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isBranchProtectionRuleEdge"')
  return BranchProtectionRuleEdge_possibleTypes.includes(obj.__typename)
}



const CancelEnterpriseAdminInvitationPayload_possibleTypes: string[] = ['CancelEnterpriseAdminInvitationPayload']
export const isCancelEnterpriseAdminInvitationPayload = (obj?: { __typename?: any } | null): obj is CancelEnterpriseAdminInvitationPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCancelEnterpriseAdminInvitationPayload"')
  return CancelEnterpriseAdminInvitationPayload_possibleTypes.includes(obj.__typename)
}



const ChangeUserStatusPayload_possibleTypes: string[] = ['ChangeUserStatusPayload']
export const isChangeUserStatusPayload = (obj?: { __typename?: any } | null): obj is ChangeUserStatusPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isChangeUserStatusPayload"')
  return ChangeUserStatusPayload_possibleTypes.includes(obj.__typename)
}



const CheckAnnotation_possibleTypes: string[] = ['CheckAnnotation']
export const isCheckAnnotation = (obj?: { __typename?: any } | null): obj is CheckAnnotation => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckAnnotation"')
  return CheckAnnotation_possibleTypes.includes(obj.__typename)
}



const CheckAnnotationConnection_possibleTypes: string[] = ['CheckAnnotationConnection']
export const isCheckAnnotationConnection = (obj?: { __typename?: any } | null): obj is CheckAnnotationConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckAnnotationConnection"')
  return CheckAnnotationConnection_possibleTypes.includes(obj.__typename)
}



const CheckAnnotationEdge_possibleTypes: string[] = ['CheckAnnotationEdge']
export const isCheckAnnotationEdge = (obj?: { __typename?: any } | null): obj is CheckAnnotationEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckAnnotationEdge"')
  return CheckAnnotationEdge_possibleTypes.includes(obj.__typename)
}



const CheckAnnotationPosition_possibleTypes: string[] = ['CheckAnnotationPosition']
export const isCheckAnnotationPosition = (obj?: { __typename?: any } | null): obj is CheckAnnotationPosition => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckAnnotationPosition"')
  return CheckAnnotationPosition_possibleTypes.includes(obj.__typename)
}



const CheckAnnotationSpan_possibleTypes: string[] = ['CheckAnnotationSpan']
export const isCheckAnnotationSpan = (obj?: { __typename?: any } | null): obj is CheckAnnotationSpan => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckAnnotationSpan"')
  return CheckAnnotationSpan_possibleTypes.includes(obj.__typename)
}



const CheckRun_possibleTypes: string[] = ['CheckRun']
export const isCheckRun = (obj?: { __typename?: any } | null): obj is CheckRun => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckRun"')
  return CheckRun_possibleTypes.includes(obj.__typename)
}



const CheckRunConnection_possibleTypes: string[] = ['CheckRunConnection']
export const isCheckRunConnection = (obj?: { __typename?: any } | null): obj is CheckRunConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckRunConnection"')
  return CheckRunConnection_possibleTypes.includes(obj.__typename)
}



const CheckRunEdge_possibleTypes: string[] = ['CheckRunEdge']
export const isCheckRunEdge = (obj?: { __typename?: any } | null): obj is CheckRunEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckRunEdge"')
  return CheckRunEdge_possibleTypes.includes(obj.__typename)
}



const CheckSuite_possibleTypes: string[] = ['CheckSuite']
export const isCheckSuite = (obj?: { __typename?: any } | null): obj is CheckSuite => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckSuite"')
  return CheckSuite_possibleTypes.includes(obj.__typename)
}



const CheckSuiteConnection_possibleTypes: string[] = ['CheckSuiteConnection']
export const isCheckSuiteConnection = (obj?: { __typename?: any } | null): obj is CheckSuiteConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckSuiteConnection"')
  return CheckSuiteConnection_possibleTypes.includes(obj.__typename)
}



const CheckSuiteEdge_possibleTypes: string[] = ['CheckSuiteEdge']
export const isCheckSuiteEdge = (obj?: { __typename?: any } | null): obj is CheckSuiteEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCheckSuiteEdge"')
  return CheckSuiteEdge_possibleTypes.includes(obj.__typename)
}



const ClearLabelsFromLabelablePayload_possibleTypes: string[] = ['ClearLabelsFromLabelablePayload']
export const isClearLabelsFromLabelablePayload = (obj?: { __typename?: any } | null): obj is ClearLabelsFromLabelablePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isClearLabelsFromLabelablePayload"')
  return ClearLabelsFromLabelablePayload_possibleTypes.includes(obj.__typename)
}



const CloneProjectPayload_possibleTypes: string[] = ['CloneProjectPayload']
export const isCloneProjectPayload = (obj?: { __typename?: any } | null): obj is CloneProjectPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCloneProjectPayload"')
  return CloneProjectPayload_possibleTypes.includes(obj.__typename)
}



const CloneTemplateRepositoryPayload_possibleTypes: string[] = ['CloneTemplateRepositoryPayload']
export const isCloneTemplateRepositoryPayload = (obj?: { __typename?: any } | null): obj is CloneTemplateRepositoryPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCloneTemplateRepositoryPayload"')
  return CloneTemplateRepositoryPayload_possibleTypes.includes(obj.__typename)
}



const Closable_possibleTypes: string[] = ['Issue','Milestone','Project','PullRequest']
export const isClosable = (obj?: { __typename?: any } | null): obj is Closable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isClosable"')
  return Closable_possibleTypes.includes(obj.__typename)
}



const CloseIssuePayload_possibleTypes: string[] = ['CloseIssuePayload']
export const isCloseIssuePayload = (obj?: { __typename?: any } | null): obj is CloseIssuePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCloseIssuePayload"')
  return CloseIssuePayload_possibleTypes.includes(obj.__typename)
}



const ClosePullRequestPayload_possibleTypes: string[] = ['ClosePullRequestPayload']
export const isClosePullRequestPayload = (obj?: { __typename?: any } | null): obj is ClosePullRequestPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isClosePullRequestPayload"')
  return ClosePullRequestPayload_possibleTypes.includes(obj.__typename)
}



const ClosedEvent_possibleTypes: string[] = ['ClosedEvent']
export const isClosedEvent = (obj?: { __typename?: any } | null): obj is ClosedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isClosedEvent"')
  return ClosedEvent_possibleTypes.includes(obj.__typename)
}



const Closer_possibleTypes: string[] = ['Commit','PullRequest']
export const isCloser = (obj?: { __typename?: any } | null): obj is Closer => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCloser"')
  return Closer_possibleTypes.includes(obj.__typename)
}



const CodeOfConduct_possibleTypes: string[] = ['CodeOfConduct']
export const isCodeOfConduct = (obj?: { __typename?: any } | null): obj is CodeOfConduct => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCodeOfConduct"')
  return CodeOfConduct_possibleTypes.includes(obj.__typename)
}



const Comment_possibleTypes: string[] = ['CommitComment','GistComment','Issue','IssueComment','PullRequest','PullRequestReview','PullRequestReviewComment','TeamDiscussion','TeamDiscussionComment']
export const isComment = (obj?: { __typename?: any } | null): obj is Comment => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isComment"')
  return Comment_possibleTypes.includes(obj.__typename)
}



const CommentDeletedEvent_possibleTypes: string[] = ['CommentDeletedEvent']
export const isCommentDeletedEvent = (obj?: { __typename?: any } | null): obj is CommentDeletedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCommentDeletedEvent"')
  return CommentDeletedEvent_possibleTypes.includes(obj.__typename)
}



const Commit_possibleTypes: string[] = ['Commit']
export const isCommit = (obj?: { __typename?: any } | null): obj is Commit => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCommit"')
  return Commit_possibleTypes.includes(obj.__typename)
}



const CommitComment_possibleTypes: string[] = ['CommitComment']
export const isCommitComment = (obj?: { __typename?: any } | null): obj is CommitComment => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCommitComment"')
  return CommitComment_possibleTypes.includes(obj.__typename)
}



const CommitCommentConnection_possibleTypes: string[] = ['CommitCommentConnection']
export const isCommitCommentConnection = (obj?: { __typename?: any } | null): obj is CommitCommentConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCommitCommentConnection"')
  return CommitCommentConnection_possibleTypes.includes(obj.__typename)
}



const CommitCommentEdge_possibleTypes: string[] = ['CommitCommentEdge']
export const isCommitCommentEdge = (obj?: { __typename?: any } | null): obj is CommitCommentEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCommitCommentEdge"')
  return CommitCommentEdge_possibleTypes.includes(obj.__typename)
}



const CommitCommentThread_possibleTypes: string[] = ['CommitCommentThread']
export const isCommitCommentThread = (obj?: { __typename?: any } | null): obj is CommitCommentThread => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCommitCommentThread"')
  return CommitCommentThread_possibleTypes.includes(obj.__typename)
}



const CommitConnection_possibleTypes: string[] = ['CommitConnection']
export const isCommitConnection = (obj?: { __typename?: any } | null): obj is CommitConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCommitConnection"')
  return CommitConnection_possibleTypes.includes(obj.__typename)
}



const CommitContributionsByRepository_possibleTypes: string[] = ['CommitContributionsByRepository']
export const isCommitContributionsByRepository = (obj?: { __typename?: any } | null): obj is CommitContributionsByRepository => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCommitContributionsByRepository"')
  return CommitContributionsByRepository_possibleTypes.includes(obj.__typename)
}



const CommitEdge_possibleTypes: string[] = ['CommitEdge']
export const isCommitEdge = (obj?: { __typename?: any } | null): obj is CommitEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCommitEdge"')
  return CommitEdge_possibleTypes.includes(obj.__typename)
}



const CommitHistoryConnection_possibleTypes: string[] = ['CommitHistoryConnection']
export const isCommitHistoryConnection = (obj?: { __typename?: any } | null): obj is CommitHistoryConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCommitHistoryConnection"')
  return CommitHistoryConnection_possibleTypes.includes(obj.__typename)
}



const ConnectedEvent_possibleTypes: string[] = ['ConnectedEvent']
export const isConnectedEvent = (obj?: { __typename?: any } | null): obj is ConnectedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isConnectedEvent"')
  return ConnectedEvent_possibleTypes.includes(obj.__typename)
}



const ContentAttachment_possibleTypes: string[] = ['ContentAttachment']
export const isContentAttachment = (obj?: { __typename?: any } | null): obj is ContentAttachment => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isContentAttachment"')
  return ContentAttachment_possibleTypes.includes(obj.__typename)
}



const ContentReference_possibleTypes: string[] = ['ContentReference']
export const isContentReference = (obj?: { __typename?: any } | null): obj is ContentReference => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isContentReference"')
  return ContentReference_possibleTypes.includes(obj.__typename)
}



const Contribution_possibleTypes: string[] = ['CreatedCommitContribution','CreatedIssueContribution','CreatedPullRequestContribution','CreatedPullRequestReviewContribution','CreatedRepositoryContribution','JoinedGitHubContribution','RestrictedContribution']
export const isContribution = (obj?: { __typename?: any } | null): obj is Contribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isContribution"')
  return Contribution_possibleTypes.includes(obj.__typename)
}



const ContributionCalendar_possibleTypes: string[] = ['ContributionCalendar']
export const isContributionCalendar = (obj?: { __typename?: any } | null): obj is ContributionCalendar => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isContributionCalendar"')
  return ContributionCalendar_possibleTypes.includes(obj.__typename)
}



const ContributionCalendarDay_possibleTypes: string[] = ['ContributionCalendarDay']
export const isContributionCalendarDay = (obj?: { __typename?: any } | null): obj is ContributionCalendarDay => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isContributionCalendarDay"')
  return ContributionCalendarDay_possibleTypes.includes(obj.__typename)
}



const ContributionCalendarMonth_possibleTypes: string[] = ['ContributionCalendarMonth']
export const isContributionCalendarMonth = (obj?: { __typename?: any } | null): obj is ContributionCalendarMonth => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isContributionCalendarMonth"')
  return ContributionCalendarMonth_possibleTypes.includes(obj.__typename)
}



const ContributionCalendarWeek_possibleTypes: string[] = ['ContributionCalendarWeek']
export const isContributionCalendarWeek = (obj?: { __typename?: any } | null): obj is ContributionCalendarWeek => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isContributionCalendarWeek"')
  return ContributionCalendarWeek_possibleTypes.includes(obj.__typename)
}



const ContributionsCollection_possibleTypes: string[] = ['ContributionsCollection']
export const isContributionsCollection = (obj?: { __typename?: any } | null): obj is ContributionsCollection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isContributionsCollection"')
  return ContributionsCollection_possibleTypes.includes(obj.__typename)
}



const ConvertProjectCardNoteToIssuePayload_possibleTypes: string[] = ['ConvertProjectCardNoteToIssuePayload']
export const isConvertProjectCardNoteToIssuePayload = (obj?: { __typename?: any } | null): obj is ConvertProjectCardNoteToIssuePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isConvertProjectCardNoteToIssuePayload"')
  return ConvertProjectCardNoteToIssuePayload_possibleTypes.includes(obj.__typename)
}



const ConvertToDraftEvent_possibleTypes: string[] = ['ConvertToDraftEvent']
export const isConvertToDraftEvent = (obj?: { __typename?: any } | null): obj is ConvertToDraftEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isConvertToDraftEvent"')
  return ConvertToDraftEvent_possibleTypes.includes(obj.__typename)
}



const ConvertedNoteToIssueEvent_possibleTypes: string[] = ['ConvertedNoteToIssueEvent']
export const isConvertedNoteToIssueEvent = (obj?: { __typename?: any } | null): obj is ConvertedNoteToIssueEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isConvertedNoteToIssueEvent"')
  return ConvertedNoteToIssueEvent_possibleTypes.includes(obj.__typename)
}



const CreateBranchProtectionRulePayload_possibleTypes: string[] = ['CreateBranchProtectionRulePayload']
export const isCreateBranchProtectionRulePayload = (obj?: { __typename?: any } | null): obj is CreateBranchProtectionRulePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateBranchProtectionRulePayload"')
  return CreateBranchProtectionRulePayload_possibleTypes.includes(obj.__typename)
}



const CreateCheckRunPayload_possibleTypes: string[] = ['CreateCheckRunPayload']
export const isCreateCheckRunPayload = (obj?: { __typename?: any } | null): obj is CreateCheckRunPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateCheckRunPayload"')
  return CreateCheckRunPayload_possibleTypes.includes(obj.__typename)
}



const CreateCheckSuitePayload_possibleTypes: string[] = ['CreateCheckSuitePayload']
export const isCreateCheckSuitePayload = (obj?: { __typename?: any } | null): obj is CreateCheckSuitePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateCheckSuitePayload"')
  return CreateCheckSuitePayload_possibleTypes.includes(obj.__typename)
}



const CreateContentAttachmentPayload_possibleTypes: string[] = ['CreateContentAttachmentPayload']
export const isCreateContentAttachmentPayload = (obj?: { __typename?: any } | null): obj is CreateContentAttachmentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateContentAttachmentPayload"')
  return CreateContentAttachmentPayload_possibleTypes.includes(obj.__typename)
}



const CreateDeploymentPayload_possibleTypes: string[] = ['CreateDeploymentPayload']
export const isCreateDeploymentPayload = (obj?: { __typename?: any } | null): obj is CreateDeploymentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateDeploymentPayload"')
  return CreateDeploymentPayload_possibleTypes.includes(obj.__typename)
}



const CreateDeploymentStatusPayload_possibleTypes: string[] = ['CreateDeploymentStatusPayload']
export const isCreateDeploymentStatusPayload = (obj?: { __typename?: any } | null): obj is CreateDeploymentStatusPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateDeploymentStatusPayload"')
  return CreateDeploymentStatusPayload_possibleTypes.includes(obj.__typename)
}



const CreateEnterpriseOrganizationPayload_possibleTypes: string[] = ['CreateEnterpriseOrganizationPayload']
export const isCreateEnterpriseOrganizationPayload = (obj?: { __typename?: any } | null): obj is CreateEnterpriseOrganizationPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateEnterpriseOrganizationPayload"')
  return CreateEnterpriseOrganizationPayload_possibleTypes.includes(obj.__typename)
}



const CreateIpAllowListEntryPayload_possibleTypes: string[] = ['CreateIpAllowListEntryPayload']
export const isCreateIpAllowListEntryPayload = (obj?: { __typename?: any } | null): obj is CreateIpAllowListEntryPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateIpAllowListEntryPayload"')
  return CreateIpAllowListEntryPayload_possibleTypes.includes(obj.__typename)
}



const CreateIssuePayload_possibleTypes: string[] = ['CreateIssuePayload']
export const isCreateIssuePayload = (obj?: { __typename?: any } | null): obj is CreateIssuePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateIssuePayload"')
  return CreateIssuePayload_possibleTypes.includes(obj.__typename)
}



const CreateLabelPayload_possibleTypes: string[] = ['CreateLabelPayload']
export const isCreateLabelPayload = (obj?: { __typename?: any } | null): obj is CreateLabelPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateLabelPayload"')
  return CreateLabelPayload_possibleTypes.includes(obj.__typename)
}



const CreateProjectPayload_possibleTypes: string[] = ['CreateProjectPayload']
export const isCreateProjectPayload = (obj?: { __typename?: any } | null): obj is CreateProjectPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateProjectPayload"')
  return CreateProjectPayload_possibleTypes.includes(obj.__typename)
}



const CreatePullRequestPayload_possibleTypes: string[] = ['CreatePullRequestPayload']
export const isCreatePullRequestPayload = (obj?: { __typename?: any } | null): obj is CreatePullRequestPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatePullRequestPayload"')
  return CreatePullRequestPayload_possibleTypes.includes(obj.__typename)
}



const CreateRefPayload_possibleTypes: string[] = ['CreateRefPayload']
export const isCreateRefPayload = (obj?: { __typename?: any } | null): obj is CreateRefPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateRefPayload"')
  return CreateRefPayload_possibleTypes.includes(obj.__typename)
}



const CreateRepositoryPayload_possibleTypes: string[] = ['CreateRepositoryPayload']
export const isCreateRepositoryPayload = (obj?: { __typename?: any } | null): obj is CreateRepositoryPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateRepositoryPayload"')
  return CreateRepositoryPayload_possibleTypes.includes(obj.__typename)
}



const CreateTeamDiscussionCommentPayload_possibleTypes: string[] = ['CreateTeamDiscussionCommentPayload']
export const isCreateTeamDiscussionCommentPayload = (obj?: { __typename?: any } | null): obj is CreateTeamDiscussionCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateTeamDiscussionCommentPayload"')
  return CreateTeamDiscussionCommentPayload_possibleTypes.includes(obj.__typename)
}



const CreateTeamDiscussionPayload_possibleTypes: string[] = ['CreateTeamDiscussionPayload']
export const isCreateTeamDiscussionPayload = (obj?: { __typename?: any } | null): obj is CreateTeamDiscussionPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreateTeamDiscussionPayload"')
  return CreateTeamDiscussionPayload_possibleTypes.includes(obj.__typename)
}



const CreatedCommitContribution_possibleTypes: string[] = ['CreatedCommitContribution']
export const isCreatedCommitContribution = (obj?: { __typename?: any } | null): obj is CreatedCommitContribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedCommitContribution"')
  return CreatedCommitContribution_possibleTypes.includes(obj.__typename)
}



const CreatedCommitContributionConnection_possibleTypes: string[] = ['CreatedCommitContributionConnection']
export const isCreatedCommitContributionConnection = (obj?: { __typename?: any } | null): obj is CreatedCommitContributionConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedCommitContributionConnection"')
  return CreatedCommitContributionConnection_possibleTypes.includes(obj.__typename)
}



const CreatedCommitContributionEdge_possibleTypes: string[] = ['CreatedCommitContributionEdge']
export const isCreatedCommitContributionEdge = (obj?: { __typename?: any } | null): obj is CreatedCommitContributionEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedCommitContributionEdge"')
  return CreatedCommitContributionEdge_possibleTypes.includes(obj.__typename)
}



const CreatedIssueContribution_possibleTypes: string[] = ['CreatedIssueContribution']
export const isCreatedIssueContribution = (obj?: { __typename?: any } | null): obj is CreatedIssueContribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedIssueContribution"')
  return CreatedIssueContribution_possibleTypes.includes(obj.__typename)
}



const CreatedIssueContributionConnection_possibleTypes: string[] = ['CreatedIssueContributionConnection']
export const isCreatedIssueContributionConnection = (obj?: { __typename?: any } | null): obj is CreatedIssueContributionConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedIssueContributionConnection"')
  return CreatedIssueContributionConnection_possibleTypes.includes(obj.__typename)
}



const CreatedIssueContributionEdge_possibleTypes: string[] = ['CreatedIssueContributionEdge']
export const isCreatedIssueContributionEdge = (obj?: { __typename?: any } | null): obj is CreatedIssueContributionEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedIssueContributionEdge"')
  return CreatedIssueContributionEdge_possibleTypes.includes(obj.__typename)
}



const CreatedIssueOrRestrictedContribution_possibleTypes: string[] = ['CreatedIssueContribution','RestrictedContribution']
export const isCreatedIssueOrRestrictedContribution = (obj?: { __typename?: any } | null): obj is CreatedIssueOrRestrictedContribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedIssueOrRestrictedContribution"')
  return CreatedIssueOrRestrictedContribution_possibleTypes.includes(obj.__typename)
}



const CreatedPullRequestContribution_possibleTypes: string[] = ['CreatedPullRequestContribution']
export const isCreatedPullRequestContribution = (obj?: { __typename?: any } | null): obj is CreatedPullRequestContribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedPullRequestContribution"')
  return CreatedPullRequestContribution_possibleTypes.includes(obj.__typename)
}



const CreatedPullRequestContributionConnection_possibleTypes: string[] = ['CreatedPullRequestContributionConnection']
export const isCreatedPullRequestContributionConnection = (obj?: { __typename?: any } | null): obj is CreatedPullRequestContributionConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedPullRequestContributionConnection"')
  return CreatedPullRequestContributionConnection_possibleTypes.includes(obj.__typename)
}



const CreatedPullRequestContributionEdge_possibleTypes: string[] = ['CreatedPullRequestContributionEdge']
export const isCreatedPullRequestContributionEdge = (obj?: { __typename?: any } | null): obj is CreatedPullRequestContributionEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedPullRequestContributionEdge"')
  return CreatedPullRequestContributionEdge_possibleTypes.includes(obj.__typename)
}



const CreatedPullRequestOrRestrictedContribution_possibleTypes: string[] = ['CreatedPullRequestContribution','RestrictedContribution']
export const isCreatedPullRequestOrRestrictedContribution = (obj?: { __typename?: any } | null): obj is CreatedPullRequestOrRestrictedContribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedPullRequestOrRestrictedContribution"')
  return CreatedPullRequestOrRestrictedContribution_possibleTypes.includes(obj.__typename)
}



const CreatedPullRequestReviewContribution_possibleTypes: string[] = ['CreatedPullRequestReviewContribution']
export const isCreatedPullRequestReviewContribution = (obj?: { __typename?: any } | null): obj is CreatedPullRequestReviewContribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedPullRequestReviewContribution"')
  return CreatedPullRequestReviewContribution_possibleTypes.includes(obj.__typename)
}



const CreatedPullRequestReviewContributionConnection_possibleTypes: string[] = ['CreatedPullRequestReviewContributionConnection']
export const isCreatedPullRequestReviewContributionConnection = (obj?: { __typename?: any } | null): obj is CreatedPullRequestReviewContributionConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedPullRequestReviewContributionConnection"')
  return CreatedPullRequestReviewContributionConnection_possibleTypes.includes(obj.__typename)
}



const CreatedPullRequestReviewContributionEdge_possibleTypes: string[] = ['CreatedPullRequestReviewContributionEdge']
export const isCreatedPullRequestReviewContributionEdge = (obj?: { __typename?: any } | null): obj is CreatedPullRequestReviewContributionEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedPullRequestReviewContributionEdge"')
  return CreatedPullRequestReviewContributionEdge_possibleTypes.includes(obj.__typename)
}



const CreatedRepositoryContribution_possibleTypes: string[] = ['CreatedRepositoryContribution']
export const isCreatedRepositoryContribution = (obj?: { __typename?: any } | null): obj is CreatedRepositoryContribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedRepositoryContribution"')
  return CreatedRepositoryContribution_possibleTypes.includes(obj.__typename)
}



const CreatedRepositoryContributionConnection_possibleTypes: string[] = ['CreatedRepositoryContributionConnection']
export const isCreatedRepositoryContributionConnection = (obj?: { __typename?: any } | null): obj is CreatedRepositoryContributionConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedRepositoryContributionConnection"')
  return CreatedRepositoryContributionConnection_possibleTypes.includes(obj.__typename)
}



const CreatedRepositoryContributionEdge_possibleTypes: string[] = ['CreatedRepositoryContributionEdge']
export const isCreatedRepositoryContributionEdge = (obj?: { __typename?: any } | null): obj is CreatedRepositoryContributionEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedRepositoryContributionEdge"')
  return CreatedRepositoryContributionEdge_possibleTypes.includes(obj.__typename)
}



const CreatedRepositoryOrRestrictedContribution_possibleTypes: string[] = ['CreatedRepositoryContribution','RestrictedContribution']
export const isCreatedRepositoryOrRestrictedContribution = (obj?: { __typename?: any } | null): obj is CreatedRepositoryOrRestrictedContribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCreatedRepositoryOrRestrictedContribution"')
  return CreatedRepositoryOrRestrictedContribution_possibleTypes.includes(obj.__typename)
}



const CrossReferencedEvent_possibleTypes: string[] = ['CrossReferencedEvent']
export const isCrossReferencedEvent = (obj?: { __typename?: any } | null): obj is CrossReferencedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isCrossReferencedEvent"')
  return CrossReferencedEvent_possibleTypes.includes(obj.__typename)
}



const DeclineTopicSuggestionPayload_possibleTypes: string[] = ['DeclineTopicSuggestionPayload']
export const isDeclineTopicSuggestionPayload = (obj?: { __typename?: any } | null): obj is DeclineTopicSuggestionPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeclineTopicSuggestionPayload"')
  return DeclineTopicSuggestionPayload_possibleTypes.includes(obj.__typename)
}



const Deletable_possibleTypes: string[] = ['CommitComment','GistComment','IssueComment','PullRequestReview','PullRequestReviewComment','TeamDiscussion','TeamDiscussionComment']
export const isDeletable = (obj?: { __typename?: any } | null): obj is Deletable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeletable"')
  return Deletable_possibleTypes.includes(obj.__typename)
}



const DeleteBranchProtectionRulePayload_possibleTypes: string[] = ['DeleteBranchProtectionRulePayload']
export const isDeleteBranchProtectionRulePayload = (obj?: { __typename?: any } | null): obj is DeleteBranchProtectionRulePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteBranchProtectionRulePayload"')
  return DeleteBranchProtectionRulePayload_possibleTypes.includes(obj.__typename)
}



const DeleteDeploymentPayload_possibleTypes: string[] = ['DeleteDeploymentPayload']
export const isDeleteDeploymentPayload = (obj?: { __typename?: any } | null): obj is DeleteDeploymentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteDeploymentPayload"')
  return DeleteDeploymentPayload_possibleTypes.includes(obj.__typename)
}



const DeleteIpAllowListEntryPayload_possibleTypes: string[] = ['DeleteIpAllowListEntryPayload']
export const isDeleteIpAllowListEntryPayload = (obj?: { __typename?: any } | null): obj is DeleteIpAllowListEntryPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteIpAllowListEntryPayload"')
  return DeleteIpAllowListEntryPayload_possibleTypes.includes(obj.__typename)
}



const DeleteIssueCommentPayload_possibleTypes: string[] = ['DeleteIssueCommentPayload']
export const isDeleteIssueCommentPayload = (obj?: { __typename?: any } | null): obj is DeleteIssueCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteIssueCommentPayload"')
  return DeleteIssueCommentPayload_possibleTypes.includes(obj.__typename)
}



const DeleteIssuePayload_possibleTypes: string[] = ['DeleteIssuePayload']
export const isDeleteIssuePayload = (obj?: { __typename?: any } | null): obj is DeleteIssuePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteIssuePayload"')
  return DeleteIssuePayload_possibleTypes.includes(obj.__typename)
}



const DeleteLabelPayload_possibleTypes: string[] = ['DeleteLabelPayload']
export const isDeleteLabelPayload = (obj?: { __typename?: any } | null): obj is DeleteLabelPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteLabelPayload"')
  return DeleteLabelPayload_possibleTypes.includes(obj.__typename)
}



const DeletePackageVersionPayload_possibleTypes: string[] = ['DeletePackageVersionPayload']
export const isDeletePackageVersionPayload = (obj?: { __typename?: any } | null): obj is DeletePackageVersionPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeletePackageVersionPayload"')
  return DeletePackageVersionPayload_possibleTypes.includes(obj.__typename)
}



const DeleteProjectCardPayload_possibleTypes: string[] = ['DeleteProjectCardPayload']
export const isDeleteProjectCardPayload = (obj?: { __typename?: any } | null): obj is DeleteProjectCardPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteProjectCardPayload"')
  return DeleteProjectCardPayload_possibleTypes.includes(obj.__typename)
}



const DeleteProjectColumnPayload_possibleTypes: string[] = ['DeleteProjectColumnPayload']
export const isDeleteProjectColumnPayload = (obj?: { __typename?: any } | null): obj is DeleteProjectColumnPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteProjectColumnPayload"')
  return DeleteProjectColumnPayload_possibleTypes.includes(obj.__typename)
}



const DeleteProjectPayload_possibleTypes: string[] = ['DeleteProjectPayload']
export const isDeleteProjectPayload = (obj?: { __typename?: any } | null): obj is DeleteProjectPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteProjectPayload"')
  return DeleteProjectPayload_possibleTypes.includes(obj.__typename)
}



const DeletePullRequestReviewCommentPayload_possibleTypes: string[] = ['DeletePullRequestReviewCommentPayload']
export const isDeletePullRequestReviewCommentPayload = (obj?: { __typename?: any } | null): obj is DeletePullRequestReviewCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeletePullRequestReviewCommentPayload"')
  return DeletePullRequestReviewCommentPayload_possibleTypes.includes(obj.__typename)
}



const DeletePullRequestReviewPayload_possibleTypes: string[] = ['DeletePullRequestReviewPayload']
export const isDeletePullRequestReviewPayload = (obj?: { __typename?: any } | null): obj is DeletePullRequestReviewPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeletePullRequestReviewPayload"')
  return DeletePullRequestReviewPayload_possibleTypes.includes(obj.__typename)
}



const DeleteRefPayload_possibleTypes: string[] = ['DeleteRefPayload']
export const isDeleteRefPayload = (obj?: { __typename?: any } | null): obj is DeleteRefPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteRefPayload"')
  return DeleteRefPayload_possibleTypes.includes(obj.__typename)
}



const DeleteTeamDiscussionCommentPayload_possibleTypes: string[] = ['DeleteTeamDiscussionCommentPayload']
export const isDeleteTeamDiscussionCommentPayload = (obj?: { __typename?: any } | null): obj is DeleteTeamDiscussionCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteTeamDiscussionCommentPayload"')
  return DeleteTeamDiscussionCommentPayload_possibleTypes.includes(obj.__typename)
}



const DeleteTeamDiscussionPayload_possibleTypes: string[] = ['DeleteTeamDiscussionPayload']
export const isDeleteTeamDiscussionPayload = (obj?: { __typename?: any } | null): obj is DeleteTeamDiscussionPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteTeamDiscussionPayload"')
  return DeleteTeamDiscussionPayload_possibleTypes.includes(obj.__typename)
}



const DemilestonedEvent_possibleTypes: string[] = ['DemilestonedEvent']
export const isDemilestonedEvent = (obj?: { __typename?: any } | null): obj is DemilestonedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDemilestonedEvent"')
  return DemilestonedEvent_possibleTypes.includes(obj.__typename)
}



const DependencyGraphDependency_possibleTypes: string[] = ['DependencyGraphDependency']
export const isDependencyGraphDependency = (obj?: { __typename?: any } | null): obj is DependencyGraphDependency => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDependencyGraphDependency"')
  return DependencyGraphDependency_possibleTypes.includes(obj.__typename)
}



const DependencyGraphDependencyConnection_possibleTypes: string[] = ['DependencyGraphDependencyConnection']
export const isDependencyGraphDependencyConnection = (obj?: { __typename?: any } | null): obj is DependencyGraphDependencyConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDependencyGraphDependencyConnection"')
  return DependencyGraphDependencyConnection_possibleTypes.includes(obj.__typename)
}



const DependencyGraphDependencyEdge_possibleTypes: string[] = ['DependencyGraphDependencyEdge']
export const isDependencyGraphDependencyEdge = (obj?: { __typename?: any } | null): obj is DependencyGraphDependencyEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDependencyGraphDependencyEdge"')
  return DependencyGraphDependencyEdge_possibleTypes.includes(obj.__typename)
}



const DependencyGraphManifest_possibleTypes: string[] = ['DependencyGraphManifest']
export const isDependencyGraphManifest = (obj?: { __typename?: any } | null): obj is DependencyGraphManifest => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDependencyGraphManifest"')
  return DependencyGraphManifest_possibleTypes.includes(obj.__typename)
}



const DependencyGraphManifestConnection_possibleTypes: string[] = ['DependencyGraphManifestConnection']
export const isDependencyGraphManifestConnection = (obj?: { __typename?: any } | null): obj is DependencyGraphManifestConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDependencyGraphManifestConnection"')
  return DependencyGraphManifestConnection_possibleTypes.includes(obj.__typename)
}



const DependencyGraphManifestEdge_possibleTypes: string[] = ['DependencyGraphManifestEdge']
export const isDependencyGraphManifestEdge = (obj?: { __typename?: any } | null): obj is DependencyGraphManifestEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDependencyGraphManifestEdge"')
  return DependencyGraphManifestEdge_possibleTypes.includes(obj.__typename)
}



const DeployKey_possibleTypes: string[] = ['DeployKey']
export const isDeployKey = (obj?: { __typename?: any } | null): obj is DeployKey => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeployKey"')
  return DeployKey_possibleTypes.includes(obj.__typename)
}



const DeployKeyConnection_possibleTypes: string[] = ['DeployKeyConnection']
export const isDeployKeyConnection = (obj?: { __typename?: any } | null): obj is DeployKeyConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeployKeyConnection"')
  return DeployKeyConnection_possibleTypes.includes(obj.__typename)
}



const DeployKeyEdge_possibleTypes: string[] = ['DeployKeyEdge']
export const isDeployKeyEdge = (obj?: { __typename?: any } | null): obj is DeployKeyEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeployKeyEdge"')
  return DeployKeyEdge_possibleTypes.includes(obj.__typename)
}



const DeployedEvent_possibleTypes: string[] = ['DeployedEvent']
export const isDeployedEvent = (obj?: { __typename?: any } | null): obj is DeployedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeployedEvent"')
  return DeployedEvent_possibleTypes.includes(obj.__typename)
}



const Deployment_possibleTypes: string[] = ['Deployment']
export const isDeployment = (obj?: { __typename?: any } | null): obj is Deployment => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeployment"')
  return Deployment_possibleTypes.includes(obj.__typename)
}



const DeploymentConnection_possibleTypes: string[] = ['DeploymentConnection']
export const isDeploymentConnection = (obj?: { __typename?: any } | null): obj is DeploymentConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeploymentConnection"')
  return DeploymentConnection_possibleTypes.includes(obj.__typename)
}



const DeploymentEdge_possibleTypes: string[] = ['DeploymentEdge']
export const isDeploymentEdge = (obj?: { __typename?: any } | null): obj is DeploymentEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeploymentEdge"')
  return DeploymentEdge_possibleTypes.includes(obj.__typename)
}



const DeploymentEnvironmentChangedEvent_possibleTypes: string[] = ['DeploymentEnvironmentChangedEvent']
export const isDeploymentEnvironmentChangedEvent = (obj?: { __typename?: any } | null): obj is DeploymentEnvironmentChangedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeploymentEnvironmentChangedEvent"')
  return DeploymentEnvironmentChangedEvent_possibleTypes.includes(obj.__typename)
}



const DeploymentStatus_possibleTypes: string[] = ['DeploymentStatus']
export const isDeploymentStatus = (obj?: { __typename?: any } | null): obj is DeploymentStatus => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeploymentStatus"')
  return DeploymentStatus_possibleTypes.includes(obj.__typename)
}



const DeploymentStatusConnection_possibleTypes: string[] = ['DeploymentStatusConnection']
export const isDeploymentStatusConnection = (obj?: { __typename?: any } | null): obj is DeploymentStatusConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeploymentStatusConnection"')
  return DeploymentStatusConnection_possibleTypes.includes(obj.__typename)
}



const DeploymentStatusEdge_possibleTypes: string[] = ['DeploymentStatusEdge']
export const isDeploymentStatusEdge = (obj?: { __typename?: any } | null): obj is DeploymentStatusEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDeploymentStatusEdge"')
  return DeploymentStatusEdge_possibleTypes.includes(obj.__typename)
}



const DisconnectedEvent_possibleTypes: string[] = ['DisconnectedEvent']
export const isDisconnectedEvent = (obj?: { __typename?: any } | null): obj is DisconnectedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDisconnectedEvent"')
  return DisconnectedEvent_possibleTypes.includes(obj.__typename)
}



const DismissPullRequestReviewPayload_possibleTypes: string[] = ['DismissPullRequestReviewPayload']
export const isDismissPullRequestReviewPayload = (obj?: { __typename?: any } | null): obj is DismissPullRequestReviewPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isDismissPullRequestReviewPayload"')
  return DismissPullRequestReviewPayload_possibleTypes.includes(obj.__typename)
}



const Enterprise_possibleTypes: string[] = ['Enterprise']
export const isEnterprise = (obj?: { __typename?: any } | null): obj is Enterprise => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterprise"')
  return Enterprise_possibleTypes.includes(obj.__typename)
}



const EnterpriseAdministratorConnection_possibleTypes: string[] = ['EnterpriseAdministratorConnection']
export const isEnterpriseAdministratorConnection = (obj?: { __typename?: any } | null): obj is EnterpriseAdministratorConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseAdministratorConnection"')
  return EnterpriseAdministratorConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseAdministratorEdge_possibleTypes: string[] = ['EnterpriseAdministratorEdge']
export const isEnterpriseAdministratorEdge = (obj?: { __typename?: any } | null): obj is EnterpriseAdministratorEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseAdministratorEdge"')
  return EnterpriseAdministratorEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseAdministratorInvitation_possibleTypes: string[] = ['EnterpriseAdministratorInvitation']
export const isEnterpriseAdministratorInvitation = (obj?: { __typename?: any } | null): obj is EnterpriseAdministratorInvitation => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseAdministratorInvitation"')
  return EnterpriseAdministratorInvitation_possibleTypes.includes(obj.__typename)
}



const EnterpriseAdministratorInvitationConnection_possibleTypes: string[] = ['EnterpriseAdministratorInvitationConnection']
export const isEnterpriseAdministratorInvitationConnection = (obj?: { __typename?: any } | null): obj is EnterpriseAdministratorInvitationConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseAdministratorInvitationConnection"')
  return EnterpriseAdministratorInvitationConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseAdministratorInvitationEdge_possibleTypes: string[] = ['EnterpriseAdministratorInvitationEdge']
export const isEnterpriseAdministratorInvitationEdge = (obj?: { __typename?: any } | null): obj is EnterpriseAdministratorInvitationEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseAdministratorInvitationEdge"')
  return EnterpriseAdministratorInvitationEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseAuditEntryData_possibleTypes: string[] = ['MembersCanDeleteReposClearAuditEntry','MembersCanDeleteReposDisableAuditEntry','MembersCanDeleteReposEnableAuditEntry','OrgInviteToBusinessAuditEntry','PrivateRepositoryForkingDisableAuditEntry','PrivateRepositoryForkingEnableAuditEntry','RepositoryVisibilityChangeDisableAuditEntry','RepositoryVisibilityChangeEnableAuditEntry']
export const isEnterpriseAuditEntryData = (obj?: { __typename?: any } | null): obj is EnterpriseAuditEntryData => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseAuditEntryData"')
  return EnterpriseAuditEntryData_possibleTypes.includes(obj.__typename)
}



const EnterpriseBillingInfo_possibleTypes: string[] = ['EnterpriseBillingInfo']
export const isEnterpriseBillingInfo = (obj?: { __typename?: any } | null): obj is EnterpriseBillingInfo => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseBillingInfo"')
  return EnterpriseBillingInfo_possibleTypes.includes(obj.__typename)
}



const EnterpriseIdentityProvider_possibleTypes: string[] = ['EnterpriseIdentityProvider']
export const isEnterpriseIdentityProvider = (obj?: { __typename?: any } | null): obj is EnterpriseIdentityProvider => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseIdentityProvider"')
  return EnterpriseIdentityProvider_possibleTypes.includes(obj.__typename)
}



const EnterpriseMember_possibleTypes: string[] = ['EnterpriseUserAccount','User']
export const isEnterpriseMember = (obj?: { __typename?: any } | null): obj is EnterpriseMember => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseMember"')
  return EnterpriseMember_possibleTypes.includes(obj.__typename)
}



const EnterpriseMemberConnection_possibleTypes: string[] = ['EnterpriseMemberConnection']
export const isEnterpriseMemberConnection = (obj?: { __typename?: any } | null): obj is EnterpriseMemberConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseMemberConnection"')
  return EnterpriseMemberConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseMemberEdge_possibleTypes: string[] = ['EnterpriseMemberEdge']
export const isEnterpriseMemberEdge = (obj?: { __typename?: any } | null): obj is EnterpriseMemberEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseMemberEdge"')
  return EnterpriseMemberEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseOrganizationMembershipConnection_possibleTypes: string[] = ['EnterpriseOrganizationMembershipConnection']
export const isEnterpriseOrganizationMembershipConnection = (obj?: { __typename?: any } | null): obj is EnterpriseOrganizationMembershipConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseOrganizationMembershipConnection"')
  return EnterpriseOrganizationMembershipConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseOrganizationMembershipEdge_possibleTypes: string[] = ['EnterpriseOrganizationMembershipEdge']
export const isEnterpriseOrganizationMembershipEdge = (obj?: { __typename?: any } | null): obj is EnterpriseOrganizationMembershipEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseOrganizationMembershipEdge"')
  return EnterpriseOrganizationMembershipEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseOutsideCollaboratorConnection_possibleTypes: string[] = ['EnterpriseOutsideCollaboratorConnection']
export const isEnterpriseOutsideCollaboratorConnection = (obj?: { __typename?: any } | null): obj is EnterpriseOutsideCollaboratorConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseOutsideCollaboratorConnection"')
  return EnterpriseOutsideCollaboratorConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseOutsideCollaboratorEdge_possibleTypes: string[] = ['EnterpriseOutsideCollaboratorEdge']
export const isEnterpriseOutsideCollaboratorEdge = (obj?: { __typename?: any } | null): obj is EnterpriseOutsideCollaboratorEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseOutsideCollaboratorEdge"')
  return EnterpriseOutsideCollaboratorEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseOwnerInfo_possibleTypes: string[] = ['EnterpriseOwnerInfo']
export const isEnterpriseOwnerInfo = (obj?: { __typename?: any } | null): obj is EnterpriseOwnerInfo => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseOwnerInfo"')
  return EnterpriseOwnerInfo_possibleTypes.includes(obj.__typename)
}



const EnterprisePendingCollaboratorConnection_possibleTypes: string[] = ['EnterprisePendingCollaboratorConnection']
export const isEnterprisePendingCollaboratorConnection = (obj?: { __typename?: any } | null): obj is EnterprisePendingCollaboratorConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterprisePendingCollaboratorConnection"')
  return EnterprisePendingCollaboratorConnection_possibleTypes.includes(obj.__typename)
}



const EnterprisePendingCollaboratorEdge_possibleTypes: string[] = ['EnterprisePendingCollaboratorEdge']
export const isEnterprisePendingCollaboratorEdge = (obj?: { __typename?: any } | null): obj is EnterprisePendingCollaboratorEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterprisePendingCollaboratorEdge"')
  return EnterprisePendingCollaboratorEdge_possibleTypes.includes(obj.__typename)
}



const EnterprisePendingMemberInvitationConnection_possibleTypes: string[] = ['EnterprisePendingMemberInvitationConnection']
export const isEnterprisePendingMemberInvitationConnection = (obj?: { __typename?: any } | null): obj is EnterprisePendingMemberInvitationConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterprisePendingMemberInvitationConnection"')
  return EnterprisePendingMemberInvitationConnection_possibleTypes.includes(obj.__typename)
}



const EnterprisePendingMemberInvitationEdge_possibleTypes: string[] = ['EnterprisePendingMemberInvitationEdge']
export const isEnterprisePendingMemberInvitationEdge = (obj?: { __typename?: any } | null): obj is EnterprisePendingMemberInvitationEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterprisePendingMemberInvitationEdge"')
  return EnterprisePendingMemberInvitationEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseRepositoryInfo_possibleTypes: string[] = ['EnterpriseRepositoryInfo']
export const isEnterpriseRepositoryInfo = (obj?: { __typename?: any } | null): obj is EnterpriseRepositoryInfo => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseRepositoryInfo"')
  return EnterpriseRepositoryInfo_possibleTypes.includes(obj.__typename)
}



const EnterpriseRepositoryInfoConnection_possibleTypes: string[] = ['EnterpriseRepositoryInfoConnection']
export const isEnterpriseRepositoryInfoConnection = (obj?: { __typename?: any } | null): obj is EnterpriseRepositoryInfoConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseRepositoryInfoConnection"')
  return EnterpriseRepositoryInfoConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseRepositoryInfoEdge_possibleTypes: string[] = ['EnterpriseRepositoryInfoEdge']
export const isEnterpriseRepositoryInfoEdge = (obj?: { __typename?: any } | null): obj is EnterpriseRepositoryInfoEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseRepositoryInfoEdge"')
  return EnterpriseRepositoryInfoEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerInstallation_possibleTypes: string[] = ['EnterpriseServerInstallation']
export const isEnterpriseServerInstallation = (obj?: { __typename?: any } | null): obj is EnterpriseServerInstallation => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerInstallation"')
  return EnterpriseServerInstallation_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerInstallationConnection_possibleTypes: string[] = ['EnterpriseServerInstallationConnection']
export const isEnterpriseServerInstallationConnection = (obj?: { __typename?: any } | null): obj is EnterpriseServerInstallationConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerInstallationConnection"')
  return EnterpriseServerInstallationConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerInstallationEdge_possibleTypes: string[] = ['EnterpriseServerInstallationEdge']
export const isEnterpriseServerInstallationEdge = (obj?: { __typename?: any } | null): obj is EnterpriseServerInstallationEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerInstallationEdge"')
  return EnterpriseServerInstallationEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerUserAccount_possibleTypes: string[] = ['EnterpriseServerUserAccount']
export const isEnterpriseServerUserAccount = (obj?: { __typename?: any } | null): obj is EnterpriseServerUserAccount => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerUserAccount"')
  return EnterpriseServerUserAccount_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerUserAccountConnection_possibleTypes: string[] = ['EnterpriseServerUserAccountConnection']
export const isEnterpriseServerUserAccountConnection = (obj?: { __typename?: any } | null): obj is EnterpriseServerUserAccountConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerUserAccountConnection"')
  return EnterpriseServerUserAccountConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerUserAccountEdge_possibleTypes: string[] = ['EnterpriseServerUserAccountEdge']
export const isEnterpriseServerUserAccountEdge = (obj?: { __typename?: any } | null): obj is EnterpriseServerUserAccountEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerUserAccountEdge"')
  return EnterpriseServerUserAccountEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerUserAccountEmail_possibleTypes: string[] = ['EnterpriseServerUserAccountEmail']
export const isEnterpriseServerUserAccountEmail = (obj?: { __typename?: any } | null): obj is EnterpriseServerUserAccountEmail => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerUserAccountEmail"')
  return EnterpriseServerUserAccountEmail_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerUserAccountEmailConnection_possibleTypes: string[] = ['EnterpriseServerUserAccountEmailConnection']
export const isEnterpriseServerUserAccountEmailConnection = (obj?: { __typename?: any } | null): obj is EnterpriseServerUserAccountEmailConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerUserAccountEmailConnection"')
  return EnterpriseServerUserAccountEmailConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerUserAccountEmailEdge_possibleTypes: string[] = ['EnterpriseServerUserAccountEmailEdge']
export const isEnterpriseServerUserAccountEmailEdge = (obj?: { __typename?: any } | null): obj is EnterpriseServerUserAccountEmailEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerUserAccountEmailEdge"')
  return EnterpriseServerUserAccountEmailEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerUserAccountsUpload_possibleTypes: string[] = ['EnterpriseServerUserAccountsUpload']
export const isEnterpriseServerUserAccountsUpload = (obj?: { __typename?: any } | null): obj is EnterpriseServerUserAccountsUpload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerUserAccountsUpload"')
  return EnterpriseServerUserAccountsUpload_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerUserAccountsUploadConnection_possibleTypes: string[] = ['EnterpriseServerUserAccountsUploadConnection']
export const isEnterpriseServerUserAccountsUploadConnection = (obj?: { __typename?: any } | null): obj is EnterpriseServerUserAccountsUploadConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerUserAccountsUploadConnection"')
  return EnterpriseServerUserAccountsUploadConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseServerUserAccountsUploadEdge_possibleTypes: string[] = ['EnterpriseServerUserAccountsUploadEdge']
export const isEnterpriseServerUserAccountsUploadEdge = (obj?: { __typename?: any } | null): obj is EnterpriseServerUserAccountsUploadEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseServerUserAccountsUploadEdge"')
  return EnterpriseServerUserAccountsUploadEdge_possibleTypes.includes(obj.__typename)
}



const EnterpriseUserAccount_possibleTypes: string[] = ['EnterpriseUserAccount']
export const isEnterpriseUserAccount = (obj?: { __typename?: any } | null): obj is EnterpriseUserAccount => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseUserAccount"')
  return EnterpriseUserAccount_possibleTypes.includes(obj.__typename)
}



const EnterpriseUserAccountConnection_possibleTypes: string[] = ['EnterpriseUserAccountConnection']
export const isEnterpriseUserAccountConnection = (obj?: { __typename?: any } | null): obj is EnterpriseUserAccountConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseUserAccountConnection"')
  return EnterpriseUserAccountConnection_possibleTypes.includes(obj.__typename)
}



const EnterpriseUserAccountEdge_possibleTypes: string[] = ['EnterpriseUserAccountEdge']
export const isEnterpriseUserAccountEdge = (obj?: { __typename?: any } | null): obj is EnterpriseUserAccountEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isEnterpriseUserAccountEdge"')
  return EnterpriseUserAccountEdge_possibleTypes.includes(obj.__typename)
}



const ExternalIdentity_possibleTypes: string[] = ['ExternalIdentity']
export const isExternalIdentity = (obj?: { __typename?: any } | null): obj is ExternalIdentity => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isExternalIdentity"')
  return ExternalIdentity_possibleTypes.includes(obj.__typename)
}



const ExternalIdentityConnection_possibleTypes: string[] = ['ExternalIdentityConnection']
export const isExternalIdentityConnection = (obj?: { __typename?: any } | null): obj is ExternalIdentityConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isExternalIdentityConnection"')
  return ExternalIdentityConnection_possibleTypes.includes(obj.__typename)
}



const ExternalIdentityEdge_possibleTypes: string[] = ['ExternalIdentityEdge']
export const isExternalIdentityEdge = (obj?: { __typename?: any } | null): obj is ExternalIdentityEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isExternalIdentityEdge"')
  return ExternalIdentityEdge_possibleTypes.includes(obj.__typename)
}



const ExternalIdentitySamlAttributes_possibleTypes: string[] = ['ExternalIdentitySamlAttributes']
export const isExternalIdentitySamlAttributes = (obj?: { __typename?: any } | null): obj is ExternalIdentitySamlAttributes => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isExternalIdentitySamlAttributes"')
  return ExternalIdentitySamlAttributes_possibleTypes.includes(obj.__typename)
}



const ExternalIdentityScimAttributes_possibleTypes: string[] = ['ExternalIdentityScimAttributes']
export const isExternalIdentityScimAttributes = (obj?: { __typename?: any } | null): obj is ExternalIdentityScimAttributes => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isExternalIdentityScimAttributes"')
  return ExternalIdentityScimAttributes_possibleTypes.includes(obj.__typename)
}



const FollowUserPayload_possibleTypes: string[] = ['FollowUserPayload']
export const isFollowUserPayload = (obj?: { __typename?: any } | null): obj is FollowUserPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isFollowUserPayload"')
  return FollowUserPayload_possibleTypes.includes(obj.__typename)
}



const FollowerConnection_possibleTypes: string[] = ['FollowerConnection']
export const isFollowerConnection = (obj?: { __typename?: any } | null): obj is FollowerConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isFollowerConnection"')
  return FollowerConnection_possibleTypes.includes(obj.__typename)
}



const FollowingConnection_possibleTypes: string[] = ['FollowingConnection']
export const isFollowingConnection = (obj?: { __typename?: any } | null): obj is FollowingConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isFollowingConnection"')
  return FollowingConnection_possibleTypes.includes(obj.__typename)
}



const FundingLink_possibleTypes: string[] = ['FundingLink']
export const isFundingLink = (obj?: { __typename?: any } | null): obj is FundingLink => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isFundingLink"')
  return FundingLink_possibleTypes.includes(obj.__typename)
}



const GenericHovercardContext_possibleTypes: string[] = ['GenericHovercardContext']
export const isGenericHovercardContext = (obj?: { __typename?: any } | null): obj is GenericHovercardContext => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGenericHovercardContext"')
  return GenericHovercardContext_possibleTypes.includes(obj.__typename)
}



const Gist_possibleTypes: string[] = ['Gist']
export const isGist = (obj?: { __typename?: any } | null): obj is Gist => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGist"')
  return Gist_possibleTypes.includes(obj.__typename)
}



const GistComment_possibleTypes: string[] = ['GistComment']
export const isGistComment = (obj?: { __typename?: any } | null): obj is GistComment => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGistComment"')
  return GistComment_possibleTypes.includes(obj.__typename)
}



const GistCommentConnection_possibleTypes: string[] = ['GistCommentConnection']
export const isGistCommentConnection = (obj?: { __typename?: any } | null): obj is GistCommentConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGistCommentConnection"')
  return GistCommentConnection_possibleTypes.includes(obj.__typename)
}



const GistCommentEdge_possibleTypes: string[] = ['GistCommentEdge']
export const isGistCommentEdge = (obj?: { __typename?: any } | null): obj is GistCommentEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGistCommentEdge"')
  return GistCommentEdge_possibleTypes.includes(obj.__typename)
}



const GistConnection_possibleTypes: string[] = ['GistConnection']
export const isGistConnection = (obj?: { __typename?: any } | null): obj is GistConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGistConnection"')
  return GistConnection_possibleTypes.includes(obj.__typename)
}



const GistEdge_possibleTypes: string[] = ['GistEdge']
export const isGistEdge = (obj?: { __typename?: any } | null): obj is GistEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGistEdge"')
  return GistEdge_possibleTypes.includes(obj.__typename)
}



const GistFile_possibleTypes: string[] = ['GistFile']
export const isGistFile = (obj?: { __typename?: any } | null): obj is GistFile => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGistFile"')
  return GistFile_possibleTypes.includes(obj.__typename)
}



const GitActor_possibleTypes: string[] = ['GitActor']
export const isGitActor = (obj?: { __typename?: any } | null): obj is GitActor => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGitActor"')
  return GitActor_possibleTypes.includes(obj.__typename)
}



const GitHubMetadata_possibleTypes: string[] = ['GitHubMetadata']
export const isGitHubMetadata = (obj?: { __typename?: any } | null): obj is GitHubMetadata => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGitHubMetadata"')
  return GitHubMetadata_possibleTypes.includes(obj.__typename)
}



const GitObject_possibleTypes: string[] = ['Blob','Commit','Tag','Tree']
export const isGitObject = (obj?: { __typename?: any } | null): obj is GitObject => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGitObject"')
  return GitObject_possibleTypes.includes(obj.__typename)
}



const GitSignature_possibleTypes: string[] = ['GpgSignature','SmimeSignature','UnknownSignature']
export const isGitSignature = (obj?: { __typename?: any } | null): obj is GitSignature => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGitSignature"')
  return GitSignature_possibleTypes.includes(obj.__typename)
}



const GpgSignature_possibleTypes: string[] = ['GpgSignature']
export const isGpgSignature = (obj?: { __typename?: any } | null): obj is GpgSignature => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isGpgSignature"')
  return GpgSignature_possibleTypes.includes(obj.__typename)
}



const HeadRefDeletedEvent_possibleTypes: string[] = ['HeadRefDeletedEvent']
export const isHeadRefDeletedEvent = (obj?: { __typename?: any } | null): obj is HeadRefDeletedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isHeadRefDeletedEvent"')
  return HeadRefDeletedEvent_possibleTypes.includes(obj.__typename)
}



const HeadRefForcePushedEvent_possibleTypes: string[] = ['HeadRefForcePushedEvent']
export const isHeadRefForcePushedEvent = (obj?: { __typename?: any } | null): obj is HeadRefForcePushedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isHeadRefForcePushedEvent"')
  return HeadRefForcePushedEvent_possibleTypes.includes(obj.__typename)
}



const HeadRefRestoredEvent_possibleTypes: string[] = ['HeadRefRestoredEvent']
export const isHeadRefRestoredEvent = (obj?: { __typename?: any } | null): obj is HeadRefRestoredEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isHeadRefRestoredEvent"')
  return HeadRefRestoredEvent_possibleTypes.includes(obj.__typename)
}



const Hovercard_possibleTypes: string[] = ['Hovercard']
export const isHovercard = (obj?: { __typename?: any } | null): obj is Hovercard => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isHovercard"')
  return Hovercard_possibleTypes.includes(obj.__typename)
}



const HovercardContext_possibleTypes: string[] = ['GenericHovercardContext','OrganizationTeamsHovercardContext','OrganizationsHovercardContext','ReviewStatusHovercardContext','ViewerHovercardContext']
export const isHovercardContext = (obj?: { __typename?: any } | null): obj is HovercardContext => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isHovercardContext"')
  return HovercardContext_possibleTypes.includes(obj.__typename)
}



const ImportProjectPayload_possibleTypes: string[] = ['ImportProjectPayload']
export const isImportProjectPayload = (obj?: { __typename?: any } | null): obj is ImportProjectPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isImportProjectPayload"')
  return ImportProjectPayload_possibleTypes.includes(obj.__typename)
}



const InviteEnterpriseAdminPayload_possibleTypes: string[] = ['InviteEnterpriseAdminPayload']
export const isInviteEnterpriseAdminPayload = (obj?: { __typename?: any } | null): obj is InviteEnterpriseAdminPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isInviteEnterpriseAdminPayload"')
  return InviteEnterpriseAdminPayload_possibleTypes.includes(obj.__typename)
}



const IpAllowListEntry_possibleTypes: string[] = ['IpAllowListEntry']
export const isIpAllowListEntry = (obj?: { __typename?: any } | null): obj is IpAllowListEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIpAllowListEntry"')
  return IpAllowListEntry_possibleTypes.includes(obj.__typename)
}



const IpAllowListEntryConnection_possibleTypes: string[] = ['IpAllowListEntryConnection']
export const isIpAllowListEntryConnection = (obj?: { __typename?: any } | null): obj is IpAllowListEntryConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIpAllowListEntryConnection"')
  return IpAllowListEntryConnection_possibleTypes.includes(obj.__typename)
}



const IpAllowListEntryEdge_possibleTypes: string[] = ['IpAllowListEntryEdge']
export const isIpAllowListEntryEdge = (obj?: { __typename?: any } | null): obj is IpAllowListEntryEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIpAllowListEntryEdge"')
  return IpAllowListEntryEdge_possibleTypes.includes(obj.__typename)
}



const IpAllowListOwner_possibleTypes: string[] = ['Enterprise','Organization']
export const isIpAllowListOwner = (obj?: { __typename?: any } | null): obj is IpAllowListOwner => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIpAllowListOwner"')
  return IpAllowListOwner_possibleTypes.includes(obj.__typename)
}



const Issue_possibleTypes: string[] = ['Issue']
export const isIssue = (obj?: { __typename?: any } | null): obj is Issue => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssue"')
  return Issue_possibleTypes.includes(obj.__typename)
}



const IssueComment_possibleTypes: string[] = ['IssueComment']
export const isIssueComment = (obj?: { __typename?: any } | null): obj is IssueComment => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueComment"')
  return IssueComment_possibleTypes.includes(obj.__typename)
}



const IssueCommentConnection_possibleTypes: string[] = ['IssueCommentConnection']
export const isIssueCommentConnection = (obj?: { __typename?: any } | null): obj is IssueCommentConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueCommentConnection"')
  return IssueCommentConnection_possibleTypes.includes(obj.__typename)
}



const IssueCommentEdge_possibleTypes: string[] = ['IssueCommentEdge']
export const isIssueCommentEdge = (obj?: { __typename?: any } | null): obj is IssueCommentEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueCommentEdge"')
  return IssueCommentEdge_possibleTypes.includes(obj.__typename)
}



const IssueConnection_possibleTypes: string[] = ['IssueConnection']
export const isIssueConnection = (obj?: { __typename?: any } | null): obj is IssueConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueConnection"')
  return IssueConnection_possibleTypes.includes(obj.__typename)
}



const IssueContributionsByRepository_possibleTypes: string[] = ['IssueContributionsByRepository']
export const isIssueContributionsByRepository = (obj?: { __typename?: any } | null): obj is IssueContributionsByRepository => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueContributionsByRepository"')
  return IssueContributionsByRepository_possibleTypes.includes(obj.__typename)
}



const IssueEdge_possibleTypes: string[] = ['IssueEdge']
export const isIssueEdge = (obj?: { __typename?: any } | null): obj is IssueEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueEdge"')
  return IssueEdge_possibleTypes.includes(obj.__typename)
}



const IssueOrPullRequest_possibleTypes: string[] = ['Issue','PullRequest']
export const isIssueOrPullRequest = (obj?: { __typename?: any } | null): obj is IssueOrPullRequest => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueOrPullRequest"')
  return IssueOrPullRequest_possibleTypes.includes(obj.__typename)
}



const IssueTimelineConnection_possibleTypes: string[] = ['IssueTimelineConnection']
export const isIssueTimelineConnection = (obj?: { __typename?: any } | null): obj is IssueTimelineConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueTimelineConnection"')
  return IssueTimelineConnection_possibleTypes.includes(obj.__typename)
}



const IssueTimelineItem_possibleTypes: string[] = ['AssignedEvent','ClosedEvent','Commit','CrossReferencedEvent','DemilestonedEvent','IssueComment','LabeledEvent','LockedEvent','MilestonedEvent','ReferencedEvent','RenamedTitleEvent','ReopenedEvent','SubscribedEvent','TransferredEvent','UnassignedEvent','UnlabeledEvent','UnlockedEvent','UnsubscribedEvent','UserBlockedEvent']
export const isIssueTimelineItem = (obj?: { __typename?: any } | null): obj is IssueTimelineItem => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueTimelineItem"')
  return IssueTimelineItem_possibleTypes.includes(obj.__typename)
}



const IssueTimelineItemEdge_possibleTypes: string[] = ['IssueTimelineItemEdge']
export const isIssueTimelineItemEdge = (obj?: { __typename?: any } | null): obj is IssueTimelineItemEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueTimelineItemEdge"')
  return IssueTimelineItemEdge_possibleTypes.includes(obj.__typename)
}



const IssueTimelineItems_possibleTypes: string[] = ['AddedToProjectEvent','AssignedEvent','ClosedEvent','CommentDeletedEvent','ConnectedEvent','ConvertedNoteToIssueEvent','CrossReferencedEvent','DemilestonedEvent','DisconnectedEvent','IssueComment','LabeledEvent','LockedEvent','MarkedAsDuplicateEvent','MentionedEvent','MilestonedEvent','MovedColumnsInProjectEvent','PinnedEvent','ReferencedEvent','RemovedFromProjectEvent','RenamedTitleEvent','ReopenedEvent','SubscribedEvent','TransferredEvent','UnassignedEvent','UnlabeledEvent','UnlockedEvent','UnmarkedAsDuplicateEvent','UnpinnedEvent','UnsubscribedEvent','UserBlockedEvent']
export const isIssueTimelineItems = (obj?: { __typename?: any } | null): obj is IssueTimelineItems => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueTimelineItems"')
  return IssueTimelineItems_possibleTypes.includes(obj.__typename)
}



const IssueTimelineItemsConnection_possibleTypes: string[] = ['IssueTimelineItemsConnection']
export const isIssueTimelineItemsConnection = (obj?: { __typename?: any } | null): obj is IssueTimelineItemsConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueTimelineItemsConnection"')
  return IssueTimelineItemsConnection_possibleTypes.includes(obj.__typename)
}



const IssueTimelineItemsEdge_possibleTypes: string[] = ['IssueTimelineItemsEdge']
export const isIssueTimelineItemsEdge = (obj?: { __typename?: any } | null): obj is IssueTimelineItemsEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isIssueTimelineItemsEdge"')
  return IssueTimelineItemsEdge_possibleTypes.includes(obj.__typename)
}



const JoinedGitHubContribution_possibleTypes: string[] = ['JoinedGitHubContribution']
export const isJoinedGitHubContribution = (obj?: { __typename?: any } | null): obj is JoinedGitHubContribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isJoinedGitHubContribution"')
  return JoinedGitHubContribution_possibleTypes.includes(obj.__typename)
}



const Label_possibleTypes: string[] = ['Label']
export const isLabel = (obj?: { __typename?: any } | null): obj is Label => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLabel"')
  return Label_possibleTypes.includes(obj.__typename)
}



const LabelConnection_possibleTypes: string[] = ['LabelConnection']
export const isLabelConnection = (obj?: { __typename?: any } | null): obj is LabelConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLabelConnection"')
  return LabelConnection_possibleTypes.includes(obj.__typename)
}



const LabelEdge_possibleTypes: string[] = ['LabelEdge']
export const isLabelEdge = (obj?: { __typename?: any } | null): obj is LabelEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLabelEdge"')
  return LabelEdge_possibleTypes.includes(obj.__typename)
}



const Labelable_possibleTypes: string[] = ['Issue','PullRequest']
export const isLabelable = (obj?: { __typename?: any } | null): obj is Labelable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLabelable"')
  return Labelable_possibleTypes.includes(obj.__typename)
}



const LabeledEvent_possibleTypes: string[] = ['LabeledEvent']
export const isLabeledEvent = (obj?: { __typename?: any } | null): obj is LabeledEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLabeledEvent"')
  return LabeledEvent_possibleTypes.includes(obj.__typename)
}



const Language_possibleTypes: string[] = ['Language']
export const isLanguage = (obj?: { __typename?: any } | null): obj is Language => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLanguage"')
  return Language_possibleTypes.includes(obj.__typename)
}



const LanguageConnection_possibleTypes: string[] = ['LanguageConnection']
export const isLanguageConnection = (obj?: { __typename?: any } | null): obj is LanguageConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLanguageConnection"')
  return LanguageConnection_possibleTypes.includes(obj.__typename)
}



const LanguageEdge_possibleTypes: string[] = ['LanguageEdge']
export const isLanguageEdge = (obj?: { __typename?: any } | null): obj is LanguageEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLanguageEdge"')
  return LanguageEdge_possibleTypes.includes(obj.__typename)
}



const License_possibleTypes: string[] = ['License']
export const isLicense = (obj?: { __typename?: any } | null): obj is License => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLicense"')
  return License_possibleTypes.includes(obj.__typename)
}



const LicenseRule_possibleTypes: string[] = ['LicenseRule']
export const isLicenseRule = (obj?: { __typename?: any } | null): obj is LicenseRule => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLicenseRule"')
  return LicenseRule_possibleTypes.includes(obj.__typename)
}



const LinkRepositoryToProjectPayload_possibleTypes: string[] = ['LinkRepositoryToProjectPayload']
export const isLinkRepositoryToProjectPayload = (obj?: { __typename?: any } | null): obj is LinkRepositoryToProjectPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLinkRepositoryToProjectPayload"')
  return LinkRepositoryToProjectPayload_possibleTypes.includes(obj.__typename)
}



const LockLockablePayload_possibleTypes: string[] = ['LockLockablePayload']
export const isLockLockablePayload = (obj?: { __typename?: any } | null): obj is LockLockablePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLockLockablePayload"')
  return LockLockablePayload_possibleTypes.includes(obj.__typename)
}



const Lockable_possibleTypes: string[] = ['Issue','PullRequest']
export const isLockable = (obj?: { __typename?: any } | null): obj is Lockable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLockable"')
  return Lockable_possibleTypes.includes(obj.__typename)
}



const LockedEvent_possibleTypes: string[] = ['LockedEvent']
export const isLockedEvent = (obj?: { __typename?: any } | null): obj is LockedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isLockedEvent"')
  return LockedEvent_possibleTypes.includes(obj.__typename)
}



const Mannequin_possibleTypes: string[] = ['Mannequin']
export const isMannequin = (obj?: { __typename?: any } | null): obj is Mannequin => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMannequin"')
  return Mannequin_possibleTypes.includes(obj.__typename)
}



const MarkPullRequestReadyForReviewPayload_possibleTypes: string[] = ['MarkPullRequestReadyForReviewPayload']
export const isMarkPullRequestReadyForReviewPayload = (obj?: { __typename?: any } | null): obj is MarkPullRequestReadyForReviewPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMarkPullRequestReadyForReviewPayload"')
  return MarkPullRequestReadyForReviewPayload_possibleTypes.includes(obj.__typename)
}



const MarkedAsDuplicateEvent_possibleTypes: string[] = ['MarkedAsDuplicateEvent']
export const isMarkedAsDuplicateEvent = (obj?: { __typename?: any } | null): obj is MarkedAsDuplicateEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMarkedAsDuplicateEvent"')
  return MarkedAsDuplicateEvent_possibleTypes.includes(obj.__typename)
}



const MarketplaceCategory_possibleTypes: string[] = ['MarketplaceCategory']
export const isMarketplaceCategory = (obj?: { __typename?: any } | null): obj is MarketplaceCategory => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMarketplaceCategory"')
  return MarketplaceCategory_possibleTypes.includes(obj.__typename)
}



const MarketplaceListing_possibleTypes: string[] = ['MarketplaceListing']
export const isMarketplaceListing = (obj?: { __typename?: any } | null): obj is MarketplaceListing => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMarketplaceListing"')
  return MarketplaceListing_possibleTypes.includes(obj.__typename)
}



const MarketplaceListingConnection_possibleTypes: string[] = ['MarketplaceListingConnection']
export const isMarketplaceListingConnection = (obj?: { __typename?: any } | null): obj is MarketplaceListingConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMarketplaceListingConnection"')
  return MarketplaceListingConnection_possibleTypes.includes(obj.__typename)
}



const MarketplaceListingEdge_possibleTypes: string[] = ['MarketplaceListingEdge']
export const isMarketplaceListingEdge = (obj?: { __typename?: any } | null): obj is MarketplaceListingEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMarketplaceListingEdge"')
  return MarketplaceListingEdge_possibleTypes.includes(obj.__typename)
}



const MemberStatusable_possibleTypes: string[] = ['Organization','Team']
export const isMemberStatusable = (obj?: { __typename?: any } | null): obj is MemberStatusable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMemberStatusable"')
  return MemberStatusable_possibleTypes.includes(obj.__typename)
}



const MembersCanDeleteReposClearAuditEntry_possibleTypes: string[] = ['MembersCanDeleteReposClearAuditEntry']
export const isMembersCanDeleteReposClearAuditEntry = (obj?: { __typename?: any } | null): obj is MembersCanDeleteReposClearAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMembersCanDeleteReposClearAuditEntry"')
  return MembersCanDeleteReposClearAuditEntry_possibleTypes.includes(obj.__typename)
}



const MembersCanDeleteReposDisableAuditEntry_possibleTypes: string[] = ['MembersCanDeleteReposDisableAuditEntry']
export const isMembersCanDeleteReposDisableAuditEntry = (obj?: { __typename?: any } | null): obj is MembersCanDeleteReposDisableAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMembersCanDeleteReposDisableAuditEntry"')
  return MembersCanDeleteReposDisableAuditEntry_possibleTypes.includes(obj.__typename)
}



const MembersCanDeleteReposEnableAuditEntry_possibleTypes: string[] = ['MembersCanDeleteReposEnableAuditEntry']
export const isMembersCanDeleteReposEnableAuditEntry = (obj?: { __typename?: any } | null): obj is MembersCanDeleteReposEnableAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMembersCanDeleteReposEnableAuditEntry"')
  return MembersCanDeleteReposEnableAuditEntry_possibleTypes.includes(obj.__typename)
}



const MentionedEvent_possibleTypes: string[] = ['MentionedEvent']
export const isMentionedEvent = (obj?: { __typename?: any } | null): obj is MentionedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMentionedEvent"')
  return MentionedEvent_possibleTypes.includes(obj.__typename)
}



const MergeBranchPayload_possibleTypes: string[] = ['MergeBranchPayload']
export const isMergeBranchPayload = (obj?: { __typename?: any } | null): obj is MergeBranchPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMergeBranchPayload"')
  return MergeBranchPayload_possibleTypes.includes(obj.__typename)
}



const MergePullRequestPayload_possibleTypes: string[] = ['MergePullRequestPayload']
export const isMergePullRequestPayload = (obj?: { __typename?: any } | null): obj is MergePullRequestPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMergePullRequestPayload"')
  return MergePullRequestPayload_possibleTypes.includes(obj.__typename)
}



const MergedEvent_possibleTypes: string[] = ['MergedEvent']
export const isMergedEvent = (obj?: { __typename?: any } | null): obj is MergedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMergedEvent"')
  return MergedEvent_possibleTypes.includes(obj.__typename)
}



const Milestone_possibleTypes: string[] = ['Milestone']
export const isMilestone = (obj?: { __typename?: any } | null): obj is Milestone => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMilestone"')
  return Milestone_possibleTypes.includes(obj.__typename)
}



const MilestoneConnection_possibleTypes: string[] = ['MilestoneConnection']
export const isMilestoneConnection = (obj?: { __typename?: any } | null): obj is MilestoneConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMilestoneConnection"')
  return MilestoneConnection_possibleTypes.includes(obj.__typename)
}



const MilestoneEdge_possibleTypes: string[] = ['MilestoneEdge']
export const isMilestoneEdge = (obj?: { __typename?: any } | null): obj is MilestoneEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMilestoneEdge"')
  return MilestoneEdge_possibleTypes.includes(obj.__typename)
}



const MilestoneItem_possibleTypes: string[] = ['Issue','PullRequest']
export const isMilestoneItem = (obj?: { __typename?: any } | null): obj is MilestoneItem => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMilestoneItem"')
  return MilestoneItem_possibleTypes.includes(obj.__typename)
}



const MilestonedEvent_possibleTypes: string[] = ['MilestonedEvent']
export const isMilestonedEvent = (obj?: { __typename?: any } | null): obj is MilestonedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMilestonedEvent"')
  return MilestonedEvent_possibleTypes.includes(obj.__typename)
}



const Minimizable_possibleTypes: string[] = ['CommitComment','GistComment','IssueComment','PullRequestReviewComment']
export const isMinimizable = (obj?: { __typename?: any } | null): obj is Minimizable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMinimizable"')
  return Minimizable_possibleTypes.includes(obj.__typename)
}



const MinimizeCommentPayload_possibleTypes: string[] = ['MinimizeCommentPayload']
export const isMinimizeCommentPayload = (obj?: { __typename?: any } | null): obj is MinimizeCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMinimizeCommentPayload"')
  return MinimizeCommentPayload_possibleTypes.includes(obj.__typename)
}



const MoveProjectCardPayload_possibleTypes: string[] = ['MoveProjectCardPayload']
export const isMoveProjectCardPayload = (obj?: { __typename?: any } | null): obj is MoveProjectCardPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMoveProjectCardPayload"')
  return MoveProjectCardPayload_possibleTypes.includes(obj.__typename)
}



const MoveProjectColumnPayload_possibleTypes: string[] = ['MoveProjectColumnPayload']
export const isMoveProjectColumnPayload = (obj?: { __typename?: any } | null): obj is MoveProjectColumnPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMoveProjectColumnPayload"')
  return MoveProjectColumnPayload_possibleTypes.includes(obj.__typename)
}



const MovedColumnsInProjectEvent_possibleTypes: string[] = ['MovedColumnsInProjectEvent']
export const isMovedColumnsInProjectEvent = (obj?: { __typename?: any } | null): obj is MovedColumnsInProjectEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMovedColumnsInProjectEvent"')
  return MovedColumnsInProjectEvent_possibleTypes.includes(obj.__typename)
}



const Mutation_possibleTypes: string[] = ['Mutation']
export const isMutation = (obj?: { __typename?: any } | null): obj is Mutation => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isMutation"')
  return Mutation_possibleTypes.includes(obj.__typename)
}



const Node_possibleTypes: string[] = ['AddedToProjectEvent','App','AssignedEvent','AutomaticBaseChangeFailedEvent','AutomaticBaseChangeSucceededEvent','BaseRefChangedEvent','BaseRefForcePushedEvent','Blob','Bot','BranchProtectionRule','CheckRun','CheckSuite','ClosedEvent','CodeOfConduct','CommentDeletedEvent','Commit','CommitComment','CommitCommentThread','ConnectedEvent','ConvertToDraftEvent','ConvertedNoteToIssueEvent','CrossReferencedEvent','DemilestonedEvent','DependencyGraphManifest','DeployKey','DeployedEvent','Deployment','DeploymentEnvironmentChangedEvent','DeploymentStatus','DisconnectedEvent','Enterprise','EnterpriseAdministratorInvitation','EnterpriseIdentityProvider','EnterpriseRepositoryInfo','EnterpriseServerInstallation','EnterpriseServerUserAccount','EnterpriseServerUserAccountEmail','EnterpriseServerUserAccountsUpload','EnterpriseUserAccount','ExternalIdentity','Gist','GistComment','HeadRefDeletedEvent','HeadRefForcePushedEvent','HeadRefRestoredEvent','IpAllowListEntry','Issue','IssueComment','Label','LabeledEvent','Language','License','LockedEvent','Mannequin','MarkedAsDuplicateEvent','MarketplaceCategory','MarketplaceListing','MembersCanDeleteReposClearAuditEntry','MembersCanDeleteReposDisableAuditEntry','MembersCanDeleteReposEnableAuditEntry','MentionedEvent','MergedEvent','Milestone','MilestonedEvent','MovedColumnsInProjectEvent','OauthApplicationCreateAuditEntry','OrgAddBillingManagerAuditEntry','OrgAddMemberAuditEntry','OrgBlockUserAuditEntry','OrgConfigDisableCollaboratorsOnlyAuditEntry','OrgConfigEnableCollaboratorsOnlyAuditEntry','OrgCreateAuditEntry','OrgDisableOauthAppRestrictionsAuditEntry','OrgDisableSamlAuditEntry','OrgDisableTwoFactorRequirementAuditEntry','OrgEnableOauthAppRestrictionsAuditEntry','OrgEnableSamlAuditEntry','OrgEnableTwoFactorRequirementAuditEntry','OrgInviteMemberAuditEntry','OrgInviteToBusinessAuditEntry','OrgOauthAppAccessApprovedAuditEntry','OrgOauthAppAccessDeniedAuditEntry','OrgOauthAppAccessRequestedAuditEntry','OrgRemoveBillingManagerAuditEntry','OrgRemoveMemberAuditEntry','OrgRemoveOutsideCollaboratorAuditEntry','OrgRestoreMemberAuditEntry','OrgUnblockUserAuditEntry','OrgUpdateDefaultRepositoryPermissionAuditEntry','OrgUpdateMemberAuditEntry','OrgUpdateMemberRepositoryCreationPermissionAuditEntry','OrgUpdateMemberRepositoryInvitationPermissionAuditEntry','Organization','OrganizationIdentityProvider','OrganizationInvitation','Package','PackageFile','PackageTag','PackageVersion','PinnedEvent','PinnedIssue','PrivateRepositoryForkingDisableAuditEntry','PrivateRepositoryForkingEnableAuditEntry','Project','ProjectCard','ProjectColumn','PublicKey','PullRequest','PullRequestCommit','PullRequestCommitCommentThread','PullRequestReview','PullRequestReviewComment','PullRequestReviewThread','Push','PushAllowance','Reaction','ReadyForReviewEvent','Ref','ReferencedEvent','RegistryPackage','RegistryPackageDependency','RegistryPackageFile','RegistryPackageTag','RegistryPackageVersion','Release','ReleaseAsset','RemovedFromProjectEvent','RenamedTitleEvent','ReopenedEvent','RepoAccessAuditEntry','RepoAddMemberAuditEntry','RepoAddTopicAuditEntry','RepoArchivedAuditEntry','RepoChangeMergeSettingAuditEntry','RepoConfigDisableAnonymousGitAccessAuditEntry','RepoConfigDisableCollaboratorsOnlyAuditEntry','RepoConfigDisableContributorsOnlyAuditEntry','RepoConfigDisableSockpuppetDisallowedAuditEntry','RepoConfigEnableAnonymousGitAccessAuditEntry','RepoConfigEnableCollaboratorsOnlyAuditEntry','RepoConfigEnableContributorsOnlyAuditEntry','RepoConfigEnableSockpuppetDisallowedAuditEntry','RepoConfigLockAnonymousGitAccessAuditEntry','RepoConfigUnlockAnonymousGitAccessAuditEntry','RepoCreateAuditEntry','RepoDestroyAuditEntry','RepoRemoveMemberAuditEntry','RepoRemoveTopicAuditEntry','Repository','RepositoryInvitation','RepositoryTopic','RepositoryVisibilityChangeDisableAuditEntry','RepositoryVisibilityChangeEnableAuditEntry','RepositoryVulnerabilityAlert','ReviewDismissalAllowance','ReviewDismissedEvent','ReviewRequest','ReviewRequestRemovedEvent','ReviewRequestedEvent','SavedReply','SecurityAdvisory','SponsorsListing','SponsorsTier','Sponsorship','Status','StatusCheckRollup','StatusContext','SubscribedEvent','Tag','Team','TeamAddMemberAuditEntry','TeamAddRepositoryAuditEntry','TeamChangeParentTeamAuditEntry','TeamDiscussion','TeamDiscussionComment','TeamRemoveMemberAuditEntry','TeamRemoveRepositoryAuditEntry','Topic','TransferredEvent','Tree','UnassignedEvent','UnlabeledEvent','UnlockedEvent','UnmarkedAsDuplicateEvent','UnpinnedEvent','UnsubscribedEvent','User','UserBlockedEvent','UserContentEdit','UserStatus']
export const isNode = (obj?: { __typename?: any } | null): obj is Node => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isNode"')
  return Node_possibleTypes.includes(obj.__typename)
}



const OauthApplicationAuditEntryData_possibleTypes: string[] = ['OauthApplicationCreateAuditEntry','OrgOauthAppAccessApprovedAuditEntry','OrgOauthAppAccessDeniedAuditEntry','OrgOauthAppAccessRequestedAuditEntry']
export const isOauthApplicationAuditEntryData = (obj?: { __typename?: any } | null): obj is OauthApplicationAuditEntryData => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOauthApplicationAuditEntryData"')
  return OauthApplicationAuditEntryData_possibleTypes.includes(obj.__typename)
}



const OauthApplicationCreateAuditEntry_possibleTypes: string[] = ['OauthApplicationCreateAuditEntry']
export const isOauthApplicationCreateAuditEntry = (obj?: { __typename?: any } | null): obj is OauthApplicationCreateAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOauthApplicationCreateAuditEntry"')
  return OauthApplicationCreateAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgAddBillingManagerAuditEntry_possibleTypes: string[] = ['OrgAddBillingManagerAuditEntry']
export const isOrgAddBillingManagerAuditEntry = (obj?: { __typename?: any } | null): obj is OrgAddBillingManagerAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgAddBillingManagerAuditEntry"')
  return OrgAddBillingManagerAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgAddMemberAuditEntry_possibleTypes: string[] = ['OrgAddMemberAuditEntry']
export const isOrgAddMemberAuditEntry = (obj?: { __typename?: any } | null): obj is OrgAddMemberAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgAddMemberAuditEntry"')
  return OrgAddMemberAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgBlockUserAuditEntry_possibleTypes: string[] = ['OrgBlockUserAuditEntry']
export const isOrgBlockUserAuditEntry = (obj?: { __typename?: any } | null): obj is OrgBlockUserAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgBlockUserAuditEntry"')
  return OrgBlockUserAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgConfigDisableCollaboratorsOnlyAuditEntry_possibleTypes: string[] = ['OrgConfigDisableCollaboratorsOnlyAuditEntry']
export const isOrgConfigDisableCollaboratorsOnlyAuditEntry = (obj?: { __typename?: any } | null): obj is OrgConfigDisableCollaboratorsOnlyAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgConfigDisableCollaboratorsOnlyAuditEntry"')
  return OrgConfigDisableCollaboratorsOnlyAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgConfigEnableCollaboratorsOnlyAuditEntry_possibleTypes: string[] = ['OrgConfigEnableCollaboratorsOnlyAuditEntry']
export const isOrgConfigEnableCollaboratorsOnlyAuditEntry = (obj?: { __typename?: any } | null): obj is OrgConfigEnableCollaboratorsOnlyAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgConfigEnableCollaboratorsOnlyAuditEntry"')
  return OrgConfigEnableCollaboratorsOnlyAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgCreateAuditEntry_possibleTypes: string[] = ['OrgCreateAuditEntry']
export const isOrgCreateAuditEntry = (obj?: { __typename?: any } | null): obj is OrgCreateAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgCreateAuditEntry"')
  return OrgCreateAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgDisableOauthAppRestrictionsAuditEntry_possibleTypes: string[] = ['OrgDisableOauthAppRestrictionsAuditEntry']
export const isOrgDisableOauthAppRestrictionsAuditEntry = (obj?: { __typename?: any } | null): obj is OrgDisableOauthAppRestrictionsAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgDisableOauthAppRestrictionsAuditEntry"')
  return OrgDisableOauthAppRestrictionsAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgDisableSamlAuditEntry_possibleTypes: string[] = ['OrgDisableSamlAuditEntry']
export const isOrgDisableSamlAuditEntry = (obj?: { __typename?: any } | null): obj is OrgDisableSamlAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgDisableSamlAuditEntry"')
  return OrgDisableSamlAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgDisableTwoFactorRequirementAuditEntry_possibleTypes: string[] = ['OrgDisableTwoFactorRequirementAuditEntry']
export const isOrgDisableTwoFactorRequirementAuditEntry = (obj?: { __typename?: any } | null): obj is OrgDisableTwoFactorRequirementAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgDisableTwoFactorRequirementAuditEntry"')
  return OrgDisableTwoFactorRequirementAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgEnableOauthAppRestrictionsAuditEntry_possibleTypes: string[] = ['OrgEnableOauthAppRestrictionsAuditEntry']
export const isOrgEnableOauthAppRestrictionsAuditEntry = (obj?: { __typename?: any } | null): obj is OrgEnableOauthAppRestrictionsAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgEnableOauthAppRestrictionsAuditEntry"')
  return OrgEnableOauthAppRestrictionsAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgEnableSamlAuditEntry_possibleTypes: string[] = ['OrgEnableSamlAuditEntry']
export const isOrgEnableSamlAuditEntry = (obj?: { __typename?: any } | null): obj is OrgEnableSamlAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgEnableSamlAuditEntry"')
  return OrgEnableSamlAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgEnableTwoFactorRequirementAuditEntry_possibleTypes: string[] = ['OrgEnableTwoFactorRequirementAuditEntry']
export const isOrgEnableTwoFactorRequirementAuditEntry = (obj?: { __typename?: any } | null): obj is OrgEnableTwoFactorRequirementAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgEnableTwoFactorRequirementAuditEntry"')
  return OrgEnableTwoFactorRequirementAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgInviteMemberAuditEntry_possibleTypes: string[] = ['OrgInviteMemberAuditEntry']
export const isOrgInviteMemberAuditEntry = (obj?: { __typename?: any } | null): obj is OrgInviteMemberAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgInviteMemberAuditEntry"')
  return OrgInviteMemberAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgInviteToBusinessAuditEntry_possibleTypes: string[] = ['OrgInviteToBusinessAuditEntry']
export const isOrgInviteToBusinessAuditEntry = (obj?: { __typename?: any } | null): obj is OrgInviteToBusinessAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgInviteToBusinessAuditEntry"')
  return OrgInviteToBusinessAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgOauthAppAccessApprovedAuditEntry_possibleTypes: string[] = ['OrgOauthAppAccessApprovedAuditEntry']
export const isOrgOauthAppAccessApprovedAuditEntry = (obj?: { __typename?: any } | null): obj is OrgOauthAppAccessApprovedAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgOauthAppAccessApprovedAuditEntry"')
  return OrgOauthAppAccessApprovedAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgOauthAppAccessDeniedAuditEntry_possibleTypes: string[] = ['OrgOauthAppAccessDeniedAuditEntry']
export const isOrgOauthAppAccessDeniedAuditEntry = (obj?: { __typename?: any } | null): obj is OrgOauthAppAccessDeniedAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgOauthAppAccessDeniedAuditEntry"')
  return OrgOauthAppAccessDeniedAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgOauthAppAccessRequestedAuditEntry_possibleTypes: string[] = ['OrgOauthAppAccessRequestedAuditEntry']
export const isOrgOauthAppAccessRequestedAuditEntry = (obj?: { __typename?: any } | null): obj is OrgOauthAppAccessRequestedAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgOauthAppAccessRequestedAuditEntry"')
  return OrgOauthAppAccessRequestedAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgRemoveBillingManagerAuditEntry_possibleTypes: string[] = ['OrgRemoveBillingManagerAuditEntry']
export const isOrgRemoveBillingManagerAuditEntry = (obj?: { __typename?: any } | null): obj is OrgRemoveBillingManagerAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgRemoveBillingManagerAuditEntry"')
  return OrgRemoveBillingManagerAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgRemoveMemberAuditEntry_possibleTypes: string[] = ['OrgRemoveMemberAuditEntry']
export const isOrgRemoveMemberAuditEntry = (obj?: { __typename?: any } | null): obj is OrgRemoveMemberAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgRemoveMemberAuditEntry"')
  return OrgRemoveMemberAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgRemoveOutsideCollaboratorAuditEntry_possibleTypes: string[] = ['OrgRemoveOutsideCollaboratorAuditEntry']
export const isOrgRemoveOutsideCollaboratorAuditEntry = (obj?: { __typename?: any } | null): obj is OrgRemoveOutsideCollaboratorAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgRemoveOutsideCollaboratorAuditEntry"')
  return OrgRemoveOutsideCollaboratorAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgRestoreMemberAuditEntry_possibleTypes: string[] = ['OrgRestoreMemberAuditEntry']
export const isOrgRestoreMemberAuditEntry = (obj?: { __typename?: any } | null): obj is OrgRestoreMemberAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgRestoreMemberAuditEntry"')
  return OrgRestoreMemberAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgRestoreMemberAuditEntryMembership_possibleTypes: string[] = ['OrgRestoreMemberMembershipOrganizationAuditEntryData','OrgRestoreMemberMembershipRepositoryAuditEntryData','OrgRestoreMemberMembershipTeamAuditEntryData']
export const isOrgRestoreMemberAuditEntryMembership = (obj?: { __typename?: any } | null): obj is OrgRestoreMemberAuditEntryMembership => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgRestoreMemberAuditEntryMembership"')
  return OrgRestoreMemberAuditEntryMembership_possibleTypes.includes(obj.__typename)
}



const OrgRestoreMemberMembershipOrganizationAuditEntryData_possibleTypes: string[] = ['OrgRestoreMemberMembershipOrganizationAuditEntryData']
export const isOrgRestoreMemberMembershipOrganizationAuditEntryData = (obj?: { __typename?: any } | null): obj is OrgRestoreMemberMembershipOrganizationAuditEntryData => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgRestoreMemberMembershipOrganizationAuditEntryData"')
  return OrgRestoreMemberMembershipOrganizationAuditEntryData_possibleTypes.includes(obj.__typename)
}



const OrgRestoreMemberMembershipRepositoryAuditEntryData_possibleTypes: string[] = ['OrgRestoreMemberMembershipRepositoryAuditEntryData']
export const isOrgRestoreMemberMembershipRepositoryAuditEntryData = (obj?: { __typename?: any } | null): obj is OrgRestoreMemberMembershipRepositoryAuditEntryData => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgRestoreMemberMembershipRepositoryAuditEntryData"')
  return OrgRestoreMemberMembershipRepositoryAuditEntryData_possibleTypes.includes(obj.__typename)
}



const OrgRestoreMemberMembershipTeamAuditEntryData_possibleTypes: string[] = ['OrgRestoreMemberMembershipTeamAuditEntryData']
export const isOrgRestoreMemberMembershipTeamAuditEntryData = (obj?: { __typename?: any } | null): obj is OrgRestoreMemberMembershipTeamAuditEntryData => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgRestoreMemberMembershipTeamAuditEntryData"')
  return OrgRestoreMemberMembershipTeamAuditEntryData_possibleTypes.includes(obj.__typename)
}



const OrgUnblockUserAuditEntry_possibleTypes: string[] = ['OrgUnblockUserAuditEntry']
export const isOrgUnblockUserAuditEntry = (obj?: { __typename?: any } | null): obj is OrgUnblockUserAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgUnblockUserAuditEntry"')
  return OrgUnblockUserAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgUpdateDefaultRepositoryPermissionAuditEntry_possibleTypes: string[] = ['OrgUpdateDefaultRepositoryPermissionAuditEntry']
export const isOrgUpdateDefaultRepositoryPermissionAuditEntry = (obj?: { __typename?: any } | null): obj is OrgUpdateDefaultRepositoryPermissionAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgUpdateDefaultRepositoryPermissionAuditEntry"')
  return OrgUpdateDefaultRepositoryPermissionAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgUpdateMemberAuditEntry_possibleTypes: string[] = ['OrgUpdateMemberAuditEntry']
export const isOrgUpdateMemberAuditEntry = (obj?: { __typename?: any } | null): obj is OrgUpdateMemberAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgUpdateMemberAuditEntry"')
  return OrgUpdateMemberAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgUpdateMemberRepositoryCreationPermissionAuditEntry_possibleTypes: string[] = ['OrgUpdateMemberRepositoryCreationPermissionAuditEntry']
export const isOrgUpdateMemberRepositoryCreationPermissionAuditEntry = (obj?: { __typename?: any } | null): obj is OrgUpdateMemberRepositoryCreationPermissionAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgUpdateMemberRepositoryCreationPermissionAuditEntry"')
  return OrgUpdateMemberRepositoryCreationPermissionAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrgUpdateMemberRepositoryInvitationPermissionAuditEntry_possibleTypes: string[] = ['OrgUpdateMemberRepositoryInvitationPermissionAuditEntry']
export const isOrgUpdateMemberRepositoryInvitationPermissionAuditEntry = (obj?: { __typename?: any } | null): obj is OrgUpdateMemberRepositoryInvitationPermissionAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrgUpdateMemberRepositoryInvitationPermissionAuditEntry"')
  return OrgUpdateMemberRepositoryInvitationPermissionAuditEntry_possibleTypes.includes(obj.__typename)
}



const Organization_possibleTypes: string[] = ['Organization']
export const isOrganization = (obj?: { __typename?: any } | null): obj is Organization => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganization"')
  return Organization_possibleTypes.includes(obj.__typename)
}



const OrganizationAuditEntry_possibleTypes: string[] = ['MembersCanDeleteReposClearAuditEntry','MembersCanDeleteReposDisableAuditEntry','MembersCanDeleteReposEnableAuditEntry','OauthApplicationCreateAuditEntry','OrgAddBillingManagerAuditEntry','OrgAddMemberAuditEntry','OrgBlockUserAuditEntry','OrgConfigDisableCollaboratorsOnlyAuditEntry','OrgConfigEnableCollaboratorsOnlyAuditEntry','OrgCreateAuditEntry','OrgDisableOauthAppRestrictionsAuditEntry','OrgDisableSamlAuditEntry','OrgDisableTwoFactorRequirementAuditEntry','OrgEnableOauthAppRestrictionsAuditEntry','OrgEnableSamlAuditEntry','OrgEnableTwoFactorRequirementAuditEntry','OrgInviteMemberAuditEntry','OrgInviteToBusinessAuditEntry','OrgOauthAppAccessApprovedAuditEntry','OrgOauthAppAccessDeniedAuditEntry','OrgOauthAppAccessRequestedAuditEntry','OrgRemoveBillingManagerAuditEntry','OrgRemoveMemberAuditEntry','OrgRemoveOutsideCollaboratorAuditEntry','OrgRestoreMemberAuditEntry','OrgUnblockUserAuditEntry','OrgUpdateDefaultRepositoryPermissionAuditEntry','OrgUpdateMemberAuditEntry','OrgUpdateMemberRepositoryCreationPermissionAuditEntry','OrgUpdateMemberRepositoryInvitationPermissionAuditEntry','PrivateRepositoryForkingDisableAuditEntry','PrivateRepositoryForkingEnableAuditEntry','RepoAccessAuditEntry','RepoAddMemberAuditEntry','RepoAddTopicAuditEntry','RepoArchivedAuditEntry','RepoChangeMergeSettingAuditEntry','RepoConfigDisableAnonymousGitAccessAuditEntry','RepoConfigDisableCollaboratorsOnlyAuditEntry','RepoConfigDisableContributorsOnlyAuditEntry','RepoConfigDisableSockpuppetDisallowedAuditEntry','RepoConfigEnableAnonymousGitAccessAuditEntry','RepoConfigEnableCollaboratorsOnlyAuditEntry','RepoConfigEnableContributorsOnlyAuditEntry','RepoConfigEnableSockpuppetDisallowedAuditEntry','RepoConfigLockAnonymousGitAccessAuditEntry','RepoConfigUnlockAnonymousGitAccessAuditEntry','RepoCreateAuditEntry','RepoDestroyAuditEntry','RepoRemoveMemberAuditEntry','RepoRemoveTopicAuditEntry','RepositoryVisibilityChangeDisableAuditEntry','RepositoryVisibilityChangeEnableAuditEntry','TeamAddMemberAuditEntry','TeamAddRepositoryAuditEntry','TeamChangeParentTeamAuditEntry','TeamRemoveMemberAuditEntry','TeamRemoveRepositoryAuditEntry']
export const isOrganizationAuditEntry = (obj?: { __typename?: any } | null): obj is OrganizationAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationAuditEntry"')
  return OrganizationAuditEntry_possibleTypes.includes(obj.__typename)
}



const OrganizationAuditEntryConnection_possibleTypes: string[] = ['OrganizationAuditEntryConnection']
export const isOrganizationAuditEntryConnection = (obj?: { __typename?: any } | null): obj is OrganizationAuditEntryConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationAuditEntryConnection"')
  return OrganizationAuditEntryConnection_possibleTypes.includes(obj.__typename)
}



const OrganizationAuditEntryData_possibleTypes: string[] = ['MembersCanDeleteReposClearAuditEntry','MembersCanDeleteReposDisableAuditEntry','MembersCanDeleteReposEnableAuditEntry','OauthApplicationCreateAuditEntry','OrgAddBillingManagerAuditEntry','OrgAddMemberAuditEntry','OrgBlockUserAuditEntry','OrgConfigDisableCollaboratorsOnlyAuditEntry','OrgConfigEnableCollaboratorsOnlyAuditEntry','OrgCreateAuditEntry','OrgDisableOauthAppRestrictionsAuditEntry','OrgDisableSamlAuditEntry','OrgDisableTwoFactorRequirementAuditEntry','OrgEnableOauthAppRestrictionsAuditEntry','OrgEnableSamlAuditEntry','OrgEnableTwoFactorRequirementAuditEntry','OrgInviteMemberAuditEntry','OrgInviteToBusinessAuditEntry','OrgOauthAppAccessApprovedAuditEntry','OrgOauthAppAccessDeniedAuditEntry','OrgOauthAppAccessRequestedAuditEntry','OrgRemoveBillingManagerAuditEntry','OrgRemoveMemberAuditEntry','OrgRemoveOutsideCollaboratorAuditEntry','OrgRestoreMemberAuditEntry','OrgRestoreMemberMembershipOrganizationAuditEntryData','OrgUnblockUserAuditEntry','OrgUpdateDefaultRepositoryPermissionAuditEntry','OrgUpdateMemberAuditEntry','OrgUpdateMemberRepositoryCreationPermissionAuditEntry','OrgUpdateMemberRepositoryInvitationPermissionAuditEntry','PrivateRepositoryForkingDisableAuditEntry','PrivateRepositoryForkingEnableAuditEntry','RepoAccessAuditEntry','RepoAddMemberAuditEntry','RepoAddTopicAuditEntry','RepoArchivedAuditEntry','RepoChangeMergeSettingAuditEntry','RepoConfigDisableAnonymousGitAccessAuditEntry','RepoConfigDisableCollaboratorsOnlyAuditEntry','RepoConfigDisableContributorsOnlyAuditEntry','RepoConfigDisableSockpuppetDisallowedAuditEntry','RepoConfigEnableAnonymousGitAccessAuditEntry','RepoConfigEnableCollaboratorsOnlyAuditEntry','RepoConfigEnableContributorsOnlyAuditEntry','RepoConfigEnableSockpuppetDisallowedAuditEntry','RepoConfigLockAnonymousGitAccessAuditEntry','RepoConfigUnlockAnonymousGitAccessAuditEntry','RepoCreateAuditEntry','RepoDestroyAuditEntry','RepoRemoveMemberAuditEntry','RepoRemoveTopicAuditEntry','RepositoryVisibilityChangeDisableAuditEntry','RepositoryVisibilityChangeEnableAuditEntry','TeamAddMemberAuditEntry','TeamAddRepositoryAuditEntry','TeamChangeParentTeamAuditEntry','TeamRemoveMemberAuditEntry','TeamRemoveRepositoryAuditEntry']
export const isOrganizationAuditEntryData = (obj?: { __typename?: any } | null): obj is OrganizationAuditEntryData => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationAuditEntryData"')
  return OrganizationAuditEntryData_possibleTypes.includes(obj.__typename)
}



const OrganizationAuditEntryEdge_possibleTypes: string[] = ['OrganizationAuditEntryEdge']
export const isOrganizationAuditEntryEdge = (obj?: { __typename?: any } | null): obj is OrganizationAuditEntryEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationAuditEntryEdge"')
  return OrganizationAuditEntryEdge_possibleTypes.includes(obj.__typename)
}



const OrganizationConnection_possibleTypes: string[] = ['OrganizationConnection']
export const isOrganizationConnection = (obj?: { __typename?: any } | null): obj is OrganizationConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationConnection"')
  return OrganizationConnection_possibleTypes.includes(obj.__typename)
}



const OrganizationEdge_possibleTypes: string[] = ['OrganizationEdge']
export const isOrganizationEdge = (obj?: { __typename?: any } | null): obj is OrganizationEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationEdge"')
  return OrganizationEdge_possibleTypes.includes(obj.__typename)
}



const OrganizationIdentityProvider_possibleTypes: string[] = ['OrganizationIdentityProvider']
export const isOrganizationIdentityProvider = (obj?: { __typename?: any } | null): obj is OrganizationIdentityProvider => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationIdentityProvider"')
  return OrganizationIdentityProvider_possibleTypes.includes(obj.__typename)
}



const OrganizationInvitation_possibleTypes: string[] = ['OrganizationInvitation']
export const isOrganizationInvitation = (obj?: { __typename?: any } | null): obj is OrganizationInvitation => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationInvitation"')
  return OrganizationInvitation_possibleTypes.includes(obj.__typename)
}



const OrganizationInvitationConnection_possibleTypes: string[] = ['OrganizationInvitationConnection']
export const isOrganizationInvitationConnection = (obj?: { __typename?: any } | null): obj is OrganizationInvitationConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationInvitationConnection"')
  return OrganizationInvitationConnection_possibleTypes.includes(obj.__typename)
}



const OrganizationInvitationEdge_possibleTypes: string[] = ['OrganizationInvitationEdge']
export const isOrganizationInvitationEdge = (obj?: { __typename?: any } | null): obj is OrganizationInvitationEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationInvitationEdge"')
  return OrganizationInvitationEdge_possibleTypes.includes(obj.__typename)
}



const OrganizationMemberConnection_possibleTypes: string[] = ['OrganizationMemberConnection']
export const isOrganizationMemberConnection = (obj?: { __typename?: any } | null): obj is OrganizationMemberConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationMemberConnection"')
  return OrganizationMemberConnection_possibleTypes.includes(obj.__typename)
}



const OrganizationMemberEdge_possibleTypes: string[] = ['OrganizationMemberEdge']
export const isOrganizationMemberEdge = (obj?: { __typename?: any } | null): obj is OrganizationMemberEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationMemberEdge"')
  return OrganizationMemberEdge_possibleTypes.includes(obj.__typename)
}



const OrganizationTeamsHovercardContext_possibleTypes: string[] = ['OrganizationTeamsHovercardContext']
export const isOrganizationTeamsHovercardContext = (obj?: { __typename?: any } | null): obj is OrganizationTeamsHovercardContext => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationTeamsHovercardContext"')
  return OrganizationTeamsHovercardContext_possibleTypes.includes(obj.__typename)
}



const OrganizationsHovercardContext_possibleTypes: string[] = ['OrganizationsHovercardContext']
export const isOrganizationsHovercardContext = (obj?: { __typename?: any } | null): obj is OrganizationsHovercardContext => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationsHovercardContext"')
  return OrganizationsHovercardContext_possibleTypes.includes(obj.__typename)
}



const Package_possibleTypes: string[] = ['Package']
export const isPackage = (obj?: { __typename?: any } | null): obj is Package => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackage"')
  return Package_possibleTypes.includes(obj.__typename)
}



const PackageConnection_possibleTypes: string[] = ['PackageConnection']
export const isPackageConnection = (obj?: { __typename?: any } | null): obj is PackageConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageConnection"')
  return PackageConnection_possibleTypes.includes(obj.__typename)
}



const PackageEdge_possibleTypes: string[] = ['PackageEdge']
export const isPackageEdge = (obj?: { __typename?: any } | null): obj is PackageEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageEdge"')
  return PackageEdge_possibleTypes.includes(obj.__typename)
}



const PackageFile_possibleTypes: string[] = ['PackageFile']
export const isPackageFile = (obj?: { __typename?: any } | null): obj is PackageFile => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageFile"')
  return PackageFile_possibleTypes.includes(obj.__typename)
}



const PackageFileConnection_possibleTypes: string[] = ['PackageFileConnection']
export const isPackageFileConnection = (obj?: { __typename?: any } | null): obj is PackageFileConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageFileConnection"')
  return PackageFileConnection_possibleTypes.includes(obj.__typename)
}



const PackageFileEdge_possibleTypes: string[] = ['PackageFileEdge']
export const isPackageFileEdge = (obj?: { __typename?: any } | null): obj is PackageFileEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageFileEdge"')
  return PackageFileEdge_possibleTypes.includes(obj.__typename)
}



const PackageOwner_possibleTypes: string[] = ['Organization','Repository','User']
export const isPackageOwner = (obj?: { __typename?: any } | null): obj is PackageOwner => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageOwner"')
  return PackageOwner_possibleTypes.includes(obj.__typename)
}



const PackageStatistics_possibleTypes: string[] = ['PackageStatistics']
export const isPackageStatistics = (obj?: { __typename?: any } | null): obj is PackageStatistics => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageStatistics"')
  return PackageStatistics_possibleTypes.includes(obj.__typename)
}



const PackageTag_possibleTypes: string[] = ['PackageTag']
export const isPackageTag = (obj?: { __typename?: any } | null): obj is PackageTag => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageTag"')
  return PackageTag_possibleTypes.includes(obj.__typename)
}



const PackageVersion_possibleTypes: string[] = ['PackageVersion']
export const isPackageVersion = (obj?: { __typename?: any } | null): obj is PackageVersion => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageVersion"')
  return PackageVersion_possibleTypes.includes(obj.__typename)
}



const PackageVersionConnection_possibleTypes: string[] = ['PackageVersionConnection']
export const isPackageVersionConnection = (obj?: { __typename?: any } | null): obj is PackageVersionConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageVersionConnection"')
  return PackageVersionConnection_possibleTypes.includes(obj.__typename)
}



const PackageVersionEdge_possibleTypes: string[] = ['PackageVersionEdge']
export const isPackageVersionEdge = (obj?: { __typename?: any } | null): obj is PackageVersionEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageVersionEdge"')
  return PackageVersionEdge_possibleTypes.includes(obj.__typename)
}



const PackageVersionStatistics_possibleTypes: string[] = ['PackageVersionStatistics']
export const isPackageVersionStatistics = (obj?: { __typename?: any } | null): obj is PackageVersionStatistics => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPackageVersionStatistics"')
  return PackageVersionStatistics_possibleTypes.includes(obj.__typename)
}



const PageInfo_possibleTypes: string[] = ['PageInfo']
export const isPageInfo = (obj?: { __typename?: any } | null): obj is PageInfo => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPageInfo"')
  return PageInfo_possibleTypes.includes(obj.__typename)
}



const PermissionGranter_possibleTypes: string[] = ['Organization','Repository','Team']
export const isPermissionGranter = (obj?: { __typename?: any } | null): obj is PermissionGranter => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPermissionGranter"')
  return PermissionGranter_possibleTypes.includes(obj.__typename)
}



const PermissionSource_possibleTypes: string[] = ['PermissionSource']
export const isPermissionSource = (obj?: { __typename?: any } | null): obj is PermissionSource => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPermissionSource"')
  return PermissionSource_possibleTypes.includes(obj.__typename)
}



const PinIssuePayload_possibleTypes: string[] = ['PinIssuePayload']
export const isPinIssuePayload = (obj?: { __typename?: any } | null): obj is PinIssuePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPinIssuePayload"')
  return PinIssuePayload_possibleTypes.includes(obj.__typename)
}



const PinnableItem_possibleTypes: string[] = ['Gist','Repository']
export const isPinnableItem = (obj?: { __typename?: any } | null): obj is PinnableItem => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPinnableItem"')
  return PinnableItem_possibleTypes.includes(obj.__typename)
}



const PinnableItemConnection_possibleTypes: string[] = ['PinnableItemConnection']
export const isPinnableItemConnection = (obj?: { __typename?: any } | null): obj is PinnableItemConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPinnableItemConnection"')
  return PinnableItemConnection_possibleTypes.includes(obj.__typename)
}



const PinnableItemEdge_possibleTypes: string[] = ['PinnableItemEdge']
export const isPinnableItemEdge = (obj?: { __typename?: any } | null): obj is PinnableItemEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPinnableItemEdge"')
  return PinnableItemEdge_possibleTypes.includes(obj.__typename)
}



const PinnedEvent_possibleTypes: string[] = ['PinnedEvent']
export const isPinnedEvent = (obj?: { __typename?: any } | null): obj is PinnedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPinnedEvent"')
  return PinnedEvent_possibleTypes.includes(obj.__typename)
}



const PinnedIssue_possibleTypes: string[] = ['PinnedIssue']
export const isPinnedIssue = (obj?: { __typename?: any } | null): obj is PinnedIssue => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPinnedIssue"')
  return PinnedIssue_possibleTypes.includes(obj.__typename)
}



const PinnedIssueConnection_possibleTypes: string[] = ['PinnedIssueConnection']
export const isPinnedIssueConnection = (obj?: { __typename?: any } | null): obj is PinnedIssueConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPinnedIssueConnection"')
  return PinnedIssueConnection_possibleTypes.includes(obj.__typename)
}



const PinnedIssueEdge_possibleTypes: string[] = ['PinnedIssueEdge']
export const isPinnedIssueEdge = (obj?: { __typename?: any } | null): obj is PinnedIssueEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPinnedIssueEdge"')
  return PinnedIssueEdge_possibleTypes.includes(obj.__typename)
}



const PrivateRepositoryForkingDisableAuditEntry_possibleTypes: string[] = ['PrivateRepositoryForkingDisableAuditEntry']
export const isPrivateRepositoryForkingDisableAuditEntry = (obj?: { __typename?: any } | null): obj is PrivateRepositoryForkingDisableAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPrivateRepositoryForkingDisableAuditEntry"')
  return PrivateRepositoryForkingDisableAuditEntry_possibleTypes.includes(obj.__typename)
}



const PrivateRepositoryForkingEnableAuditEntry_possibleTypes: string[] = ['PrivateRepositoryForkingEnableAuditEntry']
export const isPrivateRepositoryForkingEnableAuditEntry = (obj?: { __typename?: any } | null): obj is PrivateRepositoryForkingEnableAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPrivateRepositoryForkingEnableAuditEntry"')
  return PrivateRepositoryForkingEnableAuditEntry_possibleTypes.includes(obj.__typename)
}



const ProfileItemShowcase_possibleTypes: string[] = ['ProfileItemShowcase']
export const isProfileItemShowcase = (obj?: { __typename?: any } | null): obj is ProfileItemShowcase => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProfileItemShowcase"')
  return ProfileItemShowcase_possibleTypes.includes(obj.__typename)
}



const ProfileOwner_possibleTypes: string[] = ['Organization','User']
export const isProfileOwner = (obj?: { __typename?: any } | null): obj is ProfileOwner => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProfileOwner"')
  return ProfileOwner_possibleTypes.includes(obj.__typename)
}



const Project_possibleTypes: string[] = ['Project']
export const isProject = (obj?: { __typename?: any } | null): obj is Project => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProject"')
  return Project_possibleTypes.includes(obj.__typename)
}



const ProjectCard_possibleTypes: string[] = ['ProjectCard']
export const isProjectCard = (obj?: { __typename?: any } | null): obj is ProjectCard => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProjectCard"')
  return ProjectCard_possibleTypes.includes(obj.__typename)
}



const ProjectCardConnection_possibleTypes: string[] = ['ProjectCardConnection']
export const isProjectCardConnection = (obj?: { __typename?: any } | null): obj is ProjectCardConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProjectCardConnection"')
  return ProjectCardConnection_possibleTypes.includes(obj.__typename)
}



const ProjectCardEdge_possibleTypes: string[] = ['ProjectCardEdge']
export const isProjectCardEdge = (obj?: { __typename?: any } | null): obj is ProjectCardEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProjectCardEdge"')
  return ProjectCardEdge_possibleTypes.includes(obj.__typename)
}



const ProjectCardItem_possibleTypes: string[] = ['Issue','PullRequest']
export const isProjectCardItem = (obj?: { __typename?: any } | null): obj is ProjectCardItem => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProjectCardItem"')
  return ProjectCardItem_possibleTypes.includes(obj.__typename)
}



const ProjectColumn_possibleTypes: string[] = ['ProjectColumn']
export const isProjectColumn = (obj?: { __typename?: any } | null): obj is ProjectColumn => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProjectColumn"')
  return ProjectColumn_possibleTypes.includes(obj.__typename)
}



const ProjectColumnConnection_possibleTypes: string[] = ['ProjectColumnConnection']
export const isProjectColumnConnection = (obj?: { __typename?: any } | null): obj is ProjectColumnConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProjectColumnConnection"')
  return ProjectColumnConnection_possibleTypes.includes(obj.__typename)
}



const ProjectColumnEdge_possibleTypes: string[] = ['ProjectColumnEdge']
export const isProjectColumnEdge = (obj?: { __typename?: any } | null): obj is ProjectColumnEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProjectColumnEdge"')
  return ProjectColumnEdge_possibleTypes.includes(obj.__typename)
}



const ProjectConnection_possibleTypes: string[] = ['ProjectConnection']
export const isProjectConnection = (obj?: { __typename?: any } | null): obj is ProjectConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProjectConnection"')
  return ProjectConnection_possibleTypes.includes(obj.__typename)
}



const ProjectEdge_possibleTypes: string[] = ['ProjectEdge']
export const isProjectEdge = (obj?: { __typename?: any } | null): obj is ProjectEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProjectEdge"')
  return ProjectEdge_possibleTypes.includes(obj.__typename)
}



const ProjectOwner_possibleTypes: string[] = ['Organization','Repository','User']
export const isProjectOwner = (obj?: { __typename?: any } | null): obj is ProjectOwner => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isProjectOwner"')
  return ProjectOwner_possibleTypes.includes(obj.__typename)
}



const PublicKey_possibleTypes: string[] = ['PublicKey']
export const isPublicKey = (obj?: { __typename?: any } | null): obj is PublicKey => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPublicKey"')
  return PublicKey_possibleTypes.includes(obj.__typename)
}



const PublicKeyConnection_possibleTypes: string[] = ['PublicKeyConnection']
export const isPublicKeyConnection = (obj?: { __typename?: any } | null): obj is PublicKeyConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPublicKeyConnection"')
  return PublicKeyConnection_possibleTypes.includes(obj.__typename)
}



const PublicKeyEdge_possibleTypes: string[] = ['PublicKeyEdge']
export const isPublicKeyEdge = (obj?: { __typename?: any } | null): obj is PublicKeyEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPublicKeyEdge"')
  return PublicKeyEdge_possibleTypes.includes(obj.__typename)
}



const PullRequest_possibleTypes: string[] = ['PullRequest']
export const isPullRequest = (obj?: { __typename?: any } | null): obj is PullRequest => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequest"')
  return PullRequest_possibleTypes.includes(obj.__typename)
}



const PullRequestChangedFile_possibleTypes: string[] = ['PullRequestChangedFile']
export const isPullRequestChangedFile = (obj?: { __typename?: any } | null): obj is PullRequestChangedFile => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestChangedFile"')
  return PullRequestChangedFile_possibleTypes.includes(obj.__typename)
}



const PullRequestChangedFileConnection_possibleTypes: string[] = ['PullRequestChangedFileConnection']
export const isPullRequestChangedFileConnection = (obj?: { __typename?: any } | null): obj is PullRequestChangedFileConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestChangedFileConnection"')
  return PullRequestChangedFileConnection_possibleTypes.includes(obj.__typename)
}



const PullRequestChangedFileEdge_possibleTypes: string[] = ['PullRequestChangedFileEdge']
export const isPullRequestChangedFileEdge = (obj?: { __typename?: any } | null): obj is PullRequestChangedFileEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestChangedFileEdge"')
  return PullRequestChangedFileEdge_possibleTypes.includes(obj.__typename)
}



const PullRequestCommit_possibleTypes: string[] = ['PullRequestCommit']
export const isPullRequestCommit = (obj?: { __typename?: any } | null): obj is PullRequestCommit => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestCommit"')
  return PullRequestCommit_possibleTypes.includes(obj.__typename)
}



const PullRequestCommitCommentThread_possibleTypes: string[] = ['PullRequestCommitCommentThread']
export const isPullRequestCommitCommentThread = (obj?: { __typename?: any } | null): obj is PullRequestCommitCommentThread => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestCommitCommentThread"')
  return PullRequestCommitCommentThread_possibleTypes.includes(obj.__typename)
}



const PullRequestCommitConnection_possibleTypes: string[] = ['PullRequestCommitConnection']
export const isPullRequestCommitConnection = (obj?: { __typename?: any } | null): obj is PullRequestCommitConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestCommitConnection"')
  return PullRequestCommitConnection_possibleTypes.includes(obj.__typename)
}



const PullRequestCommitEdge_possibleTypes: string[] = ['PullRequestCommitEdge']
export const isPullRequestCommitEdge = (obj?: { __typename?: any } | null): obj is PullRequestCommitEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestCommitEdge"')
  return PullRequestCommitEdge_possibleTypes.includes(obj.__typename)
}



const PullRequestConnection_possibleTypes: string[] = ['PullRequestConnection']
export const isPullRequestConnection = (obj?: { __typename?: any } | null): obj is PullRequestConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestConnection"')
  return PullRequestConnection_possibleTypes.includes(obj.__typename)
}



const PullRequestContributionsByRepository_possibleTypes: string[] = ['PullRequestContributionsByRepository']
export const isPullRequestContributionsByRepository = (obj?: { __typename?: any } | null): obj is PullRequestContributionsByRepository => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestContributionsByRepository"')
  return PullRequestContributionsByRepository_possibleTypes.includes(obj.__typename)
}



const PullRequestEdge_possibleTypes: string[] = ['PullRequestEdge']
export const isPullRequestEdge = (obj?: { __typename?: any } | null): obj is PullRequestEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestEdge"')
  return PullRequestEdge_possibleTypes.includes(obj.__typename)
}



const PullRequestReview_possibleTypes: string[] = ['PullRequestReview']
export const isPullRequestReview = (obj?: { __typename?: any } | null): obj is PullRequestReview => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestReview"')
  return PullRequestReview_possibleTypes.includes(obj.__typename)
}



const PullRequestReviewComment_possibleTypes: string[] = ['PullRequestReviewComment']
export const isPullRequestReviewComment = (obj?: { __typename?: any } | null): obj is PullRequestReviewComment => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestReviewComment"')
  return PullRequestReviewComment_possibleTypes.includes(obj.__typename)
}



const PullRequestReviewCommentConnection_possibleTypes: string[] = ['PullRequestReviewCommentConnection']
export const isPullRequestReviewCommentConnection = (obj?: { __typename?: any } | null): obj is PullRequestReviewCommentConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestReviewCommentConnection"')
  return PullRequestReviewCommentConnection_possibleTypes.includes(obj.__typename)
}



const PullRequestReviewCommentEdge_possibleTypes: string[] = ['PullRequestReviewCommentEdge']
export const isPullRequestReviewCommentEdge = (obj?: { __typename?: any } | null): obj is PullRequestReviewCommentEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestReviewCommentEdge"')
  return PullRequestReviewCommentEdge_possibleTypes.includes(obj.__typename)
}



const PullRequestReviewConnection_possibleTypes: string[] = ['PullRequestReviewConnection']
export const isPullRequestReviewConnection = (obj?: { __typename?: any } | null): obj is PullRequestReviewConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestReviewConnection"')
  return PullRequestReviewConnection_possibleTypes.includes(obj.__typename)
}



const PullRequestReviewContributionsByRepository_possibleTypes: string[] = ['PullRequestReviewContributionsByRepository']
export const isPullRequestReviewContributionsByRepository = (obj?: { __typename?: any } | null): obj is PullRequestReviewContributionsByRepository => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestReviewContributionsByRepository"')
  return PullRequestReviewContributionsByRepository_possibleTypes.includes(obj.__typename)
}



const PullRequestReviewEdge_possibleTypes: string[] = ['PullRequestReviewEdge']
export const isPullRequestReviewEdge = (obj?: { __typename?: any } | null): obj is PullRequestReviewEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestReviewEdge"')
  return PullRequestReviewEdge_possibleTypes.includes(obj.__typename)
}



const PullRequestReviewThread_possibleTypes: string[] = ['PullRequestReviewThread']
export const isPullRequestReviewThread = (obj?: { __typename?: any } | null): obj is PullRequestReviewThread => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestReviewThread"')
  return PullRequestReviewThread_possibleTypes.includes(obj.__typename)
}



const PullRequestReviewThreadConnection_possibleTypes: string[] = ['PullRequestReviewThreadConnection']
export const isPullRequestReviewThreadConnection = (obj?: { __typename?: any } | null): obj is PullRequestReviewThreadConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestReviewThreadConnection"')
  return PullRequestReviewThreadConnection_possibleTypes.includes(obj.__typename)
}



const PullRequestReviewThreadEdge_possibleTypes: string[] = ['PullRequestReviewThreadEdge']
export const isPullRequestReviewThreadEdge = (obj?: { __typename?: any } | null): obj is PullRequestReviewThreadEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestReviewThreadEdge"')
  return PullRequestReviewThreadEdge_possibleTypes.includes(obj.__typename)
}



const PullRequestRevisionMarker_possibleTypes: string[] = ['PullRequestRevisionMarker']
export const isPullRequestRevisionMarker = (obj?: { __typename?: any } | null): obj is PullRequestRevisionMarker => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestRevisionMarker"')
  return PullRequestRevisionMarker_possibleTypes.includes(obj.__typename)
}



const PullRequestTimelineConnection_possibleTypes: string[] = ['PullRequestTimelineConnection']
export const isPullRequestTimelineConnection = (obj?: { __typename?: any } | null): obj is PullRequestTimelineConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestTimelineConnection"')
  return PullRequestTimelineConnection_possibleTypes.includes(obj.__typename)
}



const PullRequestTimelineItem_possibleTypes: string[] = ['AssignedEvent','BaseRefForcePushedEvent','ClosedEvent','Commit','CommitCommentThread','CrossReferencedEvent','DemilestonedEvent','DeployedEvent','DeploymentEnvironmentChangedEvent','HeadRefDeletedEvent','HeadRefForcePushedEvent','HeadRefRestoredEvent','IssueComment','LabeledEvent','LockedEvent','MergedEvent','MilestonedEvent','PullRequestReview','PullRequestReviewComment','PullRequestReviewThread','ReferencedEvent','RenamedTitleEvent','ReopenedEvent','ReviewDismissedEvent','ReviewRequestRemovedEvent','ReviewRequestedEvent','SubscribedEvent','UnassignedEvent','UnlabeledEvent','UnlockedEvent','UnsubscribedEvent','UserBlockedEvent']
export const isPullRequestTimelineItem = (obj?: { __typename?: any } | null): obj is PullRequestTimelineItem => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestTimelineItem"')
  return PullRequestTimelineItem_possibleTypes.includes(obj.__typename)
}



const PullRequestTimelineItemEdge_possibleTypes: string[] = ['PullRequestTimelineItemEdge']
export const isPullRequestTimelineItemEdge = (obj?: { __typename?: any } | null): obj is PullRequestTimelineItemEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestTimelineItemEdge"')
  return PullRequestTimelineItemEdge_possibleTypes.includes(obj.__typename)
}



const PullRequestTimelineItems_possibleTypes: string[] = ['AddedToProjectEvent','AssignedEvent','AutomaticBaseChangeFailedEvent','AutomaticBaseChangeSucceededEvent','BaseRefChangedEvent','BaseRefForcePushedEvent','ClosedEvent','CommentDeletedEvent','ConnectedEvent','ConvertToDraftEvent','ConvertedNoteToIssueEvent','CrossReferencedEvent','DemilestonedEvent','DeployedEvent','DeploymentEnvironmentChangedEvent','DisconnectedEvent','HeadRefDeletedEvent','HeadRefForcePushedEvent','HeadRefRestoredEvent','IssueComment','LabeledEvent','LockedEvent','MarkedAsDuplicateEvent','MentionedEvent','MergedEvent','MilestonedEvent','MovedColumnsInProjectEvent','PinnedEvent','PullRequestCommit','PullRequestCommitCommentThread','PullRequestReview','PullRequestReviewThread','PullRequestRevisionMarker','ReadyForReviewEvent','ReferencedEvent','RemovedFromProjectEvent','RenamedTitleEvent','ReopenedEvent','ReviewDismissedEvent','ReviewRequestRemovedEvent','ReviewRequestedEvent','SubscribedEvent','TransferredEvent','UnassignedEvent','UnlabeledEvent','UnlockedEvent','UnmarkedAsDuplicateEvent','UnpinnedEvent','UnsubscribedEvent','UserBlockedEvent']
export const isPullRequestTimelineItems = (obj?: { __typename?: any } | null): obj is PullRequestTimelineItems => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestTimelineItems"')
  return PullRequestTimelineItems_possibleTypes.includes(obj.__typename)
}



const PullRequestTimelineItemsConnection_possibleTypes: string[] = ['PullRequestTimelineItemsConnection']
export const isPullRequestTimelineItemsConnection = (obj?: { __typename?: any } | null): obj is PullRequestTimelineItemsConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestTimelineItemsConnection"')
  return PullRequestTimelineItemsConnection_possibleTypes.includes(obj.__typename)
}



const PullRequestTimelineItemsEdge_possibleTypes: string[] = ['PullRequestTimelineItemsEdge']
export const isPullRequestTimelineItemsEdge = (obj?: { __typename?: any } | null): obj is PullRequestTimelineItemsEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPullRequestTimelineItemsEdge"')
  return PullRequestTimelineItemsEdge_possibleTypes.includes(obj.__typename)
}



const Push_possibleTypes: string[] = ['Push']
export const isPush = (obj?: { __typename?: any } | null): obj is Push => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPush"')
  return Push_possibleTypes.includes(obj.__typename)
}



const PushAllowance_possibleTypes: string[] = ['PushAllowance']
export const isPushAllowance = (obj?: { __typename?: any } | null): obj is PushAllowance => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPushAllowance"')
  return PushAllowance_possibleTypes.includes(obj.__typename)
}



const PushAllowanceActor_possibleTypes: string[] = ['App','Team','User']
export const isPushAllowanceActor = (obj?: { __typename?: any } | null): obj is PushAllowanceActor => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPushAllowanceActor"')
  return PushAllowanceActor_possibleTypes.includes(obj.__typename)
}



const PushAllowanceConnection_possibleTypes: string[] = ['PushAllowanceConnection']
export const isPushAllowanceConnection = (obj?: { __typename?: any } | null): obj is PushAllowanceConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPushAllowanceConnection"')
  return PushAllowanceConnection_possibleTypes.includes(obj.__typename)
}



const PushAllowanceEdge_possibleTypes: string[] = ['PushAllowanceEdge']
export const isPushAllowanceEdge = (obj?: { __typename?: any } | null): obj is PushAllowanceEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isPushAllowanceEdge"')
  return PushAllowanceEdge_possibleTypes.includes(obj.__typename)
}



const Query_possibleTypes: string[] = ['Query']
export const isQuery = (obj?: { __typename?: any } | null): obj is Query => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isQuery"')
  return Query_possibleTypes.includes(obj.__typename)
}



const RateLimit_possibleTypes: string[] = ['RateLimit']
export const isRateLimit = (obj?: { __typename?: any } | null): obj is RateLimit => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRateLimit"')
  return RateLimit_possibleTypes.includes(obj.__typename)
}



const Reactable_possibleTypes: string[] = ['CommitComment','Issue','IssueComment','PullRequest','PullRequestReview','PullRequestReviewComment','TeamDiscussion','TeamDiscussionComment']
export const isReactable = (obj?: { __typename?: any } | null): obj is Reactable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReactable"')
  return Reactable_possibleTypes.includes(obj.__typename)
}



const ReactingUserConnection_possibleTypes: string[] = ['ReactingUserConnection']
export const isReactingUserConnection = (obj?: { __typename?: any } | null): obj is ReactingUserConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReactingUserConnection"')
  return ReactingUserConnection_possibleTypes.includes(obj.__typename)
}



const ReactingUserEdge_possibleTypes: string[] = ['ReactingUserEdge']
export const isReactingUserEdge = (obj?: { __typename?: any } | null): obj is ReactingUserEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReactingUserEdge"')
  return ReactingUserEdge_possibleTypes.includes(obj.__typename)
}



const Reaction_possibleTypes: string[] = ['Reaction']
export const isReaction = (obj?: { __typename?: any } | null): obj is Reaction => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReaction"')
  return Reaction_possibleTypes.includes(obj.__typename)
}



const ReactionConnection_possibleTypes: string[] = ['ReactionConnection']
export const isReactionConnection = (obj?: { __typename?: any } | null): obj is ReactionConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReactionConnection"')
  return ReactionConnection_possibleTypes.includes(obj.__typename)
}



const ReactionEdge_possibleTypes: string[] = ['ReactionEdge']
export const isReactionEdge = (obj?: { __typename?: any } | null): obj is ReactionEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReactionEdge"')
  return ReactionEdge_possibleTypes.includes(obj.__typename)
}



const ReactionGroup_possibleTypes: string[] = ['ReactionGroup']
export const isReactionGroup = (obj?: { __typename?: any } | null): obj is ReactionGroup => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReactionGroup"')
  return ReactionGroup_possibleTypes.includes(obj.__typename)
}



const ReadyForReviewEvent_possibleTypes: string[] = ['ReadyForReviewEvent']
export const isReadyForReviewEvent = (obj?: { __typename?: any } | null): obj is ReadyForReviewEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReadyForReviewEvent"')
  return ReadyForReviewEvent_possibleTypes.includes(obj.__typename)
}



const Ref_possibleTypes: string[] = ['Ref']
export const isRef = (obj?: { __typename?: any } | null): obj is Ref => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRef"')
  return Ref_possibleTypes.includes(obj.__typename)
}



const RefConnection_possibleTypes: string[] = ['RefConnection']
export const isRefConnection = (obj?: { __typename?: any } | null): obj is RefConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRefConnection"')
  return RefConnection_possibleTypes.includes(obj.__typename)
}



const RefEdge_possibleTypes: string[] = ['RefEdge']
export const isRefEdge = (obj?: { __typename?: any } | null): obj is RefEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRefEdge"')
  return RefEdge_possibleTypes.includes(obj.__typename)
}



const ReferencedEvent_possibleTypes: string[] = ['ReferencedEvent']
export const isReferencedEvent = (obj?: { __typename?: any } | null): obj is ReferencedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReferencedEvent"')
  return ReferencedEvent_possibleTypes.includes(obj.__typename)
}



const ReferencedSubject_possibleTypes: string[] = ['Issue','PullRequest']
export const isReferencedSubject = (obj?: { __typename?: any } | null): obj is ReferencedSubject => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReferencedSubject"')
  return ReferencedSubject_possibleTypes.includes(obj.__typename)
}



const RegenerateEnterpriseIdentityProviderRecoveryCodesPayload_possibleTypes: string[] = ['RegenerateEnterpriseIdentityProviderRecoveryCodesPayload']
export const isRegenerateEnterpriseIdentityProviderRecoveryCodesPayload = (obj?: { __typename?: any } | null): obj is RegenerateEnterpriseIdentityProviderRecoveryCodesPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegenerateEnterpriseIdentityProviderRecoveryCodesPayload"')
  return RegenerateEnterpriseIdentityProviderRecoveryCodesPayload_possibleTypes.includes(obj.__typename)
}



const RegistryPackage_possibleTypes: string[] = ['RegistryPackage']
export const isRegistryPackage = (obj?: { __typename?: any } | null): obj is RegistryPackage => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackage"')
  return RegistryPackage_possibleTypes.includes(obj.__typename)
}



const RegistryPackageConnection_possibleTypes: string[] = ['RegistryPackageConnection']
export const isRegistryPackageConnection = (obj?: { __typename?: any } | null): obj is RegistryPackageConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageConnection"')
  return RegistryPackageConnection_possibleTypes.includes(obj.__typename)
}



const RegistryPackageDependency_possibleTypes: string[] = ['RegistryPackageDependency']
export const isRegistryPackageDependency = (obj?: { __typename?: any } | null): obj is RegistryPackageDependency => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageDependency"')
  return RegistryPackageDependency_possibleTypes.includes(obj.__typename)
}



const RegistryPackageDependencyConnection_possibleTypes: string[] = ['RegistryPackageDependencyConnection']
export const isRegistryPackageDependencyConnection = (obj?: { __typename?: any } | null): obj is RegistryPackageDependencyConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageDependencyConnection"')
  return RegistryPackageDependencyConnection_possibleTypes.includes(obj.__typename)
}



const RegistryPackageDependencyEdge_possibleTypes: string[] = ['RegistryPackageDependencyEdge']
export const isRegistryPackageDependencyEdge = (obj?: { __typename?: any } | null): obj is RegistryPackageDependencyEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageDependencyEdge"')
  return RegistryPackageDependencyEdge_possibleTypes.includes(obj.__typename)
}



const RegistryPackageEdge_possibleTypes: string[] = ['RegistryPackageEdge']
export const isRegistryPackageEdge = (obj?: { __typename?: any } | null): obj is RegistryPackageEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageEdge"')
  return RegistryPackageEdge_possibleTypes.includes(obj.__typename)
}



const RegistryPackageFile_possibleTypes: string[] = ['RegistryPackageFile']
export const isRegistryPackageFile = (obj?: { __typename?: any } | null): obj is RegistryPackageFile => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageFile"')
  return RegistryPackageFile_possibleTypes.includes(obj.__typename)
}



const RegistryPackageFileConnection_possibleTypes: string[] = ['RegistryPackageFileConnection']
export const isRegistryPackageFileConnection = (obj?: { __typename?: any } | null): obj is RegistryPackageFileConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageFileConnection"')
  return RegistryPackageFileConnection_possibleTypes.includes(obj.__typename)
}



const RegistryPackageFileEdge_possibleTypes: string[] = ['RegistryPackageFileEdge']
export const isRegistryPackageFileEdge = (obj?: { __typename?: any } | null): obj is RegistryPackageFileEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageFileEdge"')
  return RegistryPackageFileEdge_possibleTypes.includes(obj.__typename)
}



const RegistryPackageOwner_possibleTypes: string[] = ['Organization','Repository','User']
export const isRegistryPackageOwner = (obj?: { __typename?: any } | null): obj is RegistryPackageOwner => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageOwner"')
  return RegistryPackageOwner_possibleTypes.includes(obj.__typename)
}



const RegistryPackageSearch_possibleTypes: string[] = ['Organization','Repository','User']
export const isRegistryPackageSearch = (obj?: { __typename?: any } | null): obj is RegistryPackageSearch => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageSearch"')
  return RegistryPackageSearch_possibleTypes.includes(obj.__typename)
}



const RegistryPackageStatistics_possibleTypes: string[] = ['RegistryPackageStatistics']
export const isRegistryPackageStatistics = (obj?: { __typename?: any } | null): obj is RegistryPackageStatistics => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageStatistics"')
  return RegistryPackageStatistics_possibleTypes.includes(obj.__typename)
}



const RegistryPackageTag_possibleTypes: string[] = ['RegistryPackageTag']
export const isRegistryPackageTag = (obj?: { __typename?: any } | null): obj is RegistryPackageTag => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageTag"')
  return RegistryPackageTag_possibleTypes.includes(obj.__typename)
}



const RegistryPackageTagConnection_possibleTypes: string[] = ['RegistryPackageTagConnection']
export const isRegistryPackageTagConnection = (obj?: { __typename?: any } | null): obj is RegistryPackageTagConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageTagConnection"')
  return RegistryPackageTagConnection_possibleTypes.includes(obj.__typename)
}



const RegistryPackageTagEdge_possibleTypes: string[] = ['RegistryPackageTagEdge']
export const isRegistryPackageTagEdge = (obj?: { __typename?: any } | null): obj is RegistryPackageTagEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageTagEdge"')
  return RegistryPackageTagEdge_possibleTypes.includes(obj.__typename)
}



const RegistryPackageVersion_possibleTypes: string[] = ['RegistryPackageVersion']
export const isRegistryPackageVersion = (obj?: { __typename?: any } | null): obj is RegistryPackageVersion => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageVersion"')
  return RegistryPackageVersion_possibleTypes.includes(obj.__typename)
}



const RegistryPackageVersionConnection_possibleTypes: string[] = ['RegistryPackageVersionConnection']
export const isRegistryPackageVersionConnection = (obj?: { __typename?: any } | null): obj is RegistryPackageVersionConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageVersionConnection"')
  return RegistryPackageVersionConnection_possibleTypes.includes(obj.__typename)
}



const RegistryPackageVersionEdge_possibleTypes: string[] = ['RegistryPackageVersionEdge']
export const isRegistryPackageVersionEdge = (obj?: { __typename?: any } | null): obj is RegistryPackageVersionEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageVersionEdge"')
  return RegistryPackageVersionEdge_possibleTypes.includes(obj.__typename)
}



const RegistryPackageVersionStatistics_possibleTypes: string[] = ['RegistryPackageVersionStatistics']
export const isRegistryPackageVersionStatistics = (obj?: { __typename?: any } | null): obj is RegistryPackageVersionStatistics => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRegistryPackageVersionStatistics"')
  return RegistryPackageVersionStatistics_possibleTypes.includes(obj.__typename)
}



const Release_possibleTypes: string[] = ['Release']
export const isRelease = (obj?: { __typename?: any } | null): obj is Release => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRelease"')
  return Release_possibleTypes.includes(obj.__typename)
}



const ReleaseAsset_possibleTypes: string[] = ['ReleaseAsset']
export const isReleaseAsset = (obj?: { __typename?: any } | null): obj is ReleaseAsset => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReleaseAsset"')
  return ReleaseAsset_possibleTypes.includes(obj.__typename)
}



const ReleaseAssetConnection_possibleTypes: string[] = ['ReleaseAssetConnection']
export const isReleaseAssetConnection = (obj?: { __typename?: any } | null): obj is ReleaseAssetConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReleaseAssetConnection"')
  return ReleaseAssetConnection_possibleTypes.includes(obj.__typename)
}



const ReleaseAssetEdge_possibleTypes: string[] = ['ReleaseAssetEdge']
export const isReleaseAssetEdge = (obj?: { __typename?: any } | null): obj is ReleaseAssetEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReleaseAssetEdge"')
  return ReleaseAssetEdge_possibleTypes.includes(obj.__typename)
}



const ReleaseConnection_possibleTypes: string[] = ['ReleaseConnection']
export const isReleaseConnection = (obj?: { __typename?: any } | null): obj is ReleaseConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReleaseConnection"')
  return ReleaseConnection_possibleTypes.includes(obj.__typename)
}



const ReleaseEdge_possibleTypes: string[] = ['ReleaseEdge']
export const isReleaseEdge = (obj?: { __typename?: any } | null): obj is ReleaseEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReleaseEdge"')
  return ReleaseEdge_possibleTypes.includes(obj.__typename)
}



const RemoveAssigneesFromAssignablePayload_possibleTypes: string[] = ['RemoveAssigneesFromAssignablePayload']
export const isRemoveAssigneesFromAssignablePayload = (obj?: { __typename?: any } | null): obj is RemoveAssigneesFromAssignablePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRemoveAssigneesFromAssignablePayload"')
  return RemoveAssigneesFromAssignablePayload_possibleTypes.includes(obj.__typename)
}



const RemoveEnterpriseAdminPayload_possibleTypes: string[] = ['RemoveEnterpriseAdminPayload']
export const isRemoveEnterpriseAdminPayload = (obj?: { __typename?: any } | null): obj is RemoveEnterpriseAdminPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRemoveEnterpriseAdminPayload"')
  return RemoveEnterpriseAdminPayload_possibleTypes.includes(obj.__typename)
}



const RemoveEnterpriseIdentityProviderPayload_possibleTypes: string[] = ['RemoveEnterpriseIdentityProviderPayload']
export const isRemoveEnterpriseIdentityProviderPayload = (obj?: { __typename?: any } | null): obj is RemoveEnterpriseIdentityProviderPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRemoveEnterpriseIdentityProviderPayload"')
  return RemoveEnterpriseIdentityProviderPayload_possibleTypes.includes(obj.__typename)
}



const RemoveEnterpriseOrganizationPayload_possibleTypes: string[] = ['RemoveEnterpriseOrganizationPayload']
export const isRemoveEnterpriseOrganizationPayload = (obj?: { __typename?: any } | null): obj is RemoveEnterpriseOrganizationPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRemoveEnterpriseOrganizationPayload"')
  return RemoveEnterpriseOrganizationPayload_possibleTypes.includes(obj.__typename)
}



const RemoveLabelsFromLabelablePayload_possibleTypes: string[] = ['RemoveLabelsFromLabelablePayload']
export const isRemoveLabelsFromLabelablePayload = (obj?: { __typename?: any } | null): obj is RemoveLabelsFromLabelablePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRemoveLabelsFromLabelablePayload"')
  return RemoveLabelsFromLabelablePayload_possibleTypes.includes(obj.__typename)
}



const RemoveOutsideCollaboratorPayload_possibleTypes: string[] = ['RemoveOutsideCollaboratorPayload']
export const isRemoveOutsideCollaboratorPayload = (obj?: { __typename?: any } | null): obj is RemoveOutsideCollaboratorPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRemoveOutsideCollaboratorPayload"')
  return RemoveOutsideCollaboratorPayload_possibleTypes.includes(obj.__typename)
}



const RemoveReactionPayload_possibleTypes: string[] = ['RemoveReactionPayload']
export const isRemoveReactionPayload = (obj?: { __typename?: any } | null): obj is RemoveReactionPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRemoveReactionPayload"')
  return RemoveReactionPayload_possibleTypes.includes(obj.__typename)
}



const RemoveStarPayload_possibleTypes: string[] = ['RemoveStarPayload']
export const isRemoveStarPayload = (obj?: { __typename?: any } | null): obj is RemoveStarPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRemoveStarPayload"')
  return RemoveStarPayload_possibleTypes.includes(obj.__typename)
}



const RemovedFromProjectEvent_possibleTypes: string[] = ['RemovedFromProjectEvent']
export const isRemovedFromProjectEvent = (obj?: { __typename?: any } | null): obj is RemovedFromProjectEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRemovedFromProjectEvent"')
  return RemovedFromProjectEvent_possibleTypes.includes(obj.__typename)
}



const RenamedTitleEvent_possibleTypes: string[] = ['RenamedTitleEvent']
export const isRenamedTitleEvent = (obj?: { __typename?: any } | null): obj is RenamedTitleEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRenamedTitleEvent"')
  return RenamedTitleEvent_possibleTypes.includes(obj.__typename)
}



const RenamedTitleSubject_possibleTypes: string[] = ['Issue','PullRequest']
export const isRenamedTitleSubject = (obj?: { __typename?: any } | null): obj is RenamedTitleSubject => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRenamedTitleSubject"')
  return RenamedTitleSubject_possibleTypes.includes(obj.__typename)
}



const ReopenIssuePayload_possibleTypes: string[] = ['ReopenIssuePayload']
export const isReopenIssuePayload = (obj?: { __typename?: any } | null): obj is ReopenIssuePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReopenIssuePayload"')
  return ReopenIssuePayload_possibleTypes.includes(obj.__typename)
}



const ReopenPullRequestPayload_possibleTypes: string[] = ['ReopenPullRequestPayload']
export const isReopenPullRequestPayload = (obj?: { __typename?: any } | null): obj is ReopenPullRequestPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReopenPullRequestPayload"')
  return ReopenPullRequestPayload_possibleTypes.includes(obj.__typename)
}



const ReopenedEvent_possibleTypes: string[] = ['ReopenedEvent']
export const isReopenedEvent = (obj?: { __typename?: any } | null): obj is ReopenedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReopenedEvent"')
  return ReopenedEvent_possibleTypes.includes(obj.__typename)
}



const RepoAccessAuditEntry_possibleTypes: string[] = ['RepoAccessAuditEntry']
export const isRepoAccessAuditEntry = (obj?: { __typename?: any } | null): obj is RepoAccessAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoAccessAuditEntry"')
  return RepoAccessAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoAddMemberAuditEntry_possibleTypes: string[] = ['RepoAddMemberAuditEntry']
export const isRepoAddMemberAuditEntry = (obj?: { __typename?: any } | null): obj is RepoAddMemberAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoAddMemberAuditEntry"')
  return RepoAddMemberAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoAddTopicAuditEntry_possibleTypes: string[] = ['RepoAddTopicAuditEntry']
export const isRepoAddTopicAuditEntry = (obj?: { __typename?: any } | null): obj is RepoAddTopicAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoAddTopicAuditEntry"')
  return RepoAddTopicAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoArchivedAuditEntry_possibleTypes: string[] = ['RepoArchivedAuditEntry']
export const isRepoArchivedAuditEntry = (obj?: { __typename?: any } | null): obj is RepoArchivedAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoArchivedAuditEntry"')
  return RepoArchivedAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoChangeMergeSettingAuditEntry_possibleTypes: string[] = ['RepoChangeMergeSettingAuditEntry']
export const isRepoChangeMergeSettingAuditEntry = (obj?: { __typename?: any } | null): obj is RepoChangeMergeSettingAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoChangeMergeSettingAuditEntry"')
  return RepoChangeMergeSettingAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoConfigDisableAnonymousGitAccessAuditEntry_possibleTypes: string[] = ['RepoConfigDisableAnonymousGitAccessAuditEntry']
export const isRepoConfigDisableAnonymousGitAccessAuditEntry = (obj?: { __typename?: any } | null): obj is RepoConfigDisableAnonymousGitAccessAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoConfigDisableAnonymousGitAccessAuditEntry"')
  return RepoConfigDisableAnonymousGitAccessAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoConfigDisableCollaboratorsOnlyAuditEntry_possibleTypes: string[] = ['RepoConfigDisableCollaboratorsOnlyAuditEntry']
export const isRepoConfigDisableCollaboratorsOnlyAuditEntry = (obj?: { __typename?: any } | null): obj is RepoConfigDisableCollaboratorsOnlyAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoConfigDisableCollaboratorsOnlyAuditEntry"')
  return RepoConfigDisableCollaboratorsOnlyAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoConfigDisableContributorsOnlyAuditEntry_possibleTypes: string[] = ['RepoConfigDisableContributorsOnlyAuditEntry']
export const isRepoConfigDisableContributorsOnlyAuditEntry = (obj?: { __typename?: any } | null): obj is RepoConfigDisableContributorsOnlyAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoConfigDisableContributorsOnlyAuditEntry"')
  return RepoConfigDisableContributorsOnlyAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoConfigDisableSockpuppetDisallowedAuditEntry_possibleTypes: string[] = ['RepoConfigDisableSockpuppetDisallowedAuditEntry']
export const isRepoConfigDisableSockpuppetDisallowedAuditEntry = (obj?: { __typename?: any } | null): obj is RepoConfigDisableSockpuppetDisallowedAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoConfigDisableSockpuppetDisallowedAuditEntry"')
  return RepoConfigDisableSockpuppetDisallowedAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoConfigEnableAnonymousGitAccessAuditEntry_possibleTypes: string[] = ['RepoConfigEnableAnonymousGitAccessAuditEntry']
export const isRepoConfigEnableAnonymousGitAccessAuditEntry = (obj?: { __typename?: any } | null): obj is RepoConfigEnableAnonymousGitAccessAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoConfigEnableAnonymousGitAccessAuditEntry"')
  return RepoConfigEnableAnonymousGitAccessAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoConfigEnableCollaboratorsOnlyAuditEntry_possibleTypes: string[] = ['RepoConfigEnableCollaboratorsOnlyAuditEntry']
export const isRepoConfigEnableCollaboratorsOnlyAuditEntry = (obj?: { __typename?: any } | null): obj is RepoConfigEnableCollaboratorsOnlyAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoConfigEnableCollaboratorsOnlyAuditEntry"')
  return RepoConfigEnableCollaboratorsOnlyAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoConfigEnableContributorsOnlyAuditEntry_possibleTypes: string[] = ['RepoConfigEnableContributorsOnlyAuditEntry']
export const isRepoConfigEnableContributorsOnlyAuditEntry = (obj?: { __typename?: any } | null): obj is RepoConfigEnableContributorsOnlyAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoConfigEnableContributorsOnlyAuditEntry"')
  return RepoConfigEnableContributorsOnlyAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoConfigEnableSockpuppetDisallowedAuditEntry_possibleTypes: string[] = ['RepoConfigEnableSockpuppetDisallowedAuditEntry']
export const isRepoConfigEnableSockpuppetDisallowedAuditEntry = (obj?: { __typename?: any } | null): obj is RepoConfigEnableSockpuppetDisallowedAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoConfigEnableSockpuppetDisallowedAuditEntry"')
  return RepoConfigEnableSockpuppetDisallowedAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoConfigLockAnonymousGitAccessAuditEntry_possibleTypes: string[] = ['RepoConfigLockAnonymousGitAccessAuditEntry']
export const isRepoConfigLockAnonymousGitAccessAuditEntry = (obj?: { __typename?: any } | null): obj is RepoConfigLockAnonymousGitAccessAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoConfigLockAnonymousGitAccessAuditEntry"')
  return RepoConfigLockAnonymousGitAccessAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoConfigUnlockAnonymousGitAccessAuditEntry_possibleTypes: string[] = ['RepoConfigUnlockAnonymousGitAccessAuditEntry']
export const isRepoConfigUnlockAnonymousGitAccessAuditEntry = (obj?: { __typename?: any } | null): obj is RepoConfigUnlockAnonymousGitAccessAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoConfigUnlockAnonymousGitAccessAuditEntry"')
  return RepoConfigUnlockAnonymousGitAccessAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoCreateAuditEntry_possibleTypes: string[] = ['RepoCreateAuditEntry']
export const isRepoCreateAuditEntry = (obj?: { __typename?: any } | null): obj is RepoCreateAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoCreateAuditEntry"')
  return RepoCreateAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoDestroyAuditEntry_possibleTypes: string[] = ['RepoDestroyAuditEntry']
export const isRepoDestroyAuditEntry = (obj?: { __typename?: any } | null): obj is RepoDestroyAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoDestroyAuditEntry"')
  return RepoDestroyAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoRemoveMemberAuditEntry_possibleTypes: string[] = ['RepoRemoveMemberAuditEntry']
export const isRepoRemoveMemberAuditEntry = (obj?: { __typename?: any } | null): obj is RepoRemoveMemberAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoRemoveMemberAuditEntry"')
  return RepoRemoveMemberAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepoRemoveTopicAuditEntry_possibleTypes: string[] = ['RepoRemoveTopicAuditEntry']
export const isRepoRemoveTopicAuditEntry = (obj?: { __typename?: any } | null): obj is RepoRemoveTopicAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepoRemoveTopicAuditEntry"')
  return RepoRemoveTopicAuditEntry_possibleTypes.includes(obj.__typename)
}



const Repository_possibleTypes: string[] = ['Repository']
export const isRepository = (obj?: { __typename?: any } | null): obj is Repository => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepository"')
  return Repository_possibleTypes.includes(obj.__typename)
}



const RepositoryAuditEntryData_possibleTypes: string[] = ['OrgRestoreMemberMembershipRepositoryAuditEntryData','PrivateRepositoryForkingDisableAuditEntry','PrivateRepositoryForkingEnableAuditEntry','RepoAccessAuditEntry','RepoAddMemberAuditEntry','RepoAddTopicAuditEntry','RepoArchivedAuditEntry','RepoChangeMergeSettingAuditEntry','RepoConfigDisableAnonymousGitAccessAuditEntry','RepoConfigDisableCollaboratorsOnlyAuditEntry','RepoConfigDisableContributorsOnlyAuditEntry','RepoConfigDisableSockpuppetDisallowedAuditEntry','RepoConfigEnableAnonymousGitAccessAuditEntry','RepoConfigEnableCollaboratorsOnlyAuditEntry','RepoConfigEnableContributorsOnlyAuditEntry','RepoConfigEnableSockpuppetDisallowedAuditEntry','RepoConfigLockAnonymousGitAccessAuditEntry','RepoConfigUnlockAnonymousGitAccessAuditEntry','RepoCreateAuditEntry','RepoDestroyAuditEntry','RepoRemoveMemberAuditEntry','RepoRemoveTopicAuditEntry','TeamAddRepositoryAuditEntry','TeamRemoveRepositoryAuditEntry']
export const isRepositoryAuditEntryData = (obj?: { __typename?: any } | null): obj is RepositoryAuditEntryData => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryAuditEntryData"')
  return RepositoryAuditEntryData_possibleTypes.includes(obj.__typename)
}



const RepositoryCollaboratorConnection_possibleTypes: string[] = ['RepositoryCollaboratorConnection']
export const isRepositoryCollaboratorConnection = (obj?: { __typename?: any } | null): obj is RepositoryCollaboratorConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryCollaboratorConnection"')
  return RepositoryCollaboratorConnection_possibleTypes.includes(obj.__typename)
}



const RepositoryCollaboratorEdge_possibleTypes: string[] = ['RepositoryCollaboratorEdge']
export const isRepositoryCollaboratorEdge = (obj?: { __typename?: any } | null): obj is RepositoryCollaboratorEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryCollaboratorEdge"')
  return RepositoryCollaboratorEdge_possibleTypes.includes(obj.__typename)
}



const RepositoryConnection_possibleTypes: string[] = ['RepositoryConnection']
export const isRepositoryConnection = (obj?: { __typename?: any } | null): obj is RepositoryConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryConnection"')
  return RepositoryConnection_possibleTypes.includes(obj.__typename)
}



const RepositoryEdge_possibleTypes: string[] = ['RepositoryEdge']
export const isRepositoryEdge = (obj?: { __typename?: any } | null): obj is RepositoryEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryEdge"')
  return RepositoryEdge_possibleTypes.includes(obj.__typename)
}



const RepositoryInfo_possibleTypes: string[] = ['Repository']
export const isRepositoryInfo = (obj?: { __typename?: any } | null): obj is RepositoryInfo => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryInfo"')
  return RepositoryInfo_possibleTypes.includes(obj.__typename)
}



const RepositoryInvitation_possibleTypes: string[] = ['RepositoryInvitation']
export const isRepositoryInvitation = (obj?: { __typename?: any } | null): obj is RepositoryInvitation => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryInvitation"')
  return RepositoryInvitation_possibleTypes.includes(obj.__typename)
}



const RepositoryInvitationConnection_possibleTypes: string[] = ['RepositoryInvitationConnection']
export const isRepositoryInvitationConnection = (obj?: { __typename?: any } | null): obj is RepositoryInvitationConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryInvitationConnection"')
  return RepositoryInvitationConnection_possibleTypes.includes(obj.__typename)
}



const RepositoryInvitationEdge_possibleTypes: string[] = ['RepositoryInvitationEdge']
export const isRepositoryInvitationEdge = (obj?: { __typename?: any } | null): obj is RepositoryInvitationEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryInvitationEdge"')
  return RepositoryInvitationEdge_possibleTypes.includes(obj.__typename)
}



const RepositoryNode_possibleTypes: string[] = ['CommitComment','CommitCommentThread','Issue','IssueComment','PullRequest','PullRequestCommitCommentThread','PullRequestReview','PullRequestReviewComment','RepositoryVulnerabilityAlert']
export const isRepositoryNode = (obj?: { __typename?: any } | null): obj is RepositoryNode => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryNode"')
  return RepositoryNode_possibleTypes.includes(obj.__typename)
}



const RepositoryOwner_possibleTypes: string[] = ['Organization','User']
export const isRepositoryOwner = (obj?: { __typename?: any } | null): obj is RepositoryOwner => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryOwner"')
  return RepositoryOwner_possibleTypes.includes(obj.__typename)
}



const RepositoryTopic_possibleTypes: string[] = ['RepositoryTopic']
export const isRepositoryTopic = (obj?: { __typename?: any } | null): obj is RepositoryTopic => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryTopic"')
  return RepositoryTopic_possibleTypes.includes(obj.__typename)
}



const RepositoryTopicConnection_possibleTypes: string[] = ['RepositoryTopicConnection']
export const isRepositoryTopicConnection = (obj?: { __typename?: any } | null): obj is RepositoryTopicConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryTopicConnection"')
  return RepositoryTopicConnection_possibleTypes.includes(obj.__typename)
}



const RepositoryTopicEdge_possibleTypes: string[] = ['RepositoryTopicEdge']
export const isRepositoryTopicEdge = (obj?: { __typename?: any } | null): obj is RepositoryTopicEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryTopicEdge"')
  return RepositoryTopicEdge_possibleTypes.includes(obj.__typename)
}



const RepositoryVisibilityChangeDisableAuditEntry_possibleTypes: string[] = ['RepositoryVisibilityChangeDisableAuditEntry']
export const isRepositoryVisibilityChangeDisableAuditEntry = (obj?: { __typename?: any } | null): obj is RepositoryVisibilityChangeDisableAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryVisibilityChangeDisableAuditEntry"')
  return RepositoryVisibilityChangeDisableAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepositoryVisibilityChangeEnableAuditEntry_possibleTypes: string[] = ['RepositoryVisibilityChangeEnableAuditEntry']
export const isRepositoryVisibilityChangeEnableAuditEntry = (obj?: { __typename?: any } | null): obj is RepositoryVisibilityChangeEnableAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryVisibilityChangeEnableAuditEntry"')
  return RepositoryVisibilityChangeEnableAuditEntry_possibleTypes.includes(obj.__typename)
}



const RepositoryVulnerabilityAlert_possibleTypes: string[] = ['RepositoryVulnerabilityAlert']
export const isRepositoryVulnerabilityAlert = (obj?: { __typename?: any } | null): obj is RepositoryVulnerabilityAlert => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryVulnerabilityAlert"')
  return RepositoryVulnerabilityAlert_possibleTypes.includes(obj.__typename)
}



const RepositoryVulnerabilityAlertConnection_possibleTypes: string[] = ['RepositoryVulnerabilityAlertConnection']
export const isRepositoryVulnerabilityAlertConnection = (obj?: { __typename?: any } | null): obj is RepositoryVulnerabilityAlertConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryVulnerabilityAlertConnection"')
  return RepositoryVulnerabilityAlertConnection_possibleTypes.includes(obj.__typename)
}



const RepositoryVulnerabilityAlertEdge_possibleTypes: string[] = ['RepositoryVulnerabilityAlertEdge']
export const isRepositoryVulnerabilityAlertEdge = (obj?: { __typename?: any } | null): obj is RepositoryVulnerabilityAlertEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRepositoryVulnerabilityAlertEdge"')
  return RepositoryVulnerabilityAlertEdge_possibleTypes.includes(obj.__typename)
}



const RequestReviewsPayload_possibleTypes: string[] = ['RequestReviewsPayload']
export const isRequestReviewsPayload = (obj?: { __typename?: any } | null): obj is RequestReviewsPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRequestReviewsPayload"')
  return RequestReviewsPayload_possibleTypes.includes(obj.__typename)
}



const RequestedReviewer_possibleTypes: string[] = ['Mannequin','Team','User']
export const isRequestedReviewer = (obj?: { __typename?: any } | null): obj is RequestedReviewer => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRequestedReviewer"')
  return RequestedReviewer_possibleTypes.includes(obj.__typename)
}



const RerequestCheckSuitePayload_possibleTypes: string[] = ['RerequestCheckSuitePayload']
export const isRerequestCheckSuitePayload = (obj?: { __typename?: any } | null): obj is RerequestCheckSuitePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRerequestCheckSuitePayload"')
  return RerequestCheckSuitePayload_possibleTypes.includes(obj.__typename)
}



const ResolveReviewThreadPayload_possibleTypes: string[] = ['ResolveReviewThreadPayload']
export const isResolveReviewThreadPayload = (obj?: { __typename?: any } | null): obj is ResolveReviewThreadPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isResolveReviewThreadPayload"')
  return ResolveReviewThreadPayload_possibleTypes.includes(obj.__typename)
}



const RestrictedContribution_possibleTypes: string[] = ['RestrictedContribution']
export const isRestrictedContribution = (obj?: { __typename?: any } | null): obj is RestrictedContribution => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isRestrictedContribution"')
  return RestrictedContribution_possibleTypes.includes(obj.__typename)
}



const ReviewDismissalAllowance_possibleTypes: string[] = ['ReviewDismissalAllowance']
export const isReviewDismissalAllowance = (obj?: { __typename?: any } | null): obj is ReviewDismissalAllowance => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewDismissalAllowance"')
  return ReviewDismissalAllowance_possibleTypes.includes(obj.__typename)
}



const ReviewDismissalAllowanceActor_possibleTypes: string[] = ['Team','User']
export const isReviewDismissalAllowanceActor = (obj?: { __typename?: any } | null): obj is ReviewDismissalAllowanceActor => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewDismissalAllowanceActor"')
  return ReviewDismissalAllowanceActor_possibleTypes.includes(obj.__typename)
}



const ReviewDismissalAllowanceConnection_possibleTypes: string[] = ['ReviewDismissalAllowanceConnection']
export const isReviewDismissalAllowanceConnection = (obj?: { __typename?: any } | null): obj is ReviewDismissalAllowanceConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewDismissalAllowanceConnection"')
  return ReviewDismissalAllowanceConnection_possibleTypes.includes(obj.__typename)
}



const ReviewDismissalAllowanceEdge_possibleTypes: string[] = ['ReviewDismissalAllowanceEdge']
export const isReviewDismissalAllowanceEdge = (obj?: { __typename?: any } | null): obj is ReviewDismissalAllowanceEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewDismissalAllowanceEdge"')
  return ReviewDismissalAllowanceEdge_possibleTypes.includes(obj.__typename)
}



const ReviewDismissedEvent_possibleTypes: string[] = ['ReviewDismissedEvent']
export const isReviewDismissedEvent = (obj?: { __typename?: any } | null): obj is ReviewDismissedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewDismissedEvent"')
  return ReviewDismissedEvent_possibleTypes.includes(obj.__typename)
}



const ReviewRequest_possibleTypes: string[] = ['ReviewRequest']
export const isReviewRequest = (obj?: { __typename?: any } | null): obj is ReviewRequest => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewRequest"')
  return ReviewRequest_possibleTypes.includes(obj.__typename)
}



const ReviewRequestConnection_possibleTypes: string[] = ['ReviewRequestConnection']
export const isReviewRequestConnection = (obj?: { __typename?: any } | null): obj is ReviewRequestConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewRequestConnection"')
  return ReviewRequestConnection_possibleTypes.includes(obj.__typename)
}



const ReviewRequestEdge_possibleTypes: string[] = ['ReviewRequestEdge']
export const isReviewRequestEdge = (obj?: { __typename?: any } | null): obj is ReviewRequestEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewRequestEdge"')
  return ReviewRequestEdge_possibleTypes.includes(obj.__typename)
}



const ReviewRequestRemovedEvent_possibleTypes: string[] = ['ReviewRequestRemovedEvent']
export const isReviewRequestRemovedEvent = (obj?: { __typename?: any } | null): obj is ReviewRequestRemovedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewRequestRemovedEvent"')
  return ReviewRequestRemovedEvent_possibleTypes.includes(obj.__typename)
}



const ReviewRequestedEvent_possibleTypes: string[] = ['ReviewRequestedEvent']
export const isReviewRequestedEvent = (obj?: { __typename?: any } | null): obj is ReviewRequestedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewRequestedEvent"')
  return ReviewRequestedEvent_possibleTypes.includes(obj.__typename)
}



const ReviewStatusHovercardContext_possibleTypes: string[] = ['ReviewStatusHovercardContext']
export const isReviewStatusHovercardContext = (obj?: { __typename?: any } | null): obj is ReviewStatusHovercardContext => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isReviewStatusHovercardContext"')
  return ReviewStatusHovercardContext_possibleTypes.includes(obj.__typename)
}



const SavedReply_possibleTypes: string[] = ['SavedReply']
export const isSavedReply = (obj?: { __typename?: any } | null): obj is SavedReply => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSavedReply"')
  return SavedReply_possibleTypes.includes(obj.__typename)
}



const SavedReplyConnection_possibleTypes: string[] = ['SavedReplyConnection']
export const isSavedReplyConnection = (obj?: { __typename?: any } | null): obj is SavedReplyConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSavedReplyConnection"')
  return SavedReplyConnection_possibleTypes.includes(obj.__typename)
}



const SavedReplyEdge_possibleTypes: string[] = ['SavedReplyEdge']
export const isSavedReplyEdge = (obj?: { __typename?: any } | null): obj is SavedReplyEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSavedReplyEdge"')
  return SavedReplyEdge_possibleTypes.includes(obj.__typename)
}



const SearchResultItem_possibleTypes: string[] = ['App','Issue','MarketplaceListing','Organization','PullRequest','Repository','User']
export const isSearchResultItem = (obj?: { __typename?: any } | null): obj is SearchResultItem => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSearchResultItem"')
  return SearchResultItem_possibleTypes.includes(obj.__typename)
}



const SearchResultItemConnection_possibleTypes: string[] = ['SearchResultItemConnection']
export const isSearchResultItemConnection = (obj?: { __typename?: any } | null): obj is SearchResultItemConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSearchResultItemConnection"')
  return SearchResultItemConnection_possibleTypes.includes(obj.__typename)
}



const SearchResultItemEdge_possibleTypes: string[] = ['SearchResultItemEdge']
export const isSearchResultItemEdge = (obj?: { __typename?: any } | null): obj is SearchResultItemEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSearchResultItemEdge"')
  return SearchResultItemEdge_possibleTypes.includes(obj.__typename)
}



const SecurityAdvisory_possibleTypes: string[] = ['SecurityAdvisory']
export const isSecurityAdvisory = (obj?: { __typename?: any } | null): obj is SecurityAdvisory => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityAdvisory"')
  return SecurityAdvisory_possibleTypes.includes(obj.__typename)
}



const SecurityAdvisoryConnection_possibleTypes: string[] = ['SecurityAdvisoryConnection']
export const isSecurityAdvisoryConnection = (obj?: { __typename?: any } | null): obj is SecurityAdvisoryConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityAdvisoryConnection"')
  return SecurityAdvisoryConnection_possibleTypes.includes(obj.__typename)
}



const SecurityAdvisoryEdge_possibleTypes: string[] = ['SecurityAdvisoryEdge']
export const isSecurityAdvisoryEdge = (obj?: { __typename?: any } | null): obj is SecurityAdvisoryEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityAdvisoryEdge"')
  return SecurityAdvisoryEdge_possibleTypes.includes(obj.__typename)
}



const SecurityAdvisoryIdentifier_possibleTypes: string[] = ['SecurityAdvisoryIdentifier']
export const isSecurityAdvisoryIdentifier = (obj?: { __typename?: any } | null): obj is SecurityAdvisoryIdentifier => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityAdvisoryIdentifier"')
  return SecurityAdvisoryIdentifier_possibleTypes.includes(obj.__typename)
}



const SecurityAdvisoryPackage_possibleTypes: string[] = ['SecurityAdvisoryPackage']
export const isSecurityAdvisoryPackage = (obj?: { __typename?: any } | null): obj is SecurityAdvisoryPackage => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityAdvisoryPackage"')
  return SecurityAdvisoryPackage_possibleTypes.includes(obj.__typename)
}



const SecurityAdvisoryPackageVersion_possibleTypes: string[] = ['SecurityAdvisoryPackageVersion']
export const isSecurityAdvisoryPackageVersion = (obj?: { __typename?: any } | null): obj is SecurityAdvisoryPackageVersion => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityAdvisoryPackageVersion"')
  return SecurityAdvisoryPackageVersion_possibleTypes.includes(obj.__typename)
}



const SecurityAdvisoryReference_possibleTypes: string[] = ['SecurityAdvisoryReference']
export const isSecurityAdvisoryReference = (obj?: { __typename?: any } | null): obj is SecurityAdvisoryReference => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityAdvisoryReference"')
  return SecurityAdvisoryReference_possibleTypes.includes(obj.__typename)
}



const SecurityVulnerability_possibleTypes: string[] = ['SecurityVulnerability']
export const isSecurityVulnerability = (obj?: { __typename?: any } | null): obj is SecurityVulnerability => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityVulnerability"')
  return SecurityVulnerability_possibleTypes.includes(obj.__typename)
}



const SecurityVulnerabilityConnection_possibleTypes: string[] = ['SecurityVulnerabilityConnection']
export const isSecurityVulnerabilityConnection = (obj?: { __typename?: any } | null): obj is SecurityVulnerabilityConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityVulnerabilityConnection"')
  return SecurityVulnerabilityConnection_possibleTypes.includes(obj.__typename)
}



const SecurityVulnerabilityEdge_possibleTypes: string[] = ['SecurityVulnerabilityEdge']
export const isSecurityVulnerabilityEdge = (obj?: { __typename?: any } | null): obj is SecurityVulnerabilityEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSecurityVulnerabilityEdge"')
  return SecurityVulnerabilityEdge_possibleTypes.includes(obj.__typename)
}



const SetEnterpriseIdentityProviderPayload_possibleTypes: string[] = ['SetEnterpriseIdentityProviderPayload']
export const isSetEnterpriseIdentityProviderPayload = (obj?: { __typename?: any } | null): obj is SetEnterpriseIdentityProviderPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSetEnterpriseIdentityProviderPayload"')
  return SetEnterpriseIdentityProviderPayload_possibleTypes.includes(obj.__typename)
}



const SmimeSignature_possibleTypes: string[] = ['SmimeSignature']
export const isSmimeSignature = (obj?: { __typename?: any } | null): obj is SmimeSignature => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSmimeSignature"')
  return SmimeSignature_possibleTypes.includes(obj.__typename)
}



const Sponsor_possibleTypes: string[] = ['Organization','User']
export const isSponsor = (obj?: { __typename?: any } | null): obj is Sponsor => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSponsor"')
  return Sponsor_possibleTypes.includes(obj.__typename)
}



const Sponsorable_possibleTypes: string[] = ['Organization','User']
export const isSponsorable = (obj?: { __typename?: any } | null): obj is Sponsorable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSponsorable"')
  return Sponsorable_possibleTypes.includes(obj.__typename)
}



const SponsorsListing_possibleTypes: string[] = ['SponsorsListing']
export const isSponsorsListing = (obj?: { __typename?: any } | null): obj is SponsorsListing => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSponsorsListing"')
  return SponsorsListing_possibleTypes.includes(obj.__typename)
}



const SponsorsTier_possibleTypes: string[] = ['SponsorsTier']
export const isSponsorsTier = (obj?: { __typename?: any } | null): obj is SponsorsTier => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSponsorsTier"')
  return SponsorsTier_possibleTypes.includes(obj.__typename)
}



const SponsorsTierAdminInfo_possibleTypes: string[] = ['SponsorsTierAdminInfo']
export const isSponsorsTierAdminInfo = (obj?: { __typename?: any } | null): obj is SponsorsTierAdminInfo => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSponsorsTierAdminInfo"')
  return SponsorsTierAdminInfo_possibleTypes.includes(obj.__typename)
}



const SponsorsTierConnection_possibleTypes: string[] = ['SponsorsTierConnection']
export const isSponsorsTierConnection = (obj?: { __typename?: any } | null): obj is SponsorsTierConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSponsorsTierConnection"')
  return SponsorsTierConnection_possibleTypes.includes(obj.__typename)
}



const SponsorsTierEdge_possibleTypes: string[] = ['SponsorsTierEdge']
export const isSponsorsTierEdge = (obj?: { __typename?: any } | null): obj is SponsorsTierEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSponsorsTierEdge"')
  return SponsorsTierEdge_possibleTypes.includes(obj.__typename)
}



const Sponsorship_possibleTypes: string[] = ['Sponsorship']
export const isSponsorship = (obj?: { __typename?: any } | null): obj is Sponsorship => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSponsorship"')
  return Sponsorship_possibleTypes.includes(obj.__typename)
}



const SponsorshipConnection_possibleTypes: string[] = ['SponsorshipConnection']
export const isSponsorshipConnection = (obj?: { __typename?: any } | null): obj is SponsorshipConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSponsorshipConnection"')
  return SponsorshipConnection_possibleTypes.includes(obj.__typename)
}



const SponsorshipEdge_possibleTypes: string[] = ['SponsorshipEdge']
export const isSponsorshipEdge = (obj?: { __typename?: any } | null): obj is SponsorshipEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSponsorshipEdge"')
  return SponsorshipEdge_possibleTypes.includes(obj.__typename)
}



const StargazerConnection_possibleTypes: string[] = ['StargazerConnection']
export const isStargazerConnection = (obj?: { __typename?: any } | null): obj is StargazerConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStargazerConnection"')
  return StargazerConnection_possibleTypes.includes(obj.__typename)
}



const StargazerEdge_possibleTypes: string[] = ['StargazerEdge']
export const isStargazerEdge = (obj?: { __typename?: any } | null): obj is StargazerEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStargazerEdge"')
  return StargazerEdge_possibleTypes.includes(obj.__typename)
}



const Starrable_possibleTypes: string[] = ['Gist','Repository','Topic']
export const isStarrable = (obj?: { __typename?: any } | null): obj is Starrable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStarrable"')
  return Starrable_possibleTypes.includes(obj.__typename)
}



const StarredRepositoryConnection_possibleTypes: string[] = ['StarredRepositoryConnection']
export const isStarredRepositoryConnection = (obj?: { __typename?: any } | null): obj is StarredRepositoryConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStarredRepositoryConnection"')
  return StarredRepositoryConnection_possibleTypes.includes(obj.__typename)
}



const StarredRepositoryEdge_possibleTypes: string[] = ['StarredRepositoryEdge']
export const isStarredRepositoryEdge = (obj?: { __typename?: any } | null): obj is StarredRepositoryEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStarredRepositoryEdge"')
  return StarredRepositoryEdge_possibleTypes.includes(obj.__typename)
}



const Status_possibleTypes: string[] = ['Status']
export const isStatus = (obj?: { __typename?: any } | null): obj is Status => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStatus"')
  return Status_possibleTypes.includes(obj.__typename)
}



const StatusCheckRollup_possibleTypes: string[] = ['StatusCheckRollup']
export const isStatusCheckRollup = (obj?: { __typename?: any } | null): obj is StatusCheckRollup => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStatusCheckRollup"')
  return StatusCheckRollup_possibleTypes.includes(obj.__typename)
}



const StatusCheckRollupContext_possibleTypes: string[] = ['CheckRun','StatusContext']
export const isStatusCheckRollupContext = (obj?: { __typename?: any } | null): obj is StatusCheckRollupContext => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStatusCheckRollupContext"')
  return StatusCheckRollupContext_possibleTypes.includes(obj.__typename)
}



const StatusCheckRollupContextConnection_possibleTypes: string[] = ['StatusCheckRollupContextConnection']
export const isStatusCheckRollupContextConnection = (obj?: { __typename?: any } | null): obj is StatusCheckRollupContextConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStatusCheckRollupContextConnection"')
  return StatusCheckRollupContextConnection_possibleTypes.includes(obj.__typename)
}



const StatusCheckRollupContextEdge_possibleTypes: string[] = ['StatusCheckRollupContextEdge']
export const isStatusCheckRollupContextEdge = (obj?: { __typename?: any } | null): obj is StatusCheckRollupContextEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStatusCheckRollupContextEdge"')
  return StatusCheckRollupContextEdge_possibleTypes.includes(obj.__typename)
}



const StatusContext_possibleTypes: string[] = ['StatusContext']
export const isStatusContext = (obj?: { __typename?: any } | null): obj is StatusContext => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isStatusContext"')
  return StatusContext_possibleTypes.includes(obj.__typename)
}



const SubmitPullRequestReviewPayload_possibleTypes: string[] = ['SubmitPullRequestReviewPayload']
export const isSubmitPullRequestReviewPayload = (obj?: { __typename?: any } | null): obj is SubmitPullRequestReviewPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSubmitPullRequestReviewPayload"')
  return SubmitPullRequestReviewPayload_possibleTypes.includes(obj.__typename)
}



const Submodule_possibleTypes: string[] = ['Submodule']
export const isSubmodule = (obj?: { __typename?: any } | null): obj is Submodule => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSubmodule"')
  return Submodule_possibleTypes.includes(obj.__typename)
}



const SubmoduleConnection_possibleTypes: string[] = ['SubmoduleConnection']
export const isSubmoduleConnection = (obj?: { __typename?: any } | null): obj is SubmoduleConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSubmoduleConnection"')
  return SubmoduleConnection_possibleTypes.includes(obj.__typename)
}



const SubmoduleEdge_possibleTypes: string[] = ['SubmoduleEdge']
export const isSubmoduleEdge = (obj?: { __typename?: any } | null): obj is SubmoduleEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSubmoduleEdge"')
  return SubmoduleEdge_possibleTypes.includes(obj.__typename)
}



const Subscribable_possibleTypes: string[] = ['Commit','Issue','PullRequest','Repository','Team','TeamDiscussion']
export const isSubscribable = (obj?: { __typename?: any } | null): obj is Subscribable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSubscribable"')
  return Subscribable_possibleTypes.includes(obj.__typename)
}



const SubscribedEvent_possibleTypes: string[] = ['SubscribedEvent']
export const isSubscribedEvent = (obj?: { __typename?: any } | null): obj is SubscribedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSubscribedEvent"')
  return SubscribedEvent_possibleTypes.includes(obj.__typename)
}



const SuggestedReviewer_possibleTypes: string[] = ['SuggestedReviewer']
export const isSuggestedReviewer = (obj?: { __typename?: any } | null): obj is SuggestedReviewer => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isSuggestedReviewer"')
  return SuggestedReviewer_possibleTypes.includes(obj.__typename)
}



const Tag_possibleTypes: string[] = ['Tag']
export const isTag = (obj?: { __typename?: any } | null): obj is Tag => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTag"')
  return Tag_possibleTypes.includes(obj.__typename)
}



const Team_possibleTypes: string[] = ['Team']
export const isTeam = (obj?: { __typename?: any } | null): obj is Team => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeam"')
  return Team_possibleTypes.includes(obj.__typename)
}



const TeamAddMemberAuditEntry_possibleTypes: string[] = ['TeamAddMemberAuditEntry']
export const isTeamAddMemberAuditEntry = (obj?: { __typename?: any } | null): obj is TeamAddMemberAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamAddMemberAuditEntry"')
  return TeamAddMemberAuditEntry_possibleTypes.includes(obj.__typename)
}



const TeamAddRepositoryAuditEntry_possibleTypes: string[] = ['TeamAddRepositoryAuditEntry']
export const isTeamAddRepositoryAuditEntry = (obj?: { __typename?: any } | null): obj is TeamAddRepositoryAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamAddRepositoryAuditEntry"')
  return TeamAddRepositoryAuditEntry_possibleTypes.includes(obj.__typename)
}



const TeamAuditEntryData_possibleTypes: string[] = ['OrgRestoreMemberMembershipTeamAuditEntryData','TeamAddMemberAuditEntry','TeamAddRepositoryAuditEntry','TeamChangeParentTeamAuditEntry','TeamRemoveMemberAuditEntry','TeamRemoveRepositoryAuditEntry']
export const isTeamAuditEntryData = (obj?: { __typename?: any } | null): obj is TeamAuditEntryData => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamAuditEntryData"')
  return TeamAuditEntryData_possibleTypes.includes(obj.__typename)
}



const TeamChangeParentTeamAuditEntry_possibleTypes: string[] = ['TeamChangeParentTeamAuditEntry']
export const isTeamChangeParentTeamAuditEntry = (obj?: { __typename?: any } | null): obj is TeamChangeParentTeamAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamChangeParentTeamAuditEntry"')
  return TeamChangeParentTeamAuditEntry_possibleTypes.includes(obj.__typename)
}



const TeamConnection_possibleTypes: string[] = ['TeamConnection']
export const isTeamConnection = (obj?: { __typename?: any } | null): obj is TeamConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamConnection"')
  return TeamConnection_possibleTypes.includes(obj.__typename)
}



const TeamDiscussion_possibleTypes: string[] = ['TeamDiscussion']
export const isTeamDiscussion = (obj?: { __typename?: any } | null): obj is TeamDiscussion => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamDiscussion"')
  return TeamDiscussion_possibleTypes.includes(obj.__typename)
}



const TeamDiscussionComment_possibleTypes: string[] = ['TeamDiscussionComment']
export const isTeamDiscussionComment = (obj?: { __typename?: any } | null): obj is TeamDiscussionComment => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamDiscussionComment"')
  return TeamDiscussionComment_possibleTypes.includes(obj.__typename)
}



const TeamDiscussionCommentConnection_possibleTypes: string[] = ['TeamDiscussionCommentConnection']
export const isTeamDiscussionCommentConnection = (obj?: { __typename?: any } | null): obj is TeamDiscussionCommentConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamDiscussionCommentConnection"')
  return TeamDiscussionCommentConnection_possibleTypes.includes(obj.__typename)
}



const TeamDiscussionCommentEdge_possibleTypes: string[] = ['TeamDiscussionCommentEdge']
export const isTeamDiscussionCommentEdge = (obj?: { __typename?: any } | null): obj is TeamDiscussionCommentEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamDiscussionCommentEdge"')
  return TeamDiscussionCommentEdge_possibleTypes.includes(obj.__typename)
}



const TeamDiscussionConnection_possibleTypes: string[] = ['TeamDiscussionConnection']
export const isTeamDiscussionConnection = (obj?: { __typename?: any } | null): obj is TeamDiscussionConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamDiscussionConnection"')
  return TeamDiscussionConnection_possibleTypes.includes(obj.__typename)
}



const TeamDiscussionEdge_possibleTypes: string[] = ['TeamDiscussionEdge']
export const isTeamDiscussionEdge = (obj?: { __typename?: any } | null): obj is TeamDiscussionEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamDiscussionEdge"')
  return TeamDiscussionEdge_possibleTypes.includes(obj.__typename)
}



const TeamEdge_possibleTypes: string[] = ['TeamEdge']
export const isTeamEdge = (obj?: { __typename?: any } | null): obj is TeamEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamEdge"')
  return TeamEdge_possibleTypes.includes(obj.__typename)
}



const TeamMemberConnection_possibleTypes: string[] = ['TeamMemberConnection']
export const isTeamMemberConnection = (obj?: { __typename?: any } | null): obj is TeamMemberConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamMemberConnection"')
  return TeamMemberConnection_possibleTypes.includes(obj.__typename)
}



const TeamMemberEdge_possibleTypes: string[] = ['TeamMemberEdge']
export const isTeamMemberEdge = (obj?: { __typename?: any } | null): obj is TeamMemberEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamMemberEdge"')
  return TeamMemberEdge_possibleTypes.includes(obj.__typename)
}



const TeamRemoveMemberAuditEntry_possibleTypes: string[] = ['TeamRemoveMemberAuditEntry']
export const isTeamRemoveMemberAuditEntry = (obj?: { __typename?: any } | null): obj is TeamRemoveMemberAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamRemoveMemberAuditEntry"')
  return TeamRemoveMemberAuditEntry_possibleTypes.includes(obj.__typename)
}



const TeamRemoveRepositoryAuditEntry_possibleTypes: string[] = ['TeamRemoveRepositoryAuditEntry']
export const isTeamRemoveRepositoryAuditEntry = (obj?: { __typename?: any } | null): obj is TeamRemoveRepositoryAuditEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamRemoveRepositoryAuditEntry"')
  return TeamRemoveRepositoryAuditEntry_possibleTypes.includes(obj.__typename)
}



const TeamRepositoryConnection_possibleTypes: string[] = ['TeamRepositoryConnection']
export const isTeamRepositoryConnection = (obj?: { __typename?: any } | null): obj is TeamRepositoryConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamRepositoryConnection"')
  return TeamRepositoryConnection_possibleTypes.includes(obj.__typename)
}



const TeamRepositoryEdge_possibleTypes: string[] = ['TeamRepositoryEdge']
export const isTeamRepositoryEdge = (obj?: { __typename?: any } | null): obj is TeamRepositoryEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTeamRepositoryEdge"')
  return TeamRepositoryEdge_possibleTypes.includes(obj.__typename)
}



const TextMatch_possibleTypes: string[] = ['TextMatch']
export const isTextMatch = (obj?: { __typename?: any } | null): obj is TextMatch => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTextMatch"')
  return TextMatch_possibleTypes.includes(obj.__typename)
}



const TextMatchHighlight_possibleTypes: string[] = ['TextMatchHighlight']
export const isTextMatchHighlight = (obj?: { __typename?: any } | null): obj is TextMatchHighlight => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTextMatchHighlight"')
  return TextMatchHighlight_possibleTypes.includes(obj.__typename)
}



const Topic_possibleTypes: string[] = ['Topic']
export const isTopic = (obj?: { __typename?: any } | null): obj is Topic => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTopic"')
  return Topic_possibleTypes.includes(obj.__typename)
}



const TopicAuditEntryData_possibleTypes: string[] = ['RepoAddTopicAuditEntry','RepoRemoveTopicAuditEntry']
export const isTopicAuditEntryData = (obj?: { __typename?: any } | null): obj is TopicAuditEntryData => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTopicAuditEntryData"')
  return TopicAuditEntryData_possibleTypes.includes(obj.__typename)
}



const TopicConnection_possibleTypes: string[] = ['TopicConnection']
export const isTopicConnection = (obj?: { __typename?: any } | null): obj is TopicConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTopicConnection"')
  return TopicConnection_possibleTypes.includes(obj.__typename)
}



const TopicEdge_possibleTypes: string[] = ['TopicEdge']
export const isTopicEdge = (obj?: { __typename?: any } | null): obj is TopicEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTopicEdge"')
  return TopicEdge_possibleTypes.includes(obj.__typename)
}



const TransferIssuePayload_possibleTypes: string[] = ['TransferIssuePayload']
export const isTransferIssuePayload = (obj?: { __typename?: any } | null): obj is TransferIssuePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTransferIssuePayload"')
  return TransferIssuePayload_possibleTypes.includes(obj.__typename)
}



const TransferredEvent_possibleTypes: string[] = ['TransferredEvent']
export const isTransferredEvent = (obj?: { __typename?: any } | null): obj is TransferredEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTransferredEvent"')
  return TransferredEvent_possibleTypes.includes(obj.__typename)
}



const Tree_possibleTypes: string[] = ['Tree']
export const isTree = (obj?: { __typename?: any } | null): obj is Tree => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTree"')
  return Tree_possibleTypes.includes(obj.__typename)
}



const TreeEntry_possibleTypes: string[] = ['TreeEntry']
export const isTreeEntry = (obj?: { __typename?: any } | null): obj is TreeEntry => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isTreeEntry"')
  return TreeEntry_possibleTypes.includes(obj.__typename)
}



const UnarchiveRepositoryPayload_possibleTypes: string[] = ['UnarchiveRepositoryPayload']
export const isUnarchiveRepositoryPayload = (obj?: { __typename?: any } | null): obj is UnarchiveRepositoryPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnarchiveRepositoryPayload"')
  return UnarchiveRepositoryPayload_possibleTypes.includes(obj.__typename)
}



const UnassignedEvent_possibleTypes: string[] = ['UnassignedEvent']
export const isUnassignedEvent = (obj?: { __typename?: any } | null): obj is UnassignedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnassignedEvent"')
  return UnassignedEvent_possibleTypes.includes(obj.__typename)
}



const UnfollowUserPayload_possibleTypes: string[] = ['UnfollowUserPayload']
export const isUnfollowUserPayload = (obj?: { __typename?: any } | null): obj is UnfollowUserPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnfollowUserPayload"')
  return UnfollowUserPayload_possibleTypes.includes(obj.__typename)
}



const UniformResourceLocatable_possibleTypes: string[] = ['Bot','CheckRun','ClosedEvent','Commit','ConvertToDraftEvent','CrossReferencedEvent','Gist','Issue','Mannequin','MergedEvent','Milestone','Organization','PullRequest','PullRequestCommit','ReadyForReviewEvent','Release','Repository','RepositoryTopic','ReviewDismissedEvent','TeamDiscussion','TeamDiscussionComment','User']
export const isUniformResourceLocatable = (obj?: { __typename?: any } | null): obj is UniformResourceLocatable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUniformResourceLocatable"')
  return UniformResourceLocatable_possibleTypes.includes(obj.__typename)
}



const UnknownSignature_possibleTypes: string[] = ['UnknownSignature']
export const isUnknownSignature = (obj?: { __typename?: any } | null): obj is UnknownSignature => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnknownSignature"')
  return UnknownSignature_possibleTypes.includes(obj.__typename)
}



const UnlabeledEvent_possibleTypes: string[] = ['UnlabeledEvent']
export const isUnlabeledEvent = (obj?: { __typename?: any } | null): obj is UnlabeledEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnlabeledEvent"')
  return UnlabeledEvent_possibleTypes.includes(obj.__typename)
}



const UnlinkRepositoryFromProjectPayload_possibleTypes: string[] = ['UnlinkRepositoryFromProjectPayload']
export const isUnlinkRepositoryFromProjectPayload = (obj?: { __typename?: any } | null): obj is UnlinkRepositoryFromProjectPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnlinkRepositoryFromProjectPayload"')
  return UnlinkRepositoryFromProjectPayload_possibleTypes.includes(obj.__typename)
}



const UnlockLockablePayload_possibleTypes: string[] = ['UnlockLockablePayload']
export const isUnlockLockablePayload = (obj?: { __typename?: any } | null): obj is UnlockLockablePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnlockLockablePayload"')
  return UnlockLockablePayload_possibleTypes.includes(obj.__typename)
}



const UnlockedEvent_possibleTypes: string[] = ['UnlockedEvent']
export const isUnlockedEvent = (obj?: { __typename?: any } | null): obj is UnlockedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnlockedEvent"')
  return UnlockedEvent_possibleTypes.includes(obj.__typename)
}



const UnmarkIssueAsDuplicatePayload_possibleTypes: string[] = ['UnmarkIssueAsDuplicatePayload']
export const isUnmarkIssueAsDuplicatePayload = (obj?: { __typename?: any } | null): obj is UnmarkIssueAsDuplicatePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnmarkIssueAsDuplicatePayload"')
  return UnmarkIssueAsDuplicatePayload_possibleTypes.includes(obj.__typename)
}



const UnmarkedAsDuplicateEvent_possibleTypes: string[] = ['UnmarkedAsDuplicateEvent']
export const isUnmarkedAsDuplicateEvent = (obj?: { __typename?: any } | null): obj is UnmarkedAsDuplicateEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnmarkedAsDuplicateEvent"')
  return UnmarkedAsDuplicateEvent_possibleTypes.includes(obj.__typename)
}



const UnminimizeCommentPayload_possibleTypes: string[] = ['UnminimizeCommentPayload']
export const isUnminimizeCommentPayload = (obj?: { __typename?: any } | null): obj is UnminimizeCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnminimizeCommentPayload"')
  return UnminimizeCommentPayload_possibleTypes.includes(obj.__typename)
}



const UnpinIssuePayload_possibleTypes: string[] = ['UnpinIssuePayload']
export const isUnpinIssuePayload = (obj?: { __typename?: any } | null): obj is UnpinIssuePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnpinIssuePayload"')
  return UnpinIssuePayload_possibleTypes.includes(obj.__typename)
}



const UnpinnedEvent_possibleTypes: string[] = ['UnpinnedEvent']
export const isUnpinnedEvent = (obj?: { __typename?: any } | null): obj is UnpinnedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnpinnedEvent"')
  return UnpinnedEvent_possibleTypes.includes(obj.__typename)
}



const UnresolveReviewThreadPayload_possibleTypes: string[] = ['UnresolveReviewThreadPayload']
export const isUnresolveReviewThreadPayload = (obj?: { __typename?: any } | null): obj is UnresolveReviewThreadPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnresolveReviewThreadPayload"')
  return UnresolveReviewThreadPayload_possibleTypes.includes(obj.__typename)
}



const UnsubscribedEvent_possibleTypes: string[] = ['UnsubscribedEvent']
export const isUnsubscribedEvent = (obj?: { __typename?: any } | null): obj is UnsubscribedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUnsubscribedEvent"')
  return UnsubscribedEvent_possibleTypes.includes(obj.__typename)
}



const Updatable_possibleTypes: string[] = ['CommitComment','GistComment','Issue','IssueComment','Project','PullRequest','PullRequestReview','PullRequestReviewComment','TeamDiscussion','TeamDiscussionComment']
export const isUpdatable = (obj?: { __typename?: any } | null): obj is Updatable => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdatable"')
  return Updatable_possibleTypes.includes(obj.__typename)
}



const UpdatableComment_possibleTypes: string[] = ['CommitComment','GistComment','Issue','IssueComment','PullRequest','PullRequestReview','PullRequestReviewComment','TeamDiscussion','TeamDiscussionComment']
export const isUpdatableComment = (obj?: { __typename?: any } | null): obj is UpdatableComment => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdatableComment"')
  return UpdatableComment_possibleTypes.includes(obj.__typename)
}



const UpdateBranchProtectionRulePayload_possibleTypes: string[] = ['UpdateBranchProtectionRulePayload']
export const isUpdateBranchProtectionRulePayload = (obj?: { __typename?: any } | null): obj is UpdateBranchProtectionRulePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateBranchProtectionRulePayload"')
  return UpdateBranchProtectionRulePayload_possibleTypes.includes(obj.__typename)
}



const UpdateCheckRunPayload_possibleTypes: string[] = ['UpdateCheckRunPayload']
export const isUpdateCheckRunPayload = (obj?: { __typename?: any } | null): obj is UpdateCheckRunPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateCheckRunPayload"')
  return UpdateCheckRunPayload_possibleTypes.includes(obj.__typename)
}



const UpdateCheckSuitePreferencesPayload_possibleTypes: string[] = ['UpdateCheckSuitePreferencesPayload']
export const isUpdateCheckSuitePreferencesPayload = (obj?: { __typename?: any } | null): obj is UpdateCheckSuitePreferencesPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateCheckSuitePreferencesPayload"')
  return UpdateCheckSuitePreferencesPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseActionExecutionCapabilitySettingPayload_possibleTypes: string[] = ['UpdateEnterpriseActionExecutionCapabilitySettingPayload']
export const isUpdateEnterpriseActionExecutionCapabilitySettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseActionExecutionCapabilitySettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseActionExecutionCapabilitySettingPayload"')
  return UpdateEnterpriseActionExecutionCapabilitySettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseAdministratorRolePayload_possibleTypes: string[] = ['UpdateEnterpriseAdministratorRolePayload']
export const isUpdateEnterpriseAdministratorRolePayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseAdministratorRolePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseAdministratorRolePayload"')
  return UpdateEnterpriseAdministratorRolePayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload']
export const isUpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload"')
  return UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseDefaultRepositoryPermissionSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseDefaultRepositoryPermissionSettingPayload']
export const isUpdateEnterpriseDefaultRepositoryPermissionSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseDefaultRepositoryPermissionSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseDefaultRepositoryPermissionSettingPayload"')
  return UpdateEnterpriseDefaultRepositoryPermissionSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload_possibleTypes: string[] = ['UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload']
export const isUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload"')
  return UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload']
export const isUpdateEnterpriseMembersCanCreateRepositoriesSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseMembersCanCreateRepositoriesSettingPayload"')
  return UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseMembersCanDeleteIssuesSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseMembersCanDeleteIssuesSettingPayload']
export const isUpdateEnterpriseMembersCanDeleteIssuesSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseMembersCanDeleteIssuesSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseMembersCanDeleteIssuesSettingPayload"')
  return UpdateEnterpriseMembersCanDeleteIssuesSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload']
export const isUpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload"')
  return UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload']
export const isUpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload"')
  return UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseMembersCanMakePurchasesSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseMembersCanMakePurchasesSettingPayload']
export const isUpdateEnterpriseMembersCanMakePurchasesSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseMembersCanMakePurchasesSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseMembersCanMakePurchasesSettingPayload"')
  return UpdateEnterpriseMembersCanMakePurchasesSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload']
export const isUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload"')
  return UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload']
export const isUpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload"')
  return UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseOrganizationProjectsSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseOrganizationProjectsSettingPayload']
export const isUpdateEnterpriseOrganizationProjectsSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseOrganizationProjectsSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseOrganizationProjectsSettingPayload"')
  return UpdateEnterpriseOrganizationProjectsSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseProfilePayload_possibleTypes: string[] = ['UpdateEnterpriseProfilePayload']
export const isUpdateEnterpriseProfilePayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseProfilePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseProfilePayload"')
  return UpdateEnterpriseProfilePayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseRepositoryProjectsSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseRepositoryProjectsSettingPayload']
export const isUpdateEnterpriseRepositoryProjectsSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseRepositoryProjectsSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseRepositoryProjectsSettingPayload"')
  return UpdateEnterpriseRepositoryProjectsSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseTeamDiscussionsSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseTeamDiscussionsSettingPayload']
export const isUpdateEnterpriseTeamDiscussionsSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseTeamDiscussionsSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseTeamDiscussionsSettingPayload"')
  return UpdateEnterpriseTeamDiscussionsSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload_possibleTypes: string[] = ['UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload']
export const isUpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload"')
  return UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateIpAllowListEnabledSettingPayload_possibleTypes: string[] = ['UpdateIpAllowListEnabledSettingPayload']
export const isUpdateIpAllowListEnabledSettingPayload = (obj?: { __typename?: any } | null): obj is UpdateIpAllowListEnabledSettingPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateIpAllowListEnabledSettingPayload"')
  return UpdateIpAllowListEnabledSettingPayload_possibleTypes.includes(obj.__typename)
}



const UpdateIpAllowListEntryPayload_possibleTypes: string[] = ['UpdateIpAllowListEntryPayload']
export const isUpdateIpAllowListEntryPayload = (obj?: { __typename?: any } | null): obj is UpdateIpAllowListEntryPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateIpAllowListEntryPayload"')
  return UpdateIpAllowListEntryPayload_possibleTypes.includes(obj.__typename)
}



const UpdateIssueCommentPayload_possibleTypes: string[] = ['UpdateIssueCommentPayload']
export const isUpdateIssueCommentPayload = (obj?: { __typename?: any } | null): obj is UpdateIssueCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateIssueCommentPayload"')
  return UpdateIssueCommentPayload_possibleTypes.includes(obj.__typename)
}



const UpdateIssuePayload_possibleTypes: string[] = ['UpdateIssuePayload']
export const isUpdateIssuePayload = (obj?: { __typename?: any } | null): obj is UpdateIssuePayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateIssuePayload"')
  return UpdateIssuePayload_possibleTypes.includes(obj.__typename)
}



const UpdateLabelPayload_possibleTypes: string[] = ['UpdateLabelPayload']
export const isUpdateLabelPayload = (obj?: { __typename?: any } | null): obj is UpdateLabelPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateLabelPayload"')
  return UpdateLabelPayload_possibleTypes.includes(obj.__typename)
}



const UpdateProjectCardPayload_possibleTypes: string[] = ['UpdateProjectCardPayload']
export const isUpdateProjectCardPayload = (obj?: { __typename?: any } | null): obj is UpdateProjectCardPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateProjectCardPayload"')
  return UpdateProjectCardPayload_possibleTypes.includes(obj.__typename)
}



const UpdateProjectColumnPayload_possibleTypes: string[] = ['UpdateProjectColumnPayload']
export const isUpdateProjectColumnPayload = (obj?: { __typename?: any } | null): obj is UpdateProjectColumnPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateProjectColumnPayload"')
  return UpdateProjectColumnPayload_possibleTypes.includes(obj.__typename)
}



const UpdateProjectPayload_possibleTypes: string[] = ['UpdateProjectPayload']
export const isUpdateProjectPayload = (obj?: { __typename?: any } | null): obj is UpdateProjectPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateProjectPayload"')
  return UpdateProjectPayload_possibleTypes.includes(obj.__typename)
}



const UpdatePullRequestPayload_possibleTypes: string[] = ['UpdatePullRequestPayload']
export const isUpdatePullRequestPayload = (obj?: { __typename?: any } | null): obj is UpdatePullRequestPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdatePullRequestPayload"')
  return UpdatePullRequestPayload_possibleTypes.includes(obj.__typename)
}



const UpdatePullRequestReviewCommentPayload_possibleTypes: string[] = ['UpdatePullRequestReviewCommentPayload']
export const isUpdatePullRequestReviewCommentPayload = (obj?: { __typename?: any } | null): obj is UpdatePullRequestReviewCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdatePullRequestReviewCommentPayload"')
  return UpdatePullRequestReviewCommentPayload_possibleTypes.includes(obj.__typename)
}



const UpdatePullRequestReviewPayload_possibleTypes: string[] = ['UpdatePullRequestReviewPayload']
export const isUpdatePullRequestReviewPayload = (obj?: { __typename?: any } | null): obj is UpdatePullRequestReviewPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdatePullRequestReviewPayload"')
  return UpdatePullRequestReviewPayload_possibleTypes.includes(obj.__typename)
}



const UpdateRefPayload_possibleTypes: string[] = ['UpdateRefPayload']
export const isUpdateRefPayload = (obj?: { __typename?: any } | null): obj is UpdateRefPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateRefPayload"')
  return UpdateRefPayload_possibleTypes.includes(obj.__typename)
}



const UpdateRefsPayload_possibleTypes: string[] = ['UpdateRefsPayload']
export const isUpdateRefsPayload = (obj?: { __typename?: any } | null): obj is UpdateRefsPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateRefsPayload"')
  return UpdateRefsPayload_possibleTypes.includes(obj.__typename)
}



const UpdateRepositoryPayload_possibleTypes: string[] = ['UpdateRepositoryPayload']
export const isUpdateRepositoryPayload = (obj?: { __typename?: any } | null): obj is UpdateRepositoryPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateRepositoryPayload"')
  return UpdateRepositoryPayload_possibleTypes.includes(obj.__typename)
}



const UpdateSubscriptionPayload_possibleTypes: string[] = ['UpdateSubscriptionPayload']
export const isUpdateSubscriptionPayload = (obj?: { __typename?: any } | null): obj is UpdateSubscriptionPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateSubscriptionPayload"')
  return UpdateSubscriptionPayload_possibleTypes.includes(obj.__typename)
}



const UpdateTeamDiscussionCommentPayload_possibleTypes: string[] = ['UpdateTeamDiscussionCommentPayload']
export const isUpdateTeamDiscussionCommentPayload = (obj?: { __typename?: any } | null): obj is UpdateTeamDiscussionCommentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateTeamDiscussionCommentPayload"')
  return UpdateTeamDiscussionCommentPayload_possibleTypes.includes(obj.__typename)
}



const UpdateTeamDiscussionPayload_possibleTypes: string[] = ['UpdateTeamDiscussionPayload']
export const isUpdateTeamDiscussionPayload = (obj?: { __typename?: any } | null): obj is UpdateTeamDiscussionPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateTeamDiscussionPayload"')
  return UpdateTeamDiscussionPayload_possibleTypes.includes(obj.__typename)
}



const UpdateTeamReviewAssignmentPayload_possibleTypes: string[] = ['UpdateTeamReviewAssignmentPayload']
export const isUpdateTeamReviewAssignmentPayload = (obj?: { __typename?: any } | null): obj is UpdateTeamReviewAssignmentPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateTeamReviewAssignmentPayload"')
  return UpdateTeamReviewAssignmentPayload_possibleTypes.includes(obj.__typename)
}



const UpdateTopicsPayload_possibleTypes: string[] = ['UpdateTopicsPayload']
export const isUpdateTopicsPayload = (obj?: { __typename?: any } | null): obj is UpdateTopicsPayload => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateTopicsPayload"')
  return UpdateTopicsPayload_possibleTypes.includes(obj.__typename)
}



const User_possibleTypes: string[] = ['User']
export const isUser = (obj?: { __typename?: any } | null): obj is User => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUser"')
  return User_possibleTypes.includes(obj.__typename)
}



const UserBlockedEvent_possibleTypes: string[] = ['UserBlockedEvent']
export const isUserBlockedEvent = (obj?: { __typename?: any } | null): obj is UserBlockedEvent => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUserBlockedEvent"')
  return UserBlockedEvent_possibleTypes.includes(obj.__typename)
}



const UserConnection_possibleTypes: string[] = ['UserConnection']
export const isUserConnection = (obj?: { __typename?: any } | null): obj is UserConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUserConnection"')
  return UserConnection_possibleTypes.includes(obj.__typename)
}



const UserContentEdit_possibleTypes: string[] = ['UserContentEdit']
export const isUserContentEdit = (obj?: { __typename?: any } | null): obj is UserContentEdit => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUserContentEdit"')
  return UserContentEdit_possibleTypes.includes(obj.__typename)
}



const UserContentEditConnection_possibleTypes: string[] = ['UserContentEditConnection']
export const isUserContentEditConnection = (obj?: { __typename?: any } | null): obj is UserContentEditConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUserContentEditConnection"')
  return UserContentEditConnection_possibleTypes.includes(obj.__typename)
}



const UserContentEditEdge_possibleTypes: string[] = ['UserContentEditEdge']
export const isUserContentEditEdge = (obj?: { __typename?: any } | null): obj is UserContentEditEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUserContentEditEdge"')
  return UserContentEditEdge_possibleTypes.includes(obj.__typename)
}



const UserEdge_possibleTypes: string[] = ['UserEdge']
export const isUserEdge = (obj?: { __typename?: any } | null): obj is UserEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUserEdge"')
  return UserEdge_possibleTypes.includes(obj.__typename)
}



const UserStatus_possibleTypes: string[] = ['UserStatus']
export const isUserStatus = (obj?: { __typename?: any } | null): obj is UserStatus => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUserStatus"')
  return UserStatus_possibleTypes.includes(obj.__typename)
}



const UserStatusConnection_possibleTypes: string[] = ['UserStatusConnection']
export const isUserStatusConnection = (obj?: { __typename?: any } | null): obj is UserStatusConnection => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUserStatusConnection"')
  return UserStatusConnection_possibleTypes.includes(obj.__typename)
}



const UserStatusEdge_possibleTypes: string[] = ['UserStatusEdge']
export const isUserStatusEdge = (obj?: { __typename?: any } | null): obj is UserStatusEdge => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isUserStatusEdge"')
  return UserStatusEdge_possibleTypes.includes(obj.__typename)
}



const ViewerHovercardContext_possibleTypes: string[] = ['ViewerHovercardContext']
export const isViewerHovercardContext = (obj?: { __typename?: any } | null): obj is ViewerHovercardContext => {
  if (!obj?.__typename) throw new Error('__typename is missing in "isViewerHovercardContext"')
  return ViewerHovercardContext_possibleTypes.includes(obj.__typename)
}
