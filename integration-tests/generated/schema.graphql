type Query {
  """Some description"""
  repository(name: String!, owner: String): Repository!
  user: User
  account: Account
  coordinates: Point
}

type Repository {
  createdAt: String!
  forks: ForkConnection
}

type ForkConnection {
  edges: [ForkEdge]
}

type ForkEdge {
  cursor: String
  node: Fork
}

type Fork {
  name: String
}

type User {
  """Some description"""
  name: String
  common: String
}

type Subscription {
  user: User
}

union Account = User | Guest

type Guest {
  anonymous: Boolean
  common: String
}

type House implements Point {
  owner: User
  x: String
  y: String
}

type Bank implements Point {
  address: String
  x: String
  y: String
}

interface Point {
  x: String
  y: String
}
