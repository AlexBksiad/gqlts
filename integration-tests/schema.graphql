# Some comment
type Query {
    """
    Some description
    """
    repository(name: String!, owner: String): Repository!
    user: User
}

type Repository {
    createdAt: String!
    forks: ForkConnection
}

type ForkConnection {
    edges: [ForkEdge]
}

type ForkEdge {
    cursor: String
    node: Fork
}

type Fork {
    name: String
}

type User {
    """
    Some description
    """
    name: String
}

# ---

type Subscription {
    user: User
}

##################

extend type Query {
    account: Account
}

union Account = User | Guest

type Guest {
    anonymous: Boolean
}

##################

extend type Query {
    coordinates: Point
}

type House implements Point {
    owner: User
    x: String
    y: String
}

type Bank implements Point {
    address: String
    x: String
    y: String
}

interface Point {
    x: String
    y: String
}
